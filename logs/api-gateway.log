2025-06-30 21:48:09 [main] INFO  c.c.t.api.gateway.GatewayApplication - Starting GatewayApplication using Java 21.0.7 with PID 65597 (/Users/ouyangbaobao/gateway/build/classes/java/main started by ouyangbaobao in /Users/ouyangbaobao/gateway)
2025-06-30 21:48:09 [main] DEBUG c.c.t.api.gateway.GatewayApplication - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-06-30 21:48:09 [main] INFO  c.c.t.api.gateway.GatewayApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-30 21:48:10 [main] WARN  o.s.b.w.r.c.AnnotationConfigReactiveWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanDefinitionStoreException: Failed to parse configuration class [com.citi.tts.api.gateway.GatewayApplication]
2025-06-30 21:48:10 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanDefinitionStoreException: Failed to parse configuration class [com.citi.tts.api.gateway.GatewayApplication]
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:194)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:418)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:290)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:349)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:118)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:791)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:609)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.citi.tts.api.gateway.GatewayApplication.main(GatewayApplication.java:14)
Caused by: org.springframework.context.annotation.ConflictingBeanDefinitionException: Annotation-specified bean name 'monitorController' for bean class [com.citi.tts.api.gateway.monitor.MonitorController] conflicts with existing, non-compatible bean definition of same name and class [com.citi.tts.api.gateway.controller.MonitorController]
	at org.springframework.context.annotation.ClassPathBeanDefinitionScanner.checkCandidate(ClassPathBeanDefinitionScanner.java:361)
	at org.springframework.context.annotation.ClassPathBeanDefinitionScanner.doScan(ClassPathBeanDefinitionScanner.java:288)
	at org.springframework.context.annotation.ComponentScanAnnotationParser.parse(ComponentScanAnnotationParser.java:128)
	at org.springframework.context.annotation.ConfigurationClassParser.doProcessConfigurationClass(ConfigurationClassParser.java:346)
	at org.springframework.context.annotation.ConfigurationClassParser.processConfigurationClass(ConfigurationClassParser.java:281)
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:204)
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:172)
	... 13 common frames omitted
2025-06-30 21:56:21 [main] INFO  c.c.t.api.gateway.GatewayApplication - Starting GatewayApplication using Java 21.0.7 with PID 66118 (/Users/ouyangbaobao/gateway/build/classes/java/main started by ouyangbaobao in /Users/ouyangbaobao/gateway)
2025-06-30 21:56:21 [main] DEBUG c.c.t.api.gateway.GatewayApplication - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-06-30 21:56:21 [main] INFO  c.c.t.api.gateway.GatewayApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-30 21:56:21 [main] WARN  o.s.b.w.r.c.AnnotationConfigReactiveWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanDefinitionStoreException: Failed to parse configuration class [com.citi.tts.api.gateway.GatewayApplication]
2025-06-30 21:56:21 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanDefinitionStoreException: Failed to parse configuration class [com.citi.tts.api.gateway.GatewayApplication]
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:194)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:418)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:290)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:349)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:118)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:791)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:609)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.citi.tts.api.gateway.GatewayApplication.main(GatewayApplication.java:14)
Caused by: org.springframework.context.annotation.ConflictingBeanDefinitionException: Annotation-specified bean name 'monitorController' for bean class [com.citi.tts.api.gateway.monitor.MonitorController] conflicts with existing, non-compatible bean definition of same name and class [com.citi.tts.api.gateway.controller.MonitorController]
	at org.springframework.context.annotation.ClassPathBeanDefinitionScanner.checkCandidate(ClassPathBeanDefinitionScanner.java:361)
	at org.springframework.context.annotation.ClassPathBeanDefinitionScanner.doScan(ClassPathBeanDefinitionScanner.java:288)
	at org.springframework.context.annotation.ComponentScanAnnotationParser.parse(ComponentScanAnnotationParser.java:128)
	at org.springframework.context.annotation.ConfigurationClassParser.doProcessConfigurationClass(ConfigurationClassParser.java:346)
	at org.springframework.context.annotation.ConfigurationClassParser.processConfigurationClass(ConfigurationClassParser.java:281)
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:204)
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:172)
	... 13 common frames omitted
2025-06-30 21:58:28 [main] INFO  c.c.t.api.gateway.GatewayApplication - Starting GatewayApplication using Java 21.0.7 with PID 66321 (/Users/ouyangbaobao/gateway/build/classes/java/main started by ouyangbaobao in /Users/ouyangbaobao/gateway)
2025-06-30 21:58:28 [main] DEBUG c.c.t.api.gateway.GatewayApplication - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-06-30 21:58:28 [main] INFO  c.c.t.api.gateway.GatewayApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-30 21:58:30 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 21:58:30 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 21:58:30 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 21:58:30 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 21:58:30 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 21:58:30 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 21:58:30 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 21:58:30 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 21:58:30 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 21:58:30 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 21:58:30 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 21:58:30 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 21:58:30 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 21:58:30 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 21:58:30 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 21:58:30 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 21:58:30 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 21:58:30 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 21:58:30 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 21:58:30 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 21:58:30 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 21:58:31 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-30 21:58:31 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-30 21:58:31 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 46 ms. Found 0 Redis repository interfaces.
2025-06-30 21:58:31 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=f029f771-243f-30a0-990d-355b1373dce5
2025-06-30 21:58:31 [main] WARN  o.s.b.w.r.c.AnnotationConfigReactiveWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'asyncAuditService' defined in file [/Users/ouyangbaobao/gateway/build/classes/java/main/com/citi/tts/api/gateway/audit/AsyncAuditService.class]: Failed to instantiate [com.citi.tts.api.gateway.audit.AsyncAuditService]: Constructor threw exception
2025-06-30 21:58:31 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-06-30 21:58:31 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'asyncAuditService' defined in file [/Users/ouyangbaobao/gateway/build/classes/java/main/com/citi/tts/api/gateway/audit/AsyncAuditService.class]: Failed to instantiate [com.citi.tts.api.gateway.audit.AsyncAuditService]: Constructor threw exception
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1357)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1242)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:569)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1188)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1123)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.citi.tts.api.gateway.GatewayApplication.main(GatewayApplication.java:14)
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.citi.tts.api.gateway.audit.AsyncAuditService]: Constructor threw exception
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:223)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:122)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1351)
	... 19 common frames omitted
Caused by: java.lang.IllegalArgumentException: null
	at java.base/java.util.concurrent.LinkedBlockingQueue.<init>(LinkedBlockingQueue.java:256)
	at com.citi.tts.api.gateway.audit.AsyncAuditService.<init>(AsyncAuditService.java:77)
	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:197)
	... 21 common frames omitted
2025-06-30 21:59:29 [main] INFO  c.c.t.api.gateway.GatewayApplication - Starting GatewayApplication using Java 21.0.7 with PID 66462 (/Users/ouyangbaobao/gateway/build/classes/java/main started by ouyangbaobao in /Users/ouyangbaobao/gateway)
2025-06-30 21:59:29 [main] DEBUG c.c.t.api.gateway.GatewayApplication - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-06-30 21:59:29 [main] INFO  c.c.t.api.gateway.GatewayApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-30 21:59:30 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 21:59:30 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 21:59:30 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 21:59:30 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 21:59:30 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 21:59:30 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 21:59:30 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 21:59:30 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 21:59:30 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 21:59:30 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 21:59:30 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 21:59:30 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 21:59:30 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 21:59:30 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 21:59:30 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 21:59:31 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 21:59:31 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 21:59:31 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 21:59:31 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 21:59:31 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 21:59:31 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 21:59:31 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-30 21:59:31 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-30 21:59:31 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 44 ms. Found 0 Redis repository interfaces.
2025-06-30 21:59:31 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=f029f771-243f-30a0-990d-355b1373dce5
2025-06-30 21:59:31 [main] WARN  o.s.b.w.r.c.AnnotationConfigReactiveWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'asyncAuditService' defined in file [/Users/ouyangbaobao/gateway/build/classes/java/main/com/citi/tts/api/gateway/audit/AsyncAuditService.class]: Failed to instantiate [com.citi.tts.api.gateway.audit.AsyncAuditService]: Constructor threw exception
2025-06-30 21:59:31 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-06-30 21:59:31 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'asyncAuditService' defined in file [/Users/ouyangbaobao/gateway/build/classes/java/main/com/citi/tts/api/gateway/audit/AsyncAuditService.class]: Failed to instantiate [com.citi.tts.api.gateway.audit.AsyncAuditService]: Constructor threw exception
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1357)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1242)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:569)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1188)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1123)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.citi.tts.api.gateway.GatewayApplication.main(GatewayApplication.java:14)
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.citi.tts.api.gateway.audit.AsyncAuditService]: Constructor threw exception
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:223)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:122)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1351)
	... 19 common frames omitted
Caused by: java.lang.IllegalArgumentException: null
	at java.base/java.util.concurrent.LinkedBlockingQueue.<init>(LinkedBlockingQueue.java:256)
	at com.citi.tts.api.gateway.audit.AsyncAuditService.<init>(AsyncAuditService.java:77)
	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:197)
	... 21 common frames omitted
2025-06-30 22:01:36 [main] INFO  c.c.t.api.gateway.GatewayApplication - Starting GatewayApplication using Java 21.0.7 with PID 66658 (/Users/ouyangbaobao/gateway/build/classes/java/main started by ouyangbaobao in /Users/ouyangbaobao/gateway)
2025-06-30 22:01:36 [main] DEBUG c.c.t.api.gateway.GatewayApplication - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-06-30 22:01:36 [main] INFO  c.c.t.api.gateway.GatewayApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-30 22:01:37 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:01:37 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:01:37 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:01:37 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:01:37 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:01:37 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:01:37 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:01:37 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:01:37 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:01:37 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:01:37 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:01:37 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:01:37 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:01:37 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:01:37 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:01:37 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:01:37 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:01:37 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:01:37 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:01:37 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:01:37 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:01:37 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-30 22:01:37 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-30 22:01:37 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 44 ms. Found 0 Redis repository interfaces.
2025-06-30 22:01:38 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=f029f771-243f-30a0-990d-355b1373dce5
2025-06-30 22:01:38 [async-audit-worker] INFO  c.c.t.a.g.audit.AsyncAuditService - Async audit log processor started
2025-06-30 22:01:38 [main] INFO  c.c.t.a.g.audit.AsyncAuditService - Async audit service initialized - batchSize: 100, flushInterval: 5000ms, queueSize: 10000
2025-06-30 22:01:38 [main] WARN  o.s.b.w.r.c.AnnotationConfigReactiveWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'httpCertificateLoader' defined in file [/Users/ouyangbaobao/gateway/build/classes/java/main/com/citi/tts/api/gateway/cert/HttpCertificateLoader.class]: Unsatisfied dependency expressed through constructor parameter 0: No qualifying bean of type 'java.lang.String' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
2025-06-30 22:01:38 [main] INFO  c.c.t.a.g.audit.AsyncAuditService - Shutting down async audit service...
2025-06-30 22:01:43 [main] INFO  c.c.t.a.g.audit.AsyncAuditService - Async audit service shutdown completed
2025-06-30 22:01:43 [async-audit-worker] INFO  c.c.t.a.g.audit.AsyncAuditService - Async audit log processor stopped
2025-06-30 22:01:43 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-06-30 22:01:43 [main] ERROR o.s.b.d.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 0 of constructor in com.citi.tts.api.gateway.cert.HttpCertificateLoader required a bean of type 'java.lang.String' that could not be found.


Action:

Consider defining a bean of type 'java.lang.String' in your configuration.

2025-06-30 22:04:05 [main] INFO  c.c.t.api.gateway.GatewayApplication - Starting GatewayApplication using Java 21.0.7 with PID 66958 (/Users/ouyangbaobao/gateway/build/classes/java/main started by ouyangbaobao in /Users/ouyangbaobao/gateway)
2025-06-30 22:04:05 [main] DEBUG c.c.t.api.gateway.GatewayApplication - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-06-30 22:04:05 [main] INFO  c.c.t.api.gateway.GatewayApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-30 22:04:07 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:04:07 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:04:07 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:04:07 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:04:07 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:04:07 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:04:07 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:04:07 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:04:07 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:04:07 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:04:07 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:04:07 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:04:07 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:04:07 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:04:07 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:04:07 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:04:07 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:04:07 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:04:07 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:04:07 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:04:07 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:04:07 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-30 22:04:07 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-30 22:04:07 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 43 ms. Found 0 Redis repository interfaces.
2025-06-30 22:04:08 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=f029f771-243f-30a0-990d-355b1373dce5
2025-06-30 22:04:08 [async-audit-worker] INFO  c.c.t.a.g.audit.AsyncAuditService - Async audit log processor started
2025-06-30 22:04:08 [main] INFO  c.c.t.a.g.audit.AsyncAuditService - Async audit service initialized - batchSize: 100, flushInterval: 5000ms, queueSize: 10000
2025-06-30 22:04:08 [main] WARN  o.s.b.w.r.c.AnnotationConfigReactiveWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'httpCertificateLoader' defined in file [/Users/ouyangbaobao/gateway/build/classes/java/main/com/citi/tts/api/gateway/cert/HttpCertificateLoader.class]: Unexpected exception during bean creation
2025-06-30 22:04:08 [main] INFO  c.c.t.a.g.audit.AsyncAuditService - Shutting down async audit service...
2025-06-30 22:04:13 [async-audit-worker] INFO  c.c.t.a.g.audit.AsyncAuditService - Async audit log processor stopped
2025-06-30 22:04:13 [main] INFO  c.c.t.a.g.audit.AsyncAuditService - Async audit service shutdown completed
2025-06-30 22:04:13 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-06-30 22:04:13 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'httpCertificateLoader' defined in file [/Users/ouyangbaobao/gateway/build/classes/java/main/com/citi/tts/api/gateway/cert/HttpCertificateLoader.class]: Unexpected exception during bean creation
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1188)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1123)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.citi.tts.api.gateway.GatewayApplication.main(GatewayApplication.java:14)
Caused by: org.springframework.util.PlaceholderResolutionException: Could not resolve placeholder 'certificate.endpoint.url' in value "${certificate.endpoint.url}"
	at org.springframework.util.PlaceholderResolutionException.withValue(PlaceholderResolutionException.java:81)
	at org.springframework.util.PlaceholderParser$ParsedValue.resolve(PlaceholderParser.java:423)
	at org.springframework.util.PlaceholderParser.replacePlaceholders(PlaceholderParser.java:128)
	at org.springframework.util.PropertyPlaceholderHelper.parseStringValue(PropertyPlaceholderHelper.java:118)
	at org.springframework.util.PropertyPlaceholderHelper.replacePlaceholders(PropertyPlaceholderHelper.java:114)
	at org.springframework.core.env.AbstractPropertyResolver.doResolvePlaceholders(AbstractPropertyResolver.java:293)
	at org.springframework.core.env.AbstractPropertyResolver.resolveRequiredPlaceholders(AbstractPropertyResolver.java:264)
	at org.springframework.context.support.PropertySourcesPlaceholderConfigurer.lambda$processProperties$0(PropertySourcesPlaceholderConfigurer.java:186)
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveEmbeddedValue(AbstractBeanFactory.java:971)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1650)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1232)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:569)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	... 16 common frames omitted
2025-06-30 22:05:27 [main] INFO  c.c.t.api.gateway.GatewayApplication - Starting GatewayApplication using Java 21.0.7 with PID 67099 (/Users/ouyangbaobao/gateway/build/classes/java/main started by ouyangbaobao in /Users/ouyangbaobao/gateway)
2025-06-30 22:05:27 [main] DEBUG c.c.t.api.gateway.GatewayApplication - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-06-30 22:05:27 [main] INFO  c.c.t.api.gateway.GatewayApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-30 22:05:29 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:05:29 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:05:29 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:05:29 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:05:29 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:05:29 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:05:29 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:05:29 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:05:29 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:05:29 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:05:29 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:05:29 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:05:29 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:05:29 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:05:29 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:05:29 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:05:29 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:05:29 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:05:29 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:05:29 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:05:29 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:05:29 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-30 22:05:29 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-30 22:05:29 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 44 ms. Found 0 Redis repository interfaces.
2025-06-30 22:05:29 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=f029f771-243f-30a0-990d-355b1373dce5
2025-06-30 22:05:30 [async-audit-worker] INFO  c.c.t.a.g.audit.AsyncAuditService - Async audit log processor started
2025-06-30 22:05:30 [main] INFO  c.c.t.a.g.audit.AsyncAuditService - Async audit service initialized - batchSize: 100, flushInterval: 5000ms, queueSize: 10000
2025-06-30 22:05:30 [main] INFO  c.c.t.a.g.config.WebClientConfig - Created optimized WebClient: normal-service - maxConnections: 8, maxIdleConnections: 3, connectTimeout: 2500ms, readTimeout: 5000ms, writeTimeout: 3000ms
2025-06-30 22:05:30 [main] INFO  c.c.t.a.g.config.RateLimitConfig - === 限流配置验证 ===
2025-06-30 22:05:30 [main] INFO  c.c.t.a.g.config.RateLimitConfig - 全局默认QPS: 80, Burst: 120
2025-06-30 22:05:30 [main] INFO  c.c.t.a.g.config.RateLimitConfig - IP限流: 30 QPS, 50 Burst, 启用: true
2025-06-30 22:05:30 [main] INFO  c.c.t.a.g.config.RateLimitConfig - 用户限流: 20 QPS, 35 Burst, 启用: true
2025-06-30 22:05:30 [main] INFO  c.c.t.a.g.config.RateLimitConfig - URL限流: 40 QPS, 60 Burst, 启用: true
2025-06-30 22:05:30 [main] INFO  c.c.t.a.g.config.RateLimitConfig - API权重限流启用: true
2025-06-30 22:05:30 [main] INFO  c.c.t.a.g.config.RateLimitConfig - API权重总QPS: 110 (允许轻微超载)
2025-06-30 22:05:30 [main] INFO  c.c.t.a.g.config.RateLimitConfig - === 限流配置验证完成 ===
2025-06-30 22:05:30 [main] WARN  o.s.b.w.r.c.AnnotationConfigReactiveWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'loadBalancerController': Unsatisfied dependency expressed through field 'advancedLoadBalancer': Error creating bean with name 'advancedLoadBalancer': Unsatisfied dependency expressed through field 'loadBalancerClient': No qualifying bean of type 'org.springframework.cloud.client.loadbalancer.LoadBalancerClient' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
2025-06-30 22:05:30 [main] INFO  c.c.t.a.g.audit.AsyncAuditService - Shutting down async audit service...
2025-06-30 22:05:35 [main] INFO  c.c.t.a.g.audit.AsyncAuditService - Async audit service shutdown completed
2025-06-30 22:05:35 [async-audit-worker] INFO  c.c.t.a.g.audit.AsyncAuditService - Async audit log processor stopped
2025-06-30 22:05:36 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-06-30 22:05:36 [main] ERROR o.s.b.d.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field loadBalancerClient in com.citi.tts.api.gateway.loadbalancer.AdvancedLoadBalancer required a bean of type 'org.springframework.cloud.client.loadbalancer.LoadBalancerClient' that could not be found.

The injection point has the following annotations:
	- @org.springframework.beans.factory.annotation.Autowired(required=true)


Action:

Consider defining a bean of type 'org.springframework.cloud.client.loadbalancer.LoadBalancerClient' in your configuration.

2025-06-30 22:10:18 [main] INFO  c.c.t.api.gateway.GatewayApplication - Starting GatewayApplication using Java 21.0.7 with PID 67640 (/Users/ouyangbaobao/gateway/build/classes/java/main started by ouyangbaobao in /Users/ouyangbaobao/gateway)
2025-06-30 22:10:18 [main] DEBUG c.c.t.api.gateway.GatewayApplication - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-06-30 22:10:18 [main] INFO  c.c.t.api.gateway.GatewayApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-30 22:10:20 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:10:20 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:10:20 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:10:20 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:10:20 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:10:20 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:10:20 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:10:20 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:10:20 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:10:20 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:10:20 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:10:20 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:10:20 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:10:20 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:10:20 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:10:20 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:10:20 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:10:20 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:10:20 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:10:20 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:10:20 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:10:20 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-30 22:10:20 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-30 22:10:20 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 43 ms. Found 0 Redis repository interfaces.
2025-06-30 22:10:20 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=f643df59-5c06-3b39-85d4-5c2fdf60d43f
2025-06-30 22:10:21 [main] INFO  c.c.t.a.g.audit.AsyncAuditService - Async audit service initialized - batchSize: 100, flushInterval: 5000ms, queueSize: 10000
2025-06-30 22:10:21 [async-audit-worker] INFO  c.c.t.a.g.audit.AsyncAuditService - Async audit log processor started
2025-06-30 22:10:21 [main] INFO  c.c.t.a.g.config.WebClientConfig - Created optimized WebClient: normal-service - maxConnections: 8, maxIdleConnections: 3, connectTimeout: 2500ms, readTimeout: 5000ms, writeTimeout: 3000ms
2025-06-30 22:10:21 [main] INFO  c.c.t.a.g.config.RateLimitConfig - === 限流配置验证 ===
2025-06-30 22:10:21 [main] INFO  c.c.t.a.g.config.RateLimitConfig - 全局默认QPS: 80, Burst: 120
2025-06-30 22:10:21 [main] INFO  c.c.t.a.g.config.RateLimitConfig - IP限流: 30 QPS, 50 Burst, 启用: true
2025-06-30 22:10:21 [main] INFO  c.c.t.a.g.config.RateLimitConfig - 用户限流: 20 QPS, 35 Burst, 启用: true
2025-06-30 22:10:21 [main] INFO  c.c.t.a.g.config.RateLimitConfig - URL限流: 40 QPS, 60 Burst, 启用: true
2025-06-30 22:10:21 [main] INFO  c.c.t.a.g.config.RateLimitConfig - API权重限流启用: true
2025-06-30 22:10:21 [main] INFO  c.c.t.a.g.config.RateLimitConfig - API权重总QPS: 110 (允许轻微超载)
2025-06-30 22:10:21 [main] INFO  c.c.t.a.g.config.RateLimitConfig - === 限流配置验证完成 ===
2025-06-30 22:10:21 [main] WARN  o.s.b.w.r.c.AnnotationConfigReactiveWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'monitorController': Unsatisfied dependency expressed through field 'circuitBreakerRegistry': Error creating bean with name 'circuitBreakerRegistry' defined in class path resource [com/citi/tts/api/gateway/config/GatewayCircuitBreakerConfig.class]: Unsatisfied dependency expressed through method 'circuitBreakerRegistry' parameter 0: No qualifying bean of type 'com.citi.tts.api.gateway.config.GatewayCircuitBreakerConfig$CircuitBreakerProperties' available: expected single matching bean but found 2: gatewayCircuitBreakerConfig.CircuitBreakerProperties,circuitBreakerProperties
2025-06-30 22:10:21 [main] INFO  c.c.t.a.g.audit.AsyncAuditService - Shutting down async audit service...
2025-06-30 22:10:26 [main] INFO  c.c.t.a.g.audit.AsyncAuditService - Async audit service shutdown completed
2025-06-30 22:10:26 [async-audit-worker] INFO  c.c.t.a.g.audit.AsyncAuditService - Async audit log processor stopped
2025-06-30 22:10:26 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-06-30 22:10:26 [main] ERROR o.s.b.d.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 0 of method circuitBreakerRegistry in com.citi.tts.api.gateway.config.GatewayCircuitBreakerConfig required a single bean, but 2 were found:
	- gatewayCircuitBreakerConfig.CircuitBreakerProperties: defined in file [/Users/ouyangbaobao/gateway/build/classes/java/main/com/citi/tts/api/gateway/config/GatewayCircuitBreakerConfig$CircuitBreakerProperties.class]
	- circuitBreakerProperties: defined by method 'circuitBreakerProperties' in class path resource [com/citi/tts/api/gateway/config/GatewayCircuitBreakerConfig.class]

This may be due to missing parameter name information

Action:

Consider marking one of the beans as @Primary, updating the consumer to accept multiple beans, or using @Qualifier to identify the bean that should be consumed

Ensure that your compiler is configured to use the '-parameters' flag.
You may need to update both your build tool settings as well as your IDE.
(See https://github.com/spring-projects/spring-framework/wiki/Spring-Framework-6.1-Release-Notes#parameter-name-retention)


2025-06-30 22:12:12 [main] INFO  c.c.t.api.gateway.GatewayApplication - Starting GatewayApplication using Java 21.0.7 with PID 67821 (/Users/ouyangbaobao/gateway/build/classes/java/main started by ouyangbaobao in /Users/ouyangbaobao/gateway)
2025-06-30 22:12:12 [main] DEBUG c.c.t.api.gateway.GatewayApplication - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-06-30 22:12:12 [main] INFO  c.c.t.api.gateway.GatewayApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-30 22:12:13 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:12:13 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:12:13 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:12:13 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:12:13 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:12:13 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:12:13 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:12:13 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:12:13 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:12:13 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:12:13 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:12:13 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:12:13 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:12:13 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:12:13 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:12:13 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:12:13 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:12:13 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:12:13 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:12:13 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:12:13 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:12:14 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-30 22:12:14 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-30 22:12:15 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 192 ms. Found 0 Redis repository interfaces.
2025-06-30 22:12:16 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=f643df59-5c06-3b39-85d4-5c2fdf60d43f
2025-06-30 22:12:16 [async-audit-worker] INFO  c.c.t.a.g.audit.AsyncAuditService - Async audit log processor started
2025-06-30 22:12:16 [main] INFO  c.c.t.a.g.audit.AsyncAuditService - Async audit service initialized - batchSize: 100, flushInterval: 5000ms, queueSize: 10000
2025-06-30 22:12:16 [main] INFO  c.c.t.a.g.config.WebClientConfig - Created optimized WebClient: normal-service - maxConnections: 8, maxIdleConnections: 3, connectTimeout: 2500ms, readTimeout: 5000ms, writeTimeout: 3000ms
2025-06-30 22:12:16 [main] INFO  c.c.t.a.g.config.RateLimitConfig - === 限流配置验证 ===
2025-06-30 22:12:16 [main] INFO  c.c.t.a.g.config.RateLimitConfig - 全局默认QPS: 80, Burst: 120
2025-06-30 22:12:16 [main] INFO  c.c.t.a.g.config.RateLimitConfig - IP限流: 30 QPS, 50 Burst, 启用: true
2025-06-30 22:12:16 [main] INFO  c.c.t.a.g.config.RateLimitConfig - 用户限流: 20 QPS, 35 Burst, 启用: true
2025-06-30 22:12:16 [main] INFO  c.c.t.a.g.config.RateLimitConfig - URL限流: 40 QPS, 60 Burst, 启用: true
2025-06-30 22:12:16 [main] INFO  c.c.t.a.g.config.RateLimitConfig - API权重限流启用: true
2025-06-30 22:12:16 [main] INFO  c.c.t.a.g.config.RateLimitConfig - API权重总QPS: 110 (允许轻微超载)
2025-06-30 22:12:16 [main] INFO  c.c.t.a.g.config.RateLimitConfig - === 限流配置验证完成 ===
2025-06-30 22:12:17 [main] WARN  o.s.b.w.r.c.AnnotationConfigReactiveWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'monitorController': Unsatisfied dependency expressed through field 'circuitBreakerRegistry': Error creating bean with name 'circuitBreakerRegistry' defined in class path resource [com/citi/tts/api/gateway/config/GatewayCircuitBreakerConfig.class]: Unsatisfied dependency expressed through method 'circuitBreakerRegistry' parameter 0: Error creating bean with name 'circuitBreakerProperties': Could not bind properties to 'GatewayCircuitBreakerConfig.CircuitBreakerProperties' : prefix=gateway.circuit-breaker, ignoreInvalidFields=false, ignoreUnknownFields=true
2025-06-30 22:12:17 [main] INFO  c.c.t.a.g.audit.AsyncAuditService - Shutting down async audit service...
2025-06-30 22:12:22 [main] INFO  c.c.t.a.g.audit.AsyncAuditService - Async audit service shutdown completed
2025-06-30 22:12:22 [async-audit-worker] INFO  c.c.t.a.g.audit.AsyncAuditService - Async audit log processor stopped
2025-06-30 22:12:22 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-06-30 22:12:22 [main] ERROR o.s.b.d.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Failed to bind properties under 'gateway.circuit-breaker.instances.coreapi.wait-duration-in-open-state' to int:

    Property: gateway.circuit-breaker.instances.coreapi.wait-duration-in-open-state
    Value: "5s"
    Origin: class path resource [application.yml] - 60:38
    Reason: failed to convert java.lang.String to int (caused by java.lang.NumberFormatException: For input string: "5s")

Action:

Update your application's configuration

2025-06-30 22:13:58 [main] INFO  c.c.t.api.gateway.GatewayApplication - Starting GatewayApplication using Java 21.0.7 with PID 68055 (/Users/ouyangbaobao/gateway/build/classes/java/main started by ouyangbaobao in /Users/ouyangbaobao/gateway)
2025-06-30 22:13:58 [main] DEBUG c.c.t.api.gateway.GatewayApplication - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-06-30 22:13:58 [main] INFO  c.c.t.api.gateway.GatewayApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-30 22:13:59 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:13:59 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:13:59 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:13:59 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:13:59 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:13:59 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:13:59 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:13:59 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:13:59 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:13:59 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:13:59 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:13:59 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:13:59 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:13:59 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:13:59 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:13:59 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:13:59 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:13:59 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:13:59 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:13:59 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:13:59 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:13:59 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-30 22:13:59 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-30 22:14:00 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 44 ms. Found 0 Redis repository interfaces.
2025-06-30 22:14:00 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=f643df59-5c06-3b39-85d4-5c2fdf60d43f
2025-06-30 22:14:00 [async-audit-worker] INFO  c.c.t.a.g.audit.AsyncAuditService - Async audit log processor started
2025-06-30 22:14:00 [main] INFO  c.c.t.a.g.audit.AsyncAuditService - Async audit service initialized - batchSize: 100, flushInterval: 5000ms, queueSize: 10000
2025-06-30 22:14:00 [main] INFO  c.c.t.a.g.config.WebClientConfig - Created optimized WebClient: normal-service - maxConnections: 8, maxIdleConnections: 3, connectTimeout: 2500ms, readTimeout: 5000ms, writeTimeout: 3000ms
2025-06-30 22:14:01 [main] INFO  c.c.t.a.g.config.RateLimitConfig - === 限流配置验证 ===
2025-06-30 22:14:01 [main] INFO  c.c.t.a.g.config.RateLimitConfig - 全局默认QPS: 80, Burst: 120
2025-06-30 22:14:01 [main] INFO  c.c.t.a.g.config.RateLimitConfig - IP限流: 30 QPS, 50 Burst, 启用: true
2025-06-30 22:14:01 [main] INFO  c.c.t.a.g.config.RateLimitConfig - 用户限流: 20 QPS, 35 Burst, 启用: true
2025-06-30 22:14:01 [main] INFO  c.c.t.a.g.config.RateLimitConfig - URL限流: 40 QPS, 60 Burst, 启用: true
2025-06-30 22:14:01 [main] INFO  c.c.t.a.g.config.RateLimitConfig - API权重限流启用: true
2025-06-30 22:14:01 [main] INFO  c.c.t.a.g.config.RateLimitConfig - API权重总QPS: 110 (允许轻微超载)
2025-06-30 22:14:01 [main] INFO  c.c.t.a.g.config.RateLimitConfig - === 限流配置验证完成 ===
2025-06-30 22:14:01 [main] WARN  o.s.b.w.r.c.AnnotationConfigReactiveWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'monitorController': Unsatisfied dependency expressed through field 'circuitBreakerRegistry': Error creating bean with name 'circuitBreakerRegistry' defined in class path resource [com/citi/tts/api/gateway/config/GatewayCircuitBreakerConfig.class]: Unsatisfied dependency expressed through method 'circuitBreakerRegistry' parameter 0: Error creating bean with name 'circuitBreakerProperties': Could not bind properties to 'GatewayCircuitBreakerConfig.CircuitBreakerProperties' : prefix=gateway.circuit-breaker, ignoreInvalidFields=false, ignoreUnknownFields=true
2025-06-30 22:14:01 [main] INFO  c.c.t.a.g.audit.AsyncAuditService - Shutting down async audit service...
2025-06-30 22:14:06 [async-audit-worker] INFO  c.c.t.a.g.audit.AsyncAuditService - Async audit log processor stopped
2025-06-30 22:14:06 [main] INFO  c.c.t.a.g.audit.AsyncAuditService - Async audit service shutdown completed
2025-06-30 22:14:06 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-06-30 22:14:06 [main] ERROR o.s.b.d.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Failed to bind properties under 'gateway.circuit-breaker.instances.coreapi.slow-call-duration-threshold' to int:

    Property: gateway.circuit-breaker.instances.coreapi.slow-call-duration-threshold
    Value: "2s"
    Origin: class path resource [application.yml] - 62:39
    Reason: failed to convert java.lang.String to int (caused by java.lang.NumberFormatException: For input string: "2s")

Action:

Update your application's configuration

2025-06-30 22:15:23 [main] INFO  c.c.t.api.gateway.GatewayApplication - Starting GatewayApplication using Java 21.0.7 with PID 68219 (/Users/ouyangbaobao/gateway/build/classes/java/main started by ouyangbaobao in /Users/ouyangbaobao/gateway)
2025-06-30 22:15:23 [main] DEBUG c.c.t.api.gateway.GatewayApplication - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-06-30 22:15:23 [main] INFO  c.c.t.api.gateway.GatewayApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-30 22:15:25 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:15:25 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:15:25 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:15:25 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:15:25 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:15:25 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:15:25 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:15:25 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:15:25 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:15:25 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:15:25 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:15:25 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:15:25 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:15:25 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:15:25 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:15:25 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:15:25 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:15:25 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:15:25 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:15:25 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:15:25 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:15:25 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-30 22:15:25 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-30 22:15:25 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 43 ms. Found 0 Redis repository interfaces.
2025-06-30 22:15:26 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=f643df59-5c06-3b39-85d4-5c2fdf60d43f
2025-06-30 22:15:26 [async-audit-worker] INFO  c.c.t.a.g.audit.AsyncAuditService - Async audit log processor started
2025-06-30 22:15:26 [main] INFO  c.c.t.a.g.audit.AsyncAuditService - Async audit service initialized - batchSize: 100, flushInterval: 5000ms, queueSize: 10000
2025-06-30 22:15:26 [main] INFO  c.c.t.a.g.config.WebClientConfig - Created optimized WebClient: normal-service - maxConnections: 8, maxIdleConnections: 3, connectTimeout: 2500ms, readTimeout: 5000ms, writeTimeout: 3000ms
2025-06-30 22:15:26 [main] INFO  c.c.t.a.g.config.RateLimitConfig - === 限流配置验证 ===
2025-06-30 22:15:26 [main] INFO  c.c.t.a.g.config.RateLimitConfig - 全局默认QPS: 80, Burst: 120
2025-06-30 22:15:26 [main] INFO  c.c.t.a.g.config.RateLimitConfig - IP限流: 30 QPS, 50 Burst, 启用: true
2025-06-30 22:15:26 [main] INFO  c.c.t.a.g.config.RateLimitConfig - 用户限流: 20 QPS, 35 Burst, 启用: true
2025-06-30 22:15:26 [main] INFO  c.c.t.a.g.config.RateLimitConfig - URL限流: 40 QPS, 60 Burst, 启用: true
2025-06-30 22:15:26 [main] INFO  c.c.t.a.g.config.RateLimitConfig - API权重限流启用: true
2025-06-30 22:15:26 [main] INFO  c.c.t.a.g.config.RateLimitConfig - API权重总QPS: 110 (允许轻微超载)
2025-06-30 22:15:26 [main] INFO  c.c.t.a.g.config.RateLimitConfig - === 限流配置验证完成 ===
2025-06-30 22:15:27 [main] INFO  c.c.t.a.g.services.ApiRoutingService - API priority map initialized with 15 entries
2025-06-30 22:15:27 [main] INFO  c.c.t.a.g.config.RateLimitConfig - === 限流配置验证 ===
2025-06-30 22:15:27 [main] INFO  c.c.t.a.g.config.RateLimitConfig - 全局默认QPS: 80, Burst: 120
2025-06-30 22:15:27 [main] INFO  c.c.t.a.g.config.RateLimitConfig - IP限流: 30 QPS, 50 Burst, 启用: true
2025-06-30 22:15:27 [main] INFO  c.c.t.a.g.config.RateLimitConfig - 用户限流: 20 QPS, 35 Burst, 启用: true
2025-06-30 22:15:27 [main] INFO  c.c.t.a.g.config.RateLimitConfig - URL限流: 40 QPS, 60 Burst, 启用: true
2025-06-30 22:15:27 [main] INFO  c.c.t.a.g.config.RateLimitConfig - API权重限流启用: true
2025-06-30 22:15:27 [main] INFO  c.c.t.a.g.config.RateLimitConfig - API权重总QPS: 110 (允许轻微超载)
2025-06-30 22:15:27 [main] INFO  c.c.t.a.g.config.RateLimitConfig - === 限流配置验证完成 ===
2025-06-30 22:15:27 [main] WARN  o.s.b.w.r.c.AnnotationConfigReactiveWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'serviceDegradationController': Unsatisfied dependency expressed through field 'degradationService': Error creating bean with name 'serviceDegradationService': Unsatisfied dependency expressed through field 'coreFallbackHandler': Error creating bean with name 'coreServiceFallbackHandlerImpl': Unsatisfied dependency expressed through field 'redisTemplate': No qualifying bean of type 'org.springframework.data.redis.core.ReactiveRedisTemplate<java.lang.String, java.lang.Object>' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
2025-06-30 22:15:27 [main] INFO  c.c.t.a.g.audit.AsyncAuditService - Shutting down async audit service...
2025-06-30 22:15:32 [async-audit-worker] INFO  c.c.t.a.g.audit.AsyncAuditService - Async audit log processor stopped
2025-06-30 22:15:32 [main] INFO  c.c.t.a.g.audit.AsyncAuditService - Async audit service shutdown completed
2025-06-30 22:15:32 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-06-30 22:15:32 [main] ERROR o.s.b.d.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field redisTemplate in com.citi.tts.api.gateway.service.impl.CoreServiceFallbackHandlerImpl required a bean of type 'org.springframework.data.redis.core.ReactiveRedisTemplate' that could not be found.

The injection point has the following annotations:
	- @org.springframework.beans.factory.annotation.Autowired(required=true)


Action:

Consider defining a bean of type 'org.springframework.data.redis.core.ReactiveRedisTemplate' in your configuration.

2025-06-30 22:17:57 [main] INFO  c.c.t.api.gateway.GatewayApplication - Starting GatewayApplication using Java 21.0.7 with PID 68528 (/Users/ouyangbaobao/gateway/build/classes/java/main started by ouyangbaobao in /Users/ouyangbaobao/gateway)
2025-06-30 22:17:57 [main] DEBUG c.c.t.api.gateway.GatewayApplication - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-06-30 22:17:57 [main] INFO  c.c.t.api.gateway.GatewayApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-30 22:17:59 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:17:59 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:17:59 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:17:59 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:17:59 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:17:59 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:17:59 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:17:59 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:17:59 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:17:59 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:17:59 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:17:59 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:17:59 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:17:59 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:17:59 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:17:59 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:17:59 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:17:59 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:17:59 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:17:59 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:17:59 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:17:59 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-30 22:17:59 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-30 22:17:59 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 43 ms. Found 0 Redis repository interfaces.
2025-06-30 22:17:59 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=f643df59-5c06-3b39-85d4-5c2fdf60d43f
2025-06-30 22:18:00 [async-audit-worker] INFO  c.c.t.a.g.audit.AsyncAuditService - Async audit log processor started
2025-06-30 22:18:00 [main] INFO  c.c.t.a.g.audit.AsyncAuditService - Async audit service initialized - batchSize: 100, flushInterval: 5000ms, queueSize: 10000
2025-06-30 22:18:01 [main] INFO  c.c.t.a.g.config.WebClientConfig - Created optimized WebClient: normal-service - maxConnections: 8, maxIdleConnections: 3, connectTimeout: 2500ms, readTimeout: 5000ms, writeTimeout: 3000ms
2025-06-30 22:18:01 [main] INFO  c.c.t.a.g.config.RateLimitConfig - === 限流配置验证 ===
2025-06-30 22:18:01 [main] INFO  c.c.t.a.g.config.RateLimitConfig - 全局默认QPS: 80, Burst: 120
2025-06-30 22:18:01 [main] INFO  c.c.t.a.g.config.RateLimitConfig - IP限流: 30 QPS, 50 Burst, 启用: true
2025-06-30 22:18:01 [main] INFO  c.c.t.a.g.config.RateLimitConfig - 用户限流: 20 QPS, 35 Burst, 启用: true
2025-06-30 22:18:01 [main] INFO  c.c.t.a.g.config.RateLimitConfig - URL限流: 40 QPS, 60 Burst, 启用: true
2025-06-30 22:18:01 [main] INFO  c.c.t.a.g.config.RateLimitConfig - API权重限流启用: true
2025-06-30 22:18:01 [main] INFO  c.c.t.a.g.config.RateLimitConfig - API权重总QPS: 110 (允许轻微超载)
2025-06-30 22:18:01 [main] INFO  c.c.t.a.g.config.RateLimitConfig - === 限流配置验证完成 ===
2025-06-30 22:18:01 [main] INFO  c.c.t.a.g.services.ApiRoutingService - API priority map initialized with 15 entries
2025-06-30 22:18:01 [main] INFO  c.c.t.a.g.config.RateLimitConfig - === 限流配置验证 ===
2025-06-30 22:18:01 [main] INFO  c.c.t.a.g.config.RateLimitConfig - 全局默认QPS: 80, Burst: 120
2025-06-30 22:18:01 [main] INFO  c.c.t.a.g.config.RateLimitConfig - IP限流: 30 QPS, 50 Burst, 启用: true
2025-06-30 22:18:01 [main] INFO  c.c.t.a.g.config.RateLimitConfig - 用户限流: 20 QPS, 35 Burst, 启用: true
2025-06-30 22:18:01 [main] INFO  c.c.t.a.g.config.RateLimitConfig - URL限流: 40 QPS, 60 Burst, 启用: true
2025-06-30 22:18:01 [main] INFO  c.c.t.a.g.config.RateLimitConfig - API权重限流启用: true
2025-06-30 22:18:01 [main] INFO  c.c.t.a.g.config.RateLimitConfig - API权重总QPS: 110 (允许轻微超载)
2025-06-30 22:18:01 [main] INFO  c.c.t.a.g.config.RateLimitConfig - === 限流配置验证完成 ===
2025-06-30 22:18:02 [main] WARN  o.s.b.w.r.c.AnnotationConfigReactiveWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'traceController': Unsatisfied dependency expressed through field 'traceReporter': Error creating bean with name 'traceReporter': Unsatisfied dependency expressed through field 'webClient': No qualifying bean of type 'org.springframework.web.reactive.function.client.WebClient' available: expected single matching bean but found 5: coreServiceWebClient,importantServiceWebClient,normalServiceWebClient,nonCoreServiceWebClient,defaultWebClient
2025-06-30 22:18:02 [main] INFO  c.c.t.a.g.audit.AsyncAuditService - Shutting down async audit service...
2025-06-30 22:18:07 [main] INFO  c.c.t.a.g.audit.AsyncAuditService - Async audit service shutdown completed
2025-06-30 22:18:07 [async-audit-worker] INFO  c.c.t.a.g.audit.AsyncAuditService - Async audit log processor stopped
2025-06-30 22:18:07 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-06-30 22:18:07 [main] ERROR o.s.b.d.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field webClient in com.citi.tts.api.gateway.tracing.TraceReporter required a single bean, but 5 were found:
	- coreServiceWebClient: defined by method 'coreServiceWebClient' in class path resource [com/citi/tts/api/gateway/config/WebClientConfig.class]
	- importantServiceWebClient: defined by method 'importantServiceWebClient' in class path resource [com/citi/tts/api/gateway/config/WebClientConfig.class]
	- normalServiceWebClient: defined by method 'normalServiceWebClient' in class path resource [com/citi/tts/api/gateway/config/WebClientConfig.class]
	- nonCoreServiceWebClient: defined by method 'nonCoreServiceWebClient' in class path resource [com/citi/tts/api/gateway/config/WebClientConfig.class]
	- defaultWebClient: defined by method 'defaultWebClient' in class path resource [com/citi/tts/api/gateway/config/WebClientConfig.class]

This may be due to missing parameter name information

Action:

Consider marking one of the beans as @Primary, updating the consumer to accept multiple beans, or using @Qualifier to identify the bean that should be consumed

Ensure that your compiler is configured to use the '-parameters' flag.
You may need to update both your build tool settings as well as your IDE.
(See https://github.com/spring-projects/spring-framework/wiki/Spring-Framework-6.1-Release-Notes#parameter-name-retention)


2025-06-30 22:19:27 [main] INFO  c.c.t.api.gateway.GatewayApplication - Starting GatewayApplication using Java 21.0.7 with PID 68693 (/Users/ouyangbaobao/gateway/build/classes/java/main started by ouyangbaobao in /Users/ouyangbaobao/gateway)
2025-06-30 22:19:27 [main] DEBUG c.c.t.api.gateway.GatewayApplication - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-06-30 22:19:27 [main] INFO  c.c.t.api.gateway.GatewayApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-30 22:19:29 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:19:29 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:19:29 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:19:29 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:19:29 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:19:29 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:19:29 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:19:29 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:19:29 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:19:29 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:19:29 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:19:29 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:19:29 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:19:29 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:19:29 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:19:29 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:19:29 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:19:29 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:19:29 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:19:29 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:19:29 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:19:29 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-30 22:19:29 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-30 22:19:29 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 43 ms. Found 0 Redis repository interfaces.
2025-06-30 22:19:29 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=f643df59-5c06-3b39-85d4-5c2fdf60d43f
2025-06-30 22:19:30 [async-audit-worker] INFO  c.c.t.a.g.audit.AsyncAuditService - Async audit log processor started
2025-06-30 22:19:30 [main] INFO  c.c.t.a.g.audit.AsyncAuditService - Async audit service initialized - batchSize: 100, flushInterval: 5000ms, queueSize: 10000
2025-06-30 22:19:30 [main] INFO  c.c.t.a.g.config.WebClientConfig - Created optimized WebClient: normal-service - maxConnections: 8, maxIdleConnections: 3, connectTimeout: 2500ms, readTimeout: 5000ms, writeTimeout: 3000ms
2025-06-30 22:19:31 [main] INFO  c.c.t.a.g.config.RateLimitConfig - === 限流配置验证 ===
2025-06-30 22:19:31 [main] INFO  c.c.t.a.g.config.RateLimitConfig - 全局默认QPS: 80, Burst: 120
2025-06-30 22:19:31 [main] INFO  c.c.t.a.g.config.RateLimitConfig - IP限流: 30 QPS, 50 Burst, 启用: true
2025-06-30 22:19:31 [main] INFO  c.c.t.a.g.config.RateLimitConfig - 用户限流: 20 QPS, 35 Burst, 启用: true
2025-06-30 22:19:31 [main] INFO  c.c.t.a.g.config.RateLimitConfig - URL限流: 40 QPS, 60 Burst, 启用: true
2025-06-30 22:19:31 [main] INFO  c.c.t.a.g.config.RateLimitConfig - API权重限流启用: true
2025-06-30 22:19:31 [main] INFO  c.c.t.a.g.config.RateLimitConfig - API权重总QPS: 110 (允许轻微超载)
2025-06-30 22:19:31 [main] INFO  c.c.t.a.g.config.RateLimitConfig - === 限流配置验证完成 ===
2025-06-30 22:19:31 [main] INFO  c.c.t.a.g.services.ApiRoutingService - API priority map initialized with 15 entries
2025-06-30 22:19:31 [main] INFO  c.c.t.a.g.config.RateLimitConfig - === 限流配置验证 ===
2025-06-30 22:19:31 [main] INFO  c.c.t.a.g.config.RateLimitConfig - 全局默认QPS: 80, Burst: 120
2025-06-30 22:19:31 [main] INFO  c.c.t.a.g.config.RateLimitConfig - IP限流: 30 QPS, 50 Burst, 启用: true
2025-06-30 22:19:31 [main] INFO  c.c.t.a.g.config.RateLimitConfig - 用户限流: 20 QPS, 35 Burst, 启用: true
2025-06-30 22:19:31 [main] INFO  c.c.t.a.g.config.RateLimitConfig - URL限流: 40 QPS, 60 Burst, 启用: true
2025-06-30 22:19:31 [main] INFO  c.c.t.a.g.config.RateLimitConfig - API权重限流启用: true
2025-06-30 22:19:31 [main] INFO  c.c.t.a.g.config.RateLimitConfig - API权重总QPS: 110 (允许轻微超载)
2025-06-30 22:19:31 [main] INFO  c.c.t.a.g.config.RateLimitConfig - === 限流配置验证完成 ===
2025-06-30 22:19:32 [main] INFO  c.c.t.a.g.config.WebClientConfig - Created optimized WebClient: default - maxConnections: 6, maxIdleConnections: 2, connectTimeout: 2000ms, readTimeout: 5000ms, writeTimeout: 3000ms
2025-06-30 22:19:32 [main] INFO  c.c.t.a.g.config.WebClientConfig - Created optimized WebClient: core-service - maxConnections: 25, maxIdleConnections: 8, connectTimeout: 1500ms, readTimeout: 3000ms, writeTimeout: 2000ms
2025-06-30 22:19:32 [main] INFO  c.c.t.a.g.config.WebClientConfig - Created optimized WebClient: important-service - maxConnections: 15, maxIdleConnections: 5, connectTimeout: 2000ms, readTimeout: 4000ms, writeTimeout: 2500ms
2025-06-30 22:19:32 [main] INFO  c.c.t.a.g.config.WebClientConfig - Created optimized WebClient: non-core-service - maxConnections: 4, maxIdleConnections: 2, connectTimeout: 3000ms, readTimeout: 8000ms, writeTimeout: 4000ms
2025-06-30 22:19:32 [main] INFO  c.c.t.a.g.t.ReactiveTraceScheduler - Starting reactive trace scheduler
2025-06-30 22:19:32 [main] DEBUG o.s.c.g.f.f.c.LocalResponseCacheProperties - No TTL configuration found. Default TTL will be applied for cache entries: PT5M minutes
2025-06-30 22:19:32 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [After]
2025-06-30 22:19:32 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Before]
2025-06-30 22:19:32 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Between]
2025-06-30 22:19:32 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Cookie]
2025-06-30 22:19:32 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Header]
2025-06-30 22:19:32 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Host]
2025-06-30 22:19:32 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Method]
2025-06-30 22:19:32 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Path]
2025-06-30 22:19:32 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Query]
2025-06-30 22:19:32 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [ReadBody]
2025-06-30 22:19:32 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [RemoteAddr]
2025-06-30 22:19:32 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [XForwardedRemoteAddr]
2025-06-30 22:19:32 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Weight]
2025-06-30 22:19:32 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [CloudFoundryRouteService]
2025-06-30 22:19:33 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 5 endpoints beneath base path '/actuator'
2025-06-30 22:19:33 [main] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default LoopResources: DefaultLoopResources {prefix=reactor-http, daemon=true, selectCount=8, workerCount=8}
2025-06-30 22:19:33 [main] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default ConnectionProvider: reactor.netty.resources.DefaultPooledConnectionProvider@21dd91da
2025-06-30 22:19:33 [main] DEBUG r.netty.resources.DefaultLoopIOUring - Default io_uring support : false
2025-06-30 22:19:33 [main] DEBUG r.netty.resources.DefaultLoopEpoll - Default Epoll support : false
2025-06-30 22:19:33 [main] DEBUG r.netty.resources.DefaultLoopKQueue - Default KQueue support : false
2025-06-30 22:19:33 [reactor-http-nio-1] DEBUG r.netty.transport.ServerTransport - [ccfd023b, L:/[0:0:0:0:0:0:0:0]:8080] Bound new server
2025-06-30 22:19:33 [main] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port 8080 (http)
2025-06-30 22:19:33 [scheduling-1] DEBUG c.c.t.a.g.c.ReleaseValidationConfig - Executing auto step traffic scheduler
2025-06-30 22:19:33 [scheduling-1] DEBUG c.c.t.a.g.c.ReleaseValidationConfig - Executing release strategy health check
2025-06-30 22:19:33 [scheduling-1] DEBUG c.c.t.a.g.c.ReleaseValidationConfig - Executing cleanup completed strategies
2025-06-30 22:19:33 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Performing periodic health check
2025-06-30 22:19:33 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Cleaning up expired instances
2025-06-30 22:19:33 [scheduling-1] DEBUG c.c.t.a.g.s.QPSCleanupScheduler - Starting scheduled QPS data cleanup...
2025-06-30 22:19:33 [main] DEBUG o.s.c.g.filter.GatewayMetricsFilter - New routes count: 0
2025-06-30 22:19:33 [scheduling-1] INFO  c.c.t.api.gateway.metrics.QPSMetrics - Manual cleanup completed. Total cleaned: 0, Active entries: API=0, IP=0, User=0, Priority=0
2025-06-30 22:19:33 [scheduling-1] DEBUG c.c.t.a.g.s.QPSCleanupScheduler - Scheduled QPS data cleanup completed
2025-06-30 22:19:33 [scheduling-1] INFO  c.c.t.a.g.s.QPSCleanupScheduler - === QPS Summary Report ===
2025-06-30 22:19:33 [scheduling-1] INFO  c.c.t.a.g.s.QPSCleanupScheduler - Global QPS: 0
2025-06-30 22:19:33 [scheduling-1] INFO  c.c.t.a.g.s.QPSCleanupScheduler - Active APIs: 0
2025-06-30 22:19:33 [main] INFO  c.c.t.api.gateway.GatewayApplication - Started GatewayApplication in 6.954 seconds (process running for 7.615)
2025-06-30 22:19:33 [scheduling-1] INFO  c.c.t.a.g.s.QPSCleanupScheduler - Active IPs: 0
2025-06-30 22:19:33 [scheduling-1] INFO  c.c.t.a.g.s.QPSCleanupScheduler - Active Users: 0
2025-06-30 22:19:33 [scheduling-1] INFO  c.c.t.a.g.s.QPSCleanupScheduler - Active Priorities: 0
2025-06-30 22:19:33 [scheduling-1] INFO  c.c.t.a.g.s.QPSCleanupScheduler - === End QPS Summary Report ===
2025-06-30 22:19:33 [scheduling-1] DEBUG c.c.t.a.g.t.AdaptiveTraceScheduler - Adaptive trace cleanup completed - No traces cleaned, Duration: 1ms, Multiplier: 1.0
2025-06-30 22:19:33 [scheduling-1] INFO  c.c.t.a.g.t.AdaptiveTraceScheduler - Adaptive Trace Statistics - Manager: Total=0, Sampled=0, Active=0, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0, Multiplier: 1.0
2025-06-30 22:19:33 [scheduling-1] DEBUG c.c.t.a.g.tracing.TraceScheduler - Scheduled trace cleanup completed - No traces cleaned, Duration: 0ms
2025-06-30 22:19:33 [scheduling-1] INFO  c.c.t.a.g.tracing.TraceScheduler - Trace Statistics - Manager: Total=0, Sampled=0, Active=0, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0
2025-06-30 22:20:03 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Performing periodic health check
2025-06-30 22:20:32 [boundedElastic-1] INFO  c.c.t.a.g.t.ReactiveTraceScheduler - Reactive Trace Statistics - Manager: Total=0, Sampled=0, Active=0, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0
2025-06-30 22:20:33 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Performing periodic health check
2025-06-30 22:20:33 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Cleaning up expired instances
2025-06-30 22:20:33 [scheduling-1] DEBUG c.c.t.a.g.s.QPSCleanupScheduler - Starting scheduled QPS data cleanup...
2025-06-30 22:20:33 [scheduling-1] INFO  c.c.t.api.gateway.metrics.QPSMetrics - Manual cleanup completed. Total cleaned: 0, Active entries: API=0, IP=0, User=0, Priority=0
2025-06-30 22:20:33 [scheduling-1] DEBUG c.c.t.a.g.s.QPSCleanupScheduler - Scheduled QPS data cleanup completed
2025-06-30 22:20:33 [scheduling-1] INFO  c.c.t.a.g.t.AdaptiveTraceScheduler - Adaptive Trace Statistics - Manager: Total=0, Sampled=0, Active=0, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0, Multiplier: 1.0
2025-06-30 22:20:33 [scheduling-1] INFO  c.c.t.a.g.tracing.TraceScheduler - Trace Statistics - Manager: Total=0, Sampled=0, Active=0, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0
2025-06-30 22:20:54 [main] INFO  c.c.t.api.gateway.GatewayApplication - Starting GatewayApplication using Java 21.0.7 with PID 68863 (/Users/ouyangbaobao/gateway/build/classes/java/main started by ouyangbaobao in /Users/ouyangbaobao/gateway)
2025-06-30 22:20:54 [main] DEBUG c.c.t.api.gateway.GatewayApplication - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-06-30 22:20:54 [main] INFO  c.c.t.api.gateway.GatewayApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-30 22:20:56 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:20:56 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:20:56 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:20:56 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:20:56 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:20:56 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:20:56 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:20:56 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:20:56 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:20:56 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:20:56 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:20:56 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:20:56 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:20:56 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:20:56 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:20:56 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:20:56 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:20:56 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:20:56 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:20:56 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:20:56 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:20:56 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-30 22:20:56 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-30 22:20:56 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 44 ms. Found 0 Redis repository interfaces.
2025-06-30 22:20:57 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=f643df59-5c06-3b39-85d4-5c2fdf60d43f
2025-06-30 22:20:57 [async-audit-worker] INFO  c.c.t.a.g.audit.AsyncAuditService - Async audit log processor started
2025-06-30 22:20:57 [main] INFO  c.c.t.a.g.audit.AsyncAuditService - Async audit service initialized - batchSize: 100, flushInterval: 5000ms, queueSize: 10000
2025-06-30 22:20:57 [main] INFO  c.c.t.a.g.config.WebClientConfig - Created optimized WebClient: normal-service - maxConnections: 8, maxIdleConnections: 3, connectTimeout: 2500ms, readTimeout: 5000ms, writeTimeout: 3000ms
2025-06-30 22:20:57 [main] INFO  c.c.t.a.g.config.RateLimitConfig - === 限流配置验证 ===
2025-06-30 22:20:57 [main] INFO  c.c.t.a.g.config.RateLimitConfig - 全局默认QPS: 80, Burst: 120
2025-06-30 22:20:57 [main] INFO  c.c.t.a.g.config.RateLimitConfig - IP限流: 30 QPS, 50 Burst, 启用: true
2025-06-30 22:20:57 [main] INFO  c.c.t.a.g.config.RateLimitConfig - 用户限流: 20 QPS, 35 Burst, 启用: true
2025-06-30 22:20:57 [main] INFO  c.c.t.a.g.config.RateLimitConfig - URL限流: 40 QPS, 60 Burst, 启用: true
2025-06-30 22:20:57 [main] INFO  c.c.t.a.g.config.RateLimitConfig - API权重限流启用: true
2025-06-30 22:20:57 [main] INFO  c.c.t.a.g.config.RateLimitConfig - API权重总QPS: 110 (允许轻微超载)
2025-06-30 22:20:57 [main] INFO  c.c.t.a.g.config.RateLimitConfig - === 限流配置验证完成 ===
2025-06-30 22:20:58 [main] INFO  c.c.t.a.g.services.ApiRoutingService - API priority map initialized with 15 entries
2025-06-30 22:20:58 [main] INFO  c.c.t.a.g.config.RateLimitConfig - === 限流配置验证 ===
2025-06-30 22:20:58 [main] INFO  c.c.t.a.g.config.RateLimitConfig - 全局默认QPS: 80, Burst: 120
2025-06-30 22:20:58 [main] INFO  c.c.t.a.g.config.RateLimitConfig - IP限流: 30 QPS, 50 Burst, 启用: true
2025-06-30 22:20:58 [main] INFO  c.c.t.a.g.config.RateLimitConfig - 用户限流: 20 QPS, 35 Burst, 启用: true
2025-06-30 22:20:58 [main] INFO  c.c.t.a.g.config.RateLimitConfig - URL限流: 40 QPS, 60 Burst, 启用: true
2025-06-30 22:20:58 [main] INFO  c.c.t.a.g.config.RateLimitConfig - API权重限流启用: true
2025-06-30 22:20:58 [main] INFO  c.c.t.a.g.config.RateLimitConfig - API权重总QPS: 110 (允许轻微超载)
2025-06-30 22:20:58 [main] INFO  c.c.t.a.g.config.RateLimitConfig - === 限流配置验证完成 ===
2025-06-30 22:20:58 [main] INFO  c.c.t.a.g.config.WebClientConfig - Created optimized WebClient: default - maxConnections: 6, maxIdleConnections: 2, connectTimeout: 2000ms, readTimeout: 5000ms, writeTimeout: 3000ms
2025-06-30 22:20:58 [main] INFO  c.c.t.a.g.config.WebClientConfig - Created optimized WebClient: core-service - maxConnections: 25, maxIdleConnections: 8, connectTimeout: 1500ms, readTimeout: 3000ms, writeTimeout: 2000ms
2025-06-30 22:20:58 [main] INFO  c.c.t.a.g.config.WebClientConfig - Created optimized WebClient: important-service - maxConnections: 15, maxIdleConnections: 5, connectTimeout: 2000ms, readTimeout: 4000ms, writeTimeout: 2500ms
2025-06-30 22:20:58 [main] INFO  c.c.t.a.g.config.WebClientConfig - Created optimized WebClient: non-core-service - maxConnections: 4, maxIdleConnections: 2, connectTimeout: 3000ms, readTimeout: 8000ms, writeTimeout: 4000ms
2025-06-30 22:20:59 [main] INFO  c.c.t.a.g.t.ReactiveTraceScheduler - Starting reactive trace scheduler
2025-06-30 22:20:59 [main] DEBUG o.s.c.g.f.f.c.LocalResponseCacheProperties - No TTL configuration found. Default TTL will be applied for cache entries: PT5M minutes
2025-06-30 22:20:59 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [After]
2025-06-30 22:20:59 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Before]
2025-06-30 22:20:59 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Between]
2025-06-30 22:20:59 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Cookie]
2025-06-30 22:20:59 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Header]
2025-06-30 22:20:59 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Host]
2025-06-30 22:20:59 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Method]
2025-06-30 22:20:59 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Path]
2025-06-30 22:20:59 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Query]
2025-06-30 22:20:59 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [ReadBody]
2025-06-30 22:20:59 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [RemoteAddr]
2025-06-30 22:20:59 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [XForwardedRemoteAddr]
2025-06-30 22:20:59 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Weight]
2025-06-30 22:20:59 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [CloudFoundryRouteService]
2025-06-30 22:20:59 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 5 endpoints beneath base path '/actuator'
2025-06-30 22:21:00 [main] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default LoopResources: DefaultLoopResources {prefix=reactor-http, daemon=true, selectCount=8, workerCount=8}
2025-06-30 22:21:00 [main] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default ConnectionProvider: reactor.netty.resources.DefaultPooledConnectionProvider@156f0281
2025-06-30 22:21:00 [main] DEBUG r.netty.resources.DefaultLoopIOUring - Default io_uring support : false
2025-06-30 22:21:00 [main] DEBUG r.netty.resources.DefaultLoopEpoll - Default Epoll support : false
2025-06-30 22:21:00 [main] DEBUG r.netty.resources.DefaultLoopKQueue - Default KQueue support : false
2025-06-30 22:21:02 [main] WARN  o.s.b.w.r.c.AnnotationConfigReactiveWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Failed to start bean 'webServerStartStop'
2025-06-30 22:21:02 [main] INFO  c.c.t.a.g.t.ReactiveTraceScheduler - Stopping reactive trace scheduler
2025-06-30 22:21:02 [main] INFO  c.c.t.a.g.audit.AsyncAuditService - Shutting down async audit service...
2025-06-30 22:21:03 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Performing periodic health check
2025-06-30 22:21:07 [async-audit-worker] INFO  c.c.t.a.g.audit.AsyncAuditService - Async audit log processor stopped
2025-06-30 22:21:07 [main] INFO  c.c.t.a.g.audit.AsyncAuditService - Async audit service shutdown completed
2025-06-30 22:21:07 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-06-30 22:21:07 [main] ERROR o.s.b.d.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Web server failed to start. Port 8080 was already in use.

Action:

Identify and stop the process that's listening on port 8080 or configure this application to listen on another port.

2025-06-30 22:21:32 [boundedElastic-1] INFO  c.c.t.a.g.t.ReactiveTraceScheduler - Reactive Trace Statistics - Manager: Total=0, Sampled=0, Active=0, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0
2025-06-30 22:21:33 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Performing periodic health check
2025-06-30 22:21:33 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Cleaning up expired instances
2025-06-30 22:21:33 [scheduling-1] DEBUG c.c.t.a.g.s.QPSCleanupScheduler - Starting scheduled QPS data cleanup...
2025-06-30 22:21:33 [scheduling-1] INFO  c.c.t.api.gateway.metrics.QPSMetrics - Manual cleanup completed. Total cleaned: 0, Active entries: API=0, IP=0, User=0, Priority=0
2025-06-30 22:21:33 [scheduling-1] DEBUG c.c.t.a.g.s.QPSCleanupScheduler - Scheduled QPS data cleanup completed
2025-06-30 22:21:33 [scheduling-1] INFO  c.c.t.a.g.t.AdaptiveTraceScheduler - Adaptive Trace Statistics - Manager: Total=0, Sampled=0, Active=0, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0, Multiplier: 1.0
2025-06-30 22:21:33 [scheduling-1] INFO  c.c.t.a.g.tracing.TraceScheduler - Trace Statistics - Manager: Total=0, Sampled=0, Active=0, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0
2025-06-30 22:22:03 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Performing periodic health check
2025-06-30 22:22:32 [boundedElastic-1] INFO  c.c.t.a.g.t.ReactiveTraceScheduler - Reactive Trace Statistics - Manager: Total=0, Sampled=0, Active=0, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0
2025-06-30 22:22:33 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Performing periodic health check
2025-06-30 22:22:33 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Cleaning up expired instances
2025-06-30 22:22:33 [scheduling-1] DEBUG c.c.t.a.g.s.QPSCleanupScheduler - Starting scheduled QPS data cleanup...
2025-06-30 22:22:33 [scheduling-1] INFO  c.c.t.api.gateway.metrics.QPSMetrics - Manual cleanup completed. Total cleaned: 0, Active entries: API=0, IP=0, User=0, Priority=0
2025-06-30 22:22:33 [scheduling-1] DEBUG c.c.t.a.g.s.QPSCleanupScheduler - Scheduled QPS data cleanup completed
2025-06-30 22:22:33 [scheduling-1] INFO  c.c.t.a.g.t.AdaptiveTraceScheduler - Adaptive Trace Statistics - Manager: Total=0, Sampled=0, Active=0, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0, Multiplier: 1.0
2025-06-30 22:22:33 [scheduling-1] INFO  c.c.t.a.g.tracing.TraceScheduler - Trace Statistics - Manager: Total=0, Sampled=0, Active=0, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0
2025-06-30 22:23:03 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Performing periodic health check
2025-06-30 22:23:11 [reactor-http-nio-2] DEBUG r.n.http.server.HttpServerOperations - [e27e5c44, L:/127.0.0.1:8080 - R:/127.0.0.1:60281] New http connection, requesting read
2025-06-30 22:23:11 [reactor-http-nio-2] DEBUG r.netty.transport.TransportConfig - [e27e5c44, L:/127.0.0.1:8080 - R:/127.0.0.1:60281] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpServerCodec), (reactor.left.httpTrafficHandler = reactor.netty.http.server.HttpTrafficHandler), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-06-30 22:23:11 [reactor-http-nio-2] DEBUG r.n.http.server.HttpServerOperations - [e27e5c44, L:/127.0.0.1:8080 - R:/127.0.0.1:60281] Increasing pending responses count: 1
2025-06-30 22:23:11 [reactor-http-nio-2] DEBUG r.netty.http.server.HttpServer - [e27e5c44-1, L:/127.0.0.1:8080 - R:/127.0.0.1:60281] Handler is being applied: org.springframework.http.server.reactive.ReactorHttpHandlerAdapter@3d5700a3
2025-06-30 22:23:11 [reactor-http-nio-2] DEBUG o.s.c.g.h.RoutePredicateHandlerMapping - Route matched: payment-route
2025-06-30 22:23:11 [reactor-http-nio-2] DEBUG o.s.c.g.h.RoutePredicateHandlerMapping - Mapping [Exchange: POST http://localhost:8080/api/gateway/payment/process] to Route{id='payment-route', uri=http://localhost:8081, order=0, predicate=Paths: [/api/gateway/payment/**], match trailing slash: true, gatewayFilters=[[[RewritePath /api/gateway/payment/(?<segment>.*) = '/api/payment/${segment}'], order = 0], com.citi.tts.api.gateway.filter.AdvancedRateLimitFilter@1de12397, [com.citi.tts.api.gateway.filter.ServiceDegradationGatewayFilter$1@20dd1b2d, order = 0], com.citi.tts.api.gateway.filter.CircuitBreakerFilter@639948a2, [com.citi.tts.api.gateway.filter.CryptoFilter@7f41d979, order = 0]], metadata={}}
2025-06-30 22:23:11 [reactor-http-nio-2] DEBUG o.s.c.g.h.RoutePredicateHandlerMapping - [e27e5c44-1] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@1d33e72e
2025-06-30 22:23:11 [reactor-http-nio-2] DEBUG o.s.c.g.handler.FilteringWebHandler - Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@5c7e55a4}, order = -2147483648], [GatewayFilterAdapter{delegate=com.citi.tts.api.gateway.tracing.TraceFilter@b68932b}, order = -2147483598], com.citi.tts.api.gateway.filter.AdvancedRateLimitFilter@1de12397, [GatewayFilterAdapter{delegate=com.citi.tts.api.gateway.filter.QPSMetricsFilter@4a5d5b38}, order = -2147483548], com.citi.tts.api.gateway.filter.CircuitBreakerFilter@639948a2, [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@da67c46}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@42734b71}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@43f7f48d}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@29431f61}, order = 0], [[RewritePath /api/gateway/payment/(?<segment>.*) = '/api/payment/${segment}'], order = 0], [com.citi.tts.api.gateway.filter.ServiceDegradationGatewayFilter$1@20dd1b2d, order = 0], [com.citi.tts.api.gateway.filter.CryptoFilter@7f41d979, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@7ae6927}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ReactiveLoadBalancerClientFilter@16c9e378}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.LoadBalancerServiceInstanceCookieFilter@b87ea8b}, order = 10151], [GatewayFilterAdapter{delegate=com.citi.tts.api.gateway.filter.ServiceDegradationFilter@6fdaef04}, order = 2147483547], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@5a3be84}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@5f32ab17}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@7d0df326}, order = 2147483647]]
2025-06-30 22:23:11 [reactor-http-nio-2] DEBUG c.c.t.a.gateway.tracing.TraceContext - Created root trace context: 4597be77447b49788258d9a95c9506c0
2025-06-30 22:23:11 [reactor-http-nio-2] DEBUG c.c.t.a.gateway.tracing.TraceManager - Created new sampled trace context: 4597be77447b49788258d9a95c9506c0
2025-06-30 22:23:11 [reactor-http-nio-2] DEBUG c.c.t.a.g.f.AdvancedRateLimitFilter - Processing rate limit for: POST /api/gateway/payment/process from IP: 127.0.0.1, User: null
2025-06-30 22:23:11 [reactor-http-nio-2] DEBUG c.c.t.a.g.l.AdvancedRateLimiter - Token acquired for api_weight:NON_CORE: 1 tokens consumed, 14 remaining
2025-06-30 22:23:11 [reactor-http-nio-2] WARN  c.c.t.a.g.f.AdvancedRateLimitFilter - Rate limit processing took 12ms for path: /api/gateway/payment/process
2025-06-30 22:23:11 [reactor-http-nio-2] DEBUG c.c.t.a.g.filter.QPSMetricsFilter - QPS recorded - Path: /api/gateway/payment/process, IP: 127.0.0.1, User: anonymous, Priority: default
2025-06-30 22:23:11 [reactor-http-nio-2] DEBUG c.c.t.a.g.f.CircuitBreakerFilter - Using circuit breaker for API: /api/gateway/payment/process with priority: NON_CORE
2025-06-30 22:23:11 [reactor-http-nio-2] DEBUG c.c.t.a.g.f.ServiceDegradationGatewayFilter - Service degradation filter - Service: payment-service, Path: /api/payment/process, Level: CORE
2025-06-30 22:23:11 [reactor-http-nio-2] DEBUG c.c.t.a.gateway.filter.CryptoFilter - crupto filter is coming
2025-06-30 22:23:11 [reactor-http-nio-2] DEBUG c.c.t.a.g.f.ServiceDegradationFilter - Service degradation filter - Service: api, Path: /api/payment/process, Level: CORE
2025-06-30 22:23:11 [reactor-http-nio-2] DEBUG o.s.c.g.f.h.o.ObservedRequestHttpHeadersFilter - Will instrument the HTTP request headers [Content-Type:"application/json", Content-Length:"16", User-Agent:"IntelliJ HTTP Client/IntelliJ IDEA 2025.1.3", Accept-Encoding:"br, deflate, gzip, x-gzip", Accept:"*/*", host:"localhost:8080", X-Span-ID:"8f95b55c27654512", X-Request-ID:"69d37642-cd7c-4093-a265-a8b1e0190057", X-Correlation-ID:"null", X-Trace-ID:"4597be77447b49788258d9a95c9506c0", X-Sampled:"true"]
2025-06-30 22:23:11 [reactor-http-nio-2] DEBUG o.s.c.g.f.h.o.ObservedRequestHttpHeadersFilter - Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='payment-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://localhost:8080/api/payment/process'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@52bb744e', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.001251833, duration(nanos)=1251833.0, startTimeNanos=161339313772333}'], parentObservation={name=http.server.requests(null), error=null, context=name='http.server.requests', contextualName='null', error='null', lowCardinalityKeyValues=[exception='none', method='POST', outcome='SUCCESS', status='200', uri='UNKNOWN'], highCardinalityKeyValues=[http.url='/api/gateway/payment/process'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@53eb82d8', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.090707, duration(nanos)=9.0707E7, startTimeNanos=161339224507791}'], parentObservation=null}} created for the request. New headers are [Content-Type:"application/json", Content-Length:"16", User-Agent:"IntelliJ HTTP Client/IntelliJ IDEA 2025.1.3", Accept-Encoding:"br, deflate, gzip, x-gzip", Accept:"*/*", host:"localhost:8080", X-Span-ID:"8f95b55c27654512", X-Request-ID:"69d37642-cd7c-4093-a265-a8b1e0190057", X-Correlation-ID:"null", X-Trace-ID:"4597be77447b49788258d9a95c9506c0", X-Sampled:"true"]
2025-06-30 22:23:11 [reactor-http-nio-2] DEBUG r.n.r.PooledConnectionProvider - Creating a new [proxy] client pool [PoolFactory{evictionInterval=PT0S, leasingStrategy=fifo, maxConnections=2147483647, maxIdleTime=-1, maxLifeTime=-1, metricsEnabled=false, pendingAcquireMaxCount=-1, pendingAcquireTimeout=0}] for [localhost/<unresolved>:8081]
2025-06-30 22:23:11 [reactor-http-nio-2] DEBUG r.n.r.PooledConnectionProvider - [e3ebef97] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-06-30 22:23:11 [reactor-http-nio-2] DEBUG r.netty.transport.TransportConfig - [e3ebef97] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-06-30 22:23:11 [reactor-http-nio-2] DEBUG r.netty.transport.TransportConnector - [e3ebef97] Connecting to [localhost/127.0.0.1:8081].
2025-06-30 22:23:11 [reactor-http-nio-2] DEBUG r.netty.transport.TransportConnector - [e3ebef97] Connect attempt to [localhost/127.0.0.1:8081] failed.
io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: localhost/127.0.0.1:8081
Caused by: java.net.ConnectException: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:973)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:336)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:339)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-06-30 22:23:11 [reactor-http-nio-2] DEBUG r.n.r.PooledConnectionProvider - [998b45fe] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-06-30 22:23:11 [reactor-http-nio-2] DEBUG r.netty.transport.TransportConfig - [998b45fe] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-06-30 22:23:11 [reactor-http-nio-2] DEBUG r.netty.transport.TransportConnector - [998b45fe] Connecting to [localhost/[0:0:0:0:0:0:0:1]:8081].
2025-06-30 22:23:11 [reactor-http-nio-2] DEBUG r.netty.transport.TransportConnector - [998b45fe] Connect attempt to [localhost/[0:0:0:0:0:0:0:1]:8081] failed.
io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: localhost/[0:0:0:0:0:0:0:1]:8081
Caused by: java.net.ConnectException: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:973)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:336)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:339)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-06-30 22:23:11 [reactor-http-nio-2] ERROR c.c.t.a.g.f.ServiceDegradationFilter - Service error detected - Service: api, Path: /api/payment/process, Error: Connection refused: localhost/[0:0:0:0:0:0:0:1]:8081
2025-06-30 22:23:11 [reactor-http-nio-2] INFO  c.c.t.a.g.s.ServiceDegradationService - Service degradation triggered - Service: api, Level: CORE, Error: AnnotatedConnectException
2025-06-30 22:23:11 [reactor-http-nio-2] INFO  c.c.t.a.g.s.ServiceDegradationService - Handling CORE service degradation for: api
2025-06-30 22:23:11 [reactor-http-nio-2] INFO  c.c.t.a.g.s.i.CoreServiceFallbackHandlerImpl - Core service fallback triggered - Service: api, Path: /api/payment/process
2025-06-30 22:23:12 [reactor-http-nio-2] WARN  c.c.t.a.g.s.i.CoreServiceFallbackHandlerImpl - Failed to get Redis fallback data for key: fallback:core:api:/api/payment/process
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1858)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1789)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1586)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.lambda$getConnection$0(LettuceConnectionFactory.java:1566)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.doInLock(LettuceConnectionFactory.java:1527)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1563)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedReactiveConnection(LettuceConnectionFactory.java:1274)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getReactiveConnection(LettuceConnectionFactory.java:1149)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getReactiveConnection(LettuceConnectionFactory.java:120)
	at org.springframework.data.redis.core.ReactiveRedisTemplate.lambda$getConnection$2(ReactiveRedisTemplate.java:273)
	at reactor.core.publisher.MonoSupplier.call(MonoSupplier.java:67)
	at reactor.core.publisher.FluxUsingWhen.subscribe(FluxUsingWhen.java:80)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onError(MonoIgnoreThen.java:280)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:205)
	at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
	at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:229)
	at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:279)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.maybeOnError(FluxConcatMapNoPrefetch.java:327)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onNext(FluxConcatMapNoPrefetch.java:212)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
	at reactor.core.publisher.SinkManyEmitterProcessor.drain(SinkManyEmitterProcessor.java:476)
	at reactor.core.publisher.SinkManyEmitterProcessor$EmitterInner.drainParent(SinkManyEmitterProcessor.java:620)
	at reactor.core.publisher.FluxPublish$PubSubInner.request(FluxPublish.java:874)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
	at reactor.core.publisher.Operators$DeferredSubscription.request(Operators.java:1742)
	at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:196)
	at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:205)
	at reactor.netty.http.client.HttpClientConnect$MonoHttpConnect$ClientTransportSubscriber.onError(HttpClientConnect.java:325)
	at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:205)
	at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onError(DefaultPooledConnectionProvider.java:174)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
	at reactor.netty.internal.shaded.reactor.pool.AbstractPool$Borrower.fail(AbstractPool.java:479)
	at reactor.netty.internal.shaded.reactor.pool.SimpleDequePool.lambda$drainLoop$9(SimpleDequePool.java:443)
	at reactor.core.publisher.FluxDoOnEach$DoOnEachSubscriber.onError(FluxDoOnEach.java:186)
	at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:205)
	at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnectionAllocator$PooledConnectionInitializer.onError(DefaultPooledConnectionProvider.java:593)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondError(MonoFlatMap.java:241)
	at reactor.core.publisher.MonoFlatMap$FlatMapInner.onError(MonoFlatMap.java:315)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:106)
	at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
	at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:229)
	at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:279)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.maybeOnError(FluxConcatMapNoPrefetch.java:327)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onNext(FluxConcatMapNoPrefetch.java:212)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
	at reactor.core.publisher.SinkManyEmitterProcessor.drain(SinkManyEmitterProcessor.java:476)
	at reactor.core.publisher.SinkManyEmitterProcessor$EmitterInner.drainParent(SinkManyEmitterProcessor.java:620)
	at reactor.core.publisher.FluxPublish$PubSubInner.request(FluxPublish.java:874)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
	at reactor.core.publisher.Operators$DeferredSubscription.request(Operators.java:1742)
	at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:196)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondError(MonoFlatMap.java:241)
	at reactor.core.publisher.MonoFlatMap$FlatMapInner.onError(MonoFlatMap.java:315)
	at reactor.netty.transport.TransportConnector$MonoChannelPromise.tryFailure(TransportConnector.java:600)
	at reactor.netty.transport.TransportConnector$MonoChannelPromise.setFailure(TransportConnector.java:546)
	at reactor.netty.transport.TransportConnector.lambda$doConnect$7(TransportConnector.java:262)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:603)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:596)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:572)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:505)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:649)
	at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:642)
	at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:131)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:326)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:342)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to localhost/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:63)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:41)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:354)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:220)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:112)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:112)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1787)
	... 79 common frames omitted
Caused by: io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: localhost/127.0.0.1:6379
Caused by: java.net.ConnectException: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:973)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:336)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:339)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-06-30 22:23:12 [reactor-http-nio-2] DEBUG i.g.r.c.i.CircuitBreakerStateMachine - CircuitBreaker 'nonCoreApiCircuitBreaker' succeeded:
2025-06-30 22:23:12 [reactor-http-nio-2] DEBUG r.n.http.server.HttpServerOperations - [e27e5c44-1, L:/127.0.0.1:8080 - R:/127.0.0.1:60281] Last HTTP response frame
2025-06-30 22:23:12 [reactor-http-nio-2] DEBUG r.n.http.server.HttpServerOperations - [e27e5c44-1, L:/127.0.0.1:8080 - R:/127.0.0.1:60281] Headers are not sent before onComplete().
2025-06-30 22:23:12 [reactor-http-nio-2] DEBUG r.n.http.server.HttpServerOperations - [e27e5c44-1, L:/127.0.0.1:8080 - R:/127.0.0.1:60281] Decreasing pending responses count: 0
2025-06-30 22:23:12 [reactor-http-nio-2] DEBUG r.n.http.server.HttpServerOperations - [e27e5c44-1, L:/127.0.0.1:8080 - R:/127.0.0.1:60281] Last HTTP packet was sent, terminating the channel
2025-06-30 22:23:12 [reactor-http-nio-2] DEBUG r.netty.channel.ChannelOperations - [e27e5c44-1, L:/127.0.0.1:8080 - R:/127.0.0.1:60281] [HttpServer] Channel inbound receiver cancelled (subscription disposed).
2025-06-30 22:23:12 [reactor-http-nio-2] DEBUG reactor.netty.channel.FluxReceive - [e27e5c44-1, L:/127.0.0.1:8080 - R:/127.0.0.1:60281] [terminated=true, cancelled=true, pending=0, error=null]: dropping frame LAST_CONTENT(decodeResult: success, content: PooledSlicedByteBuf(ridx: 0, widx: 16, cap: 16/16, unwrapped: PooledUnsafeDirectByteBuf(ridx: 250, widx: 250, cap: 2048)))
2025-06-30 22:23:12 [reactor-http-nio-2] DEBUG c.c.t.a.gateway.tracing.TraceContext - Finished trace: 4597be77447b49788258d9a95c9506c0 with status: 200
2025-06-30 22:23:12 [reactor-http-nio-2] ERROR reactor.core.publisher.Operators - Operator called default onErrorDropped
java.lang.UnsupportedOperationException: null
	at org.springframework.http.ReadOnlyHttpHeaders.add(ReadOnlyHttpHeaders.java:97)
	at com.citi.tts.api.gateway.tracing.TraceFilter.addTraceHeadersToResponse(TraceFilter.java:113)
	at com.citi.tts.api.gateway.tracing.TraceFilter.lambda$filter$0(TraceFilter.java:69)
	at reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.runFinally(FluxDoFinally.java:146)
	at reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete(FluxDoFinally.java:129)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at io.github.resilience4j.reactor.circuitbreaker.operator.CircuitBreakerSubscriber.hookOnComplete(CircuitBreakerSubscriber.java:69)
	at reactor.core.publisher.BaseSubscriber.onComplete(BaseSubscriber.java:197)
	at reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete(FluxDoFinally.java:128)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:210)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onComplete(MonoPeekTerminal.java:299)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onComplete(MonoPeekTerminal.java:299)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onError(MonoPeekTerminal.java:258)
	at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.FluxUsingWhen.subscribe(FluxUsingWhen.java:98)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onError(MonoIgnoreThen.java:280)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:205)
	at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
	at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:229)
	at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:279)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.maybeOnError(FluxConcatMapNoPrefetch.java:327)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onNext(FluxConcatMapNoPrefetch.java:212)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
	at reactor.core.publisher.SinkManyEmitterProcessor.drain(SinkManyEmitterProcessor.java:476)
	at reactor.core.publisher.SinkManyEmitterProcessor$EmitterInner.drainParent(SinkManyEmitterProcessor.java:620)
	at reactor.core.publisher.FluxPublish$PubSubInner.request(FluxPublish.java:874)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
	at reactor.core.publisher.Operators$DeferredSubscription.request(Operators.java:1742)
	at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:196)
	at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:205)
	at reactor.netty.http.client.HttpClientConnect$MonoHttpConnect$ClientTransportSubscriber.onError(HttpClientConnect.java:325)
	at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:205)
	at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onError(DefaultPooledConnectionProvider.java:174)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
	at reactor.netty.internal.shaded.reactor.pool.AbstractPool$Borrower.fail(AbstractPool.java:479)
	at reactor.netty.internal.shaded.reactor.pool.SimpleDequePool.lambda$drainLoop$9(SimpleDequePool.java:443)
	at reactor.core.publisher.FluxDoOnEach$DoOnEachSubscriber.onError(FluxDoOnEach.java:186)
	at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:205)
	at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnectionAllocator$PooledConnectionInitializer.onError(DefaultPooledConnectionProvider.java:593)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondError(MonoFlatMap.java:241)
	at reactor.core.publisher.MonoFlatMap$FlatMapInner.onError(MonoFlatMap.java:315)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:106)
	at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
	at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:229)
	at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:279)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.maybeOnError(FluxConcatMapNoPrefetch.java:327)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onNext(FluxConcatMapNoPrefetch.java:212)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
	at reactor.core.publisher.SinkManyEmitterProcessor.drain(SinkManyEmitterProcessor.java:476)
	at reactor.core.publisher.SinkManyEmitterProcessor$EmitterInner.drainParent(SinkManyEmitterProcessor.java:620)
	at reactor.core.publisher.FluxPublish$PubSubInner.request(FluxPublish.java:874)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
	at reactor.core.publisher.Operators$DeferredSubscription.request(Operators.java:1742)
	at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:196)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondError(MonoFlatMap.java:241)
	at reactor.core.publisher.MonoFlatMap$FlatMapInner.onError(MonoFlatMap.java:315)
	at reactor.netty.transport.TransportConnector$MonoChannelPromise.tryFailure(TransportConnector.java:600)
	at reactor.netty.transport.TransportConnector$MonoChannelPromise.setFailure(TransportConnector.java:546)
	at reactor.netty.transport.TransportConnector.lambda$doConnect$7(TransportConnector.java:262)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:603)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:596)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:572)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:505)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:649)
	at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:642)
	at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:131)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:326)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:342)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-06-30 22:23:32 [boundedElastic-2] INFO  c.c.t.a.g.t.ReactiveTraceScheduler - Reactive Trace Statistics - Manager: Total=1, Sampled=1, Active=1, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0
2025-06-30 22:23:33 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Performing periodic health check
2025-06-30 22:23:33 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Cleaning up expired instances
2025-06-30 22:23:33 [scheduling-1] DEBUG c.c.t.a.g.s.QPSCleanupScheduler - Starting scheduled QPS data cleanup...
2025-06-30 22:23:33 [scheduling-1] INFO  c.c.t.api.gateway.metrics.QPSMetrics - Manual cleanup completed. Total cleaned: 0, Active entries: API=1, IP=1, User=1, Priority=1
2025-06-30 22:23:33 [scheduling-1] DEBUG c.c.t.a.g.s.QPSCleanupScheduler - Scheduled QPS data cleanup completed
2025-06-30 22:23:33 [scheduling-1] INFO  c.c.t.a.g.t.AdaptiveTraceScheduler - Adaptive Trace Statistics - Manager: Total=1, Sampled=1, Active=1, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0, Multiplier: 1.0
2025-06-30 22:23:33 [scheduling-1] INFO  c.c.t.a.g.tracing.TraceScheduler - Trace Statistics - Manager: Total=1, Sampled=1, Active=1, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0
2025-06-30 22:24:03 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Performing periodic health check
2025-06-30 22:24:32 [boundedElastic-2] INFO  c.c.t.a.g.t.ReactiveTraceScheduler - Reactive Trace Statistics - Manager: Total=1, Sampled=1, Active=1, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0
2025-06-30 22:24:32 [boundedElastic-2] DEBUG c.c.t.a.g.t.ReactiveTraceScheduler - Reactive trace cleanup completed - No traces cleaned, Duration: 2ms
2025-06-30 22:24:33 [scheduling-1] DEBUG c.c.t.a.g.c.ReleaseValidationConfig - Executing auto step traffic scheduler
2025-06-30 22:24:33 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Performing periodic health check
2025-06-30 22:24:33 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Cleaning up expired instances
2025-06-30 22:24:33 [scheduling-1] DEBUG c.c.t.a.g.s.QPSCleanupScheduler - Starting scheduled QPS data cleanup...
2025-06-30 22:24:33 [scheduling-1] DEBUG c.c.t.api.gateway.metrics.QPSMetrics - Cleaned 1 expired API QPS entries
2025-06-30 22:24:33 [scheduling-1] DEBUG c.c.t.api.gateway.metrics.QPSMetrics - Cleaned 1 expired IP QPS entries
2025-06-30 22:24:33 [scheduling-1] DEBUG c.c.t.api.gateway.metrics.QPSMetrics - Cleaned 1 expired User QPS entries
2025-06-30 22:24:33 [scheduling-1] DEBUG c.c.t.api.gateway.metrics.QPSMetrics - Cleaned 1 expired Priority QPS entries
2025-06-30 22:24:33 [scheduling-1] INFO  c.c.t.api.gateway.metrics.QPSMetrics - Manual cleanup completed. Total cleaned: 4, Active entries: API=0, IP=0, User=0, Priority=0
2025-06-30 22:24:33 [scheduling-1] DEBUG c.c.t.a.g.s.QPSCleanupScheduler - Scheduled QPS data cleanup completed
2025-06-30 22:24:33 [scheduling-1] INFO  c.c.t.a.g.s.QPSCleanupScheduler - === QPS Summary Report ===
2025-06-30 22:24:33 [scheduling-1] INFO  c.c.t.a.g.s.QPSCleanupScheduler - Global QPS: 0
2025-06-30 22:24:33 [scheduling-1] INFO  c.c.t.a.g.s.QPSCleanupScheduler - Active APIs: 0
2025-06-30 22:24:33 [scheduling-1] INFO  c.c.t.a.g.s.QPSCleanupScheduler - Active IPs: 0
2025-06-30 22:24:33 [scheduling-1] INFO  c.c.t.a.g.s.QPSCleanupScheduler - Active Users: 0
2025-06-30 22:24:33 [scheduling-1] INFO  c.c.t.a.g.s.QPSCleanupScheduler - Active Priorities: 0
2025-06-30 22:24:33 [scheduling-1] INFO  c.c.t.a.g.s.QPSCleanupScheduler - === End QPS Summary Report ===
2025-06-30 22:24:33 [scheduling-1] DEBUG c.c.t.a.g.t.AdaptiveTraceScheduler - Adaptive trace cleanup completed - No traces cleaned, Duration: 0ms, Multiplier: 1.0
2025-06-30 22:24:33 [scheduling-1] DEBUG c.c.t.a.g.tracing.TraceScheduler - Scheduled trace cleanup completed - No traces cleaned, Duration: 0ms
2025-06-30 22:24:33 [scheduling-1] INFO  c.c.t.a.g.t.AdaptiveTraceScheduler - Adaptive Trace Statistics - Manager: Total=1, Sampled=1, Active=1, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0, Multiplier: 1.0
2025-06-30 22:24:33 [scheduling-1] INFO  c.c.t.a.g.tracing.TraceScheduler - Trace Statistics - Manager: Total=1, Sampled=1, Active=1, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0
2025-06-30 22:25:03 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Performing periodic health check
2025-06-30 22:25:32 [boundedElastic-2] INFO  c.c.t.a.g.t.ReactiveTraceScheduler - Reactive Trace Statistics - Manager: Total=1, Sampled=1, Active=1, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0
2025-06-30 22:25:33 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Performing periodic health check
2025-06-30 22:25:33 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Cleaning up expired instances
2025-06-30 22:25:33 [scheduling-1] DEBUG c.c.t.a.g.s.QPSCleanupScheduler - Starting scheduled QPS data cleanup...
2025-06-30 22:25:33 [scheduling-1] INFO  c.c.t.api.gateway.metrics.QPSMetrics - Manual cleanup completed. Total cleaned: 0, Active entries: API=0, IP=0, User=0, Priority=0
2025-06-30 22:25:33 [scheduling-1] DEBUG c.c.t.a.g.s.QPSCleanupScheduler - Scheduled QPS data cleanup completed
2025-06-30 22:25:33 [scheduling-1] INFO  c.c.t.a.g.t.AdaptiveTraceScheduler - Adaptive Trace Statistics - Manager: Total=1, Sampled=1, Active=1, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0, Multiplier: 1.0
2025-06-30 22:25:33 [scheduling-1] INFO  c.c.t.a.g.tracing.TraceScheduler - Trace Statistics - Manager: Total=1, Sampled=1, Active=1, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0
2025-06-30 22:25:38 [reactor-http-nio-3] DEBUG r.n.http.server.HttpServerOperations - [02d2f245, L:/127.0.0.1:8080 - R:/127.0.0.1:60583] New http connection, requesting read
2025-06-30 22:25:38 [reactor-http-nio-3] DEBUG r.netty.transport.TransportConfig - [02d2f245, L:/127.0.0.1:8080 - R:/127.0.0.1:60583] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpServerCodec), (reactor.left.httpTrafficHandler = reactor.netty.http.server.HttpTrafficHandler), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-06-30 22:25:38 [reactor-http-nio-3] DEBUG r.n.http.server.HttpServerOperations - [02d2f245, L:/127.0.0.1:8080 - R:/127.0.0.1:60583] Increasing pending responses count: 1
2025-06-30 22:25:38 [reactor-http-nio-3] DEBUG r.netty.http.server.HttpServer - [02d2f245-1, L:/127.0.0.1:8080 - R:/127.0.0.1:60583] Handler is being applied: org.springframework.http.server.reactive.ReactorHttpHandlerAdapter@3d5700a3
2025-06-30 22:25:38 [reactor-http-nio-3] DEBUG o.s.c.g.h.RoutePredicateHandlerMapping - Route matched: payment-route
2025-06-30 22:25:38 [reactor-http-nio-3] DEBUG o.s.c.g.h.RoutePredicateHandlerMapping - Mapping [Exchange: POST http://localhost:8080/api/gateway/payment/process] to Route{id='payment-route', uri=http://localhost:8081, order=0, predicate=Paths: [/api/gateway/payment/**], match trailing slash: true, gatewayFilters=[[[RewritePath /api/gateway/payment/(?<segment>.*) = '/api/payment/${segment}'], order = 0], com.citi.tts.api.gateway.filter.AdvancedRateLimitFilter@1de12397, [com.citi.tts.api.gateway.filter.ServiceDegradationGatewayFilter$1@20dd1b2d, order = 0], com.citi.tts.api.gateway.filter.CircuitBreakerFilter@639948a2, [com.citi.tts.api.gateway.filter.CryptoFilter@7f41d979, order = 0]], metadata={}}
2025-06-30 22:25:38 [reactor-http-nio-3] DEBUG o.s.c.g.h.RoutePredicateHandlerMapping - [02d2f245-2] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@1d33e72e
2025-06-30 22:25:38 [reactor-http-nio-3] DEBUG o.s.c.g.handler.FilteringWebHandler - Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@5c7e55a4}, order = -2147483648], [GatewayFilterAdapter{delegate=com.citi.tts.api.gateway.tracing.TraceFilter@b68932b}, order = -2147483598], com.citi.tts.api.gateway.filter.AdvancedRateLimitFilter@1de12397, [GatewayFilterAdapter{delegate=com.citi.tts.api.gateway.filter.QPSMetricsFilter@4a5d5b38}, order = -2147483548], com.citi.tts.api.gateway.filter.CircuitBreakerFilter@639948a2, [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@da67c46}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@42734b71}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@43f7f48d}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@29431f61}, order = 0], [[RewritePath /api/gateway/payment/(?<segment>.*) = '/api/payment/${segment}'], order = 0], [com.citi.tts.api.gateway.filter.ServiceDegradationGatewayFilter$1@20dd1b2d, order = 0], [com.citi.tts.api.gateway.filter.CryptoFilter@7f41d979, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@7ae6927}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ReactiveLoadBalancerClientFilter@16c9e378}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.LoadBalancerServiceInstanceCookieFilter@b87ea8b}, order = 10151], [GatewayFilterAdapter{delegate=com.citi.tts.api.gateway.filter.ServiceDegradationFilter@6fdaef04}, order = 2147483547], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@5a3be84}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@5f32ab17}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@7d0df326}, order = 2147483647]]
2025-06-30 22:25:38 [reactor-http-nio-3] DEBUG c.c.t.a.gateway.tracing.TraceContext - Created root trace context: 796ed53efbd34101b519a2ed249368ad
2025-06-30 22:25:38 [reactor-http-nio-3] DEBUG c.c.t.a.gateway.tracing.TraceManager - Created new sampled trace context: 796ed53efbd34101b519a2ed249368ad
2025-06-30 22:25:38 [reactor-http-nio-3] DEBUG c.c.t.a.g.f.AdvancedRateLimitFilter - Processing rate limit for: POST /api/gateway/payment/process from IP: 127.0.0.1, User: null
2025-06-30 22:25:38 [reactor-http-nio-3] DEBUG c.c.t.a.g.l.AdvancedRateLimiter - Tokens refilled for api_weight:NON_CORE: +1460 tokens, total: 15
2025-06-30 22:25:38 [reactor-http-nio-3] DEBUG c.c.t.a.g.l.AdvancedRateLimiter - Token acquired for api_weight:NON_CORE: 1 tokens consumed, 14 remaining
2025-06-30 22:25:38 [reactor-http-nio-3] DEBUG c.c.t.a.g.filter.QPSMetricsFilter - QPS recorded - Path: /api/gateway/payment/process, IP: 127.0.0.1, User: anonymous, Priority: default
2025-06-30 22:25:38 [reactor-http-nio-3] DEBUG c.c.t.a.g.f.CircuitBreakerFilter - Using circuit breaker for API: /api/gateway/payment/process with priority: NON_CORE
2025-06-30 22:25:38 [reactor-http-nio-3] DEBUG c.c.t.a.g.f.ServiceDegradationGatewayFilter - Service degradation filter - Service: payment-service, Path: /api/payment/process, Level: CORE
2025-06-30 22:25:38 [reactor-http-nio-3] DEBUG c.c.t.a.gateway.filter.CryptoFilter - crupto filter is coming
2025-06-30 22:25:38 [reactor-http-nio-3] DEBUG c.c.t.a.g.f.ServiceDegradationFilter - Service degradation filter - Service: api, Path: /api/payment/process, Level: CORE
2025-06-30 22:25:38 [reactor-http-nio-3] DEBUG o.s.c.g.f.h.o.ObservedRequestHttpHeadersFilter - Will instrument the HTTP request headers [Content-Type:"application/json", Content-Length:"16", User-Agent:"IntelliJ HTTP Client/IntelliJ IDEA 2025.1.3", Accept-Encoding:"br, deflate, gzip, x-gzip", Accept:"*/*", host:"localhost:8080", X-Span-ID:"61108a4664ec4efa", X-Request-ID:"66154021-a33f-42c2-8e91-44186d40cf76", X-Correlation-ID:"null", X-Trace-ID:"796ed53efbd34101b519a2ed249368ad", X-Sampled:"true"]
2025-06-30 22:25:38 [reactor-http-nio-3] DEBUG o.s.c.g.f.h.o.ObservedRequestHttpHeadersFilter - Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='payment-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://localhost:8080/api/payment/process'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@2c2e1bda', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=7.22416E-4, duration(nanos)=722416.0, startTimeNanos=161485711613000}'], parentObservation={name=http.server.requests(null), error=null, context=name='http.server.requests', contextualName='null', error='null', lowCardinalityKeyValues=[exception='none', method='POST', outcome='SUCCESS', status='200', uri='UNKNOWN'], highCardinalityKeyValues=[http.url='/api/gateway/payment/process'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@692c803b', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.020048333, duration(nanos)=2.0048333E7, startTimeNanos=161485692614625}'], parentObservation=null}} created for the request. New headers are [Content-Type:"application/json", Content-Length:"16", User-Agent:"IntelliJ HTTP Client/IntelliJ IDEA 2025.1.3", Accept-Encoding:"br, deflate, gzip, x-gzip", Accept:"*/*", host:"localhost:8080", X-Span-ID:"61108a4664ec4efa", X-Request-ID:"66154021-a33f-42c2-8e91-44186d40cf76", X-Correlation-ID:"null", X-Trace-ID:"796ed53efbd34101b519a2ed249368ad", X-Sampled:"true"]
2025-06-30 22:25:38 [reactor-http-nio-3] DEBUG r.n.r.PooledConnectionProvider - [04bc0dbd] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-06-30 22:25:38 [reactor-http-nio-3] DEBUG r.netty.transport.TransportConfig - [04bc0dbd] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-06-30 22:25:38 [reactor-http-nio-3] DEBUG r.netty.transport.TransportConnector - [04bc0dbd] Connecting to [localhost/127.0.0.1:8081].
2025-06-30 22:25:38 [reactor-http-nio-3] DEBUG r.n.r.DefaultPooledConnectionProvider - [04bc0dbd, L:/127.0.0.1:60584 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-06-30 22:25:38 [reactor-http-nio-3] DEBUG r.n.r.PooledConnectionProvider - [04bc0dbd, L:/127.0.0.1:60584 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-06-30 22:25:38 [reactor-http-nio-3] DEBUG r.n.r.DefaultPooledConnectionProvider - [04bc0dbd, L:/127.0.0.1:60584 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x04bc0dbd, L:/127.0.0.1:60584 - R:localhost/127.0.0.1:8081]}, [connected])
2025-06-30 22:25:38 [reactor-http-nio-3] DEBUG r.n.r.DefaultPooledConnectionProvider - [04bc0dbd-1, L:/127.0.0.1:60584 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x04bc0dbd, L:/127.0.0.1:60584 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-06-30 22:25:38 [reactor-http-nio-3] DEBUG r.n.http.client.HttpClientConnect - [04bc0dbd-1, L:/127.0.0.1:60584 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/api/payment/process, method=POST}
2025-06-30 22:25:38 [reactor-http-nio-3] DEBUG r.n.r.DefaultPooledConnectionProvider - [04bc0dbd-1, L:/127.0.0.1:60584 - R:localhost/127.0.0.1:8081] onStateChange(POST{uri=/api/payment/process, connection=PooledConnection{channel=[id: 0x04bc0dbd, L:/127.0.0.1:60584 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-06-30 22:25:38 [reactor-http-nio-3] DEBUG reactor.netty.channel.FluxReceive - [02d2f245-1, L:/127.0.0.1:8080 - R:/127.0.0.1:60583] [terminated=true, cancelled=false, pending=1, error=null]: subscribing inbound receiver
2025-06-30 22:25:38 [reactor-http-nio-3] DEBUG r.n.http.client.HttpClientOperations - [04bc0dbd-1, L:/127.0.0.1:60584 - R:localhost/127.0.0.1:8081] Outbound error happened
java.lang.RuntimeException: 解密失败: Cannot invoke "String.hashCode()" because "key" is null
	at com.citi.tts.api.gateway.crypto.ReactiveAESService.lambda$decrypt$3(ReactiveAESService.java:19)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:94)
	at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
	at reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.onError(FluxTimeout.java:220)
	at reactor.core.publisher.MonoCallable$MonoCallableSubscription.request(MonoCallable.java:145)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.SerializedSubscriber.request(SerializedSubscriber.java:151)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onSubscribe(FluxOnErrorResume.java:74)
	at reactor.core.publisher.SerializedSubscriber.onSubscribe(SerializedSubscriber.java:65)
	at reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.onSubscribe(FluxTimeout.java:155)
	at reactor.core.publisher.MonoCallable.subscribe(MonoCallable.java:48)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext(MonoFlatMapMany.java:196)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
	at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2096)
	at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
	at reactor.netty.channel.FluxReceive.terminateReceiver(FluxReceive.java:481)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:273)
	at reactor.netty.channel.FluxReceive.request(FluxReceive.java:131)
	at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:164)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.request(FluxPeek.java:138)
	at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:164)
	at reactor.core.publisher.Operators$BaseFluxToMonoOperator.request(Operators.java:2066)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.request(FluxFilterFuseable.java:411)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.request(FluxMapFuseable.java:360)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onSubscribe(MonoFlatMapMany.java:141)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onSubscribe(FluxContextWrite.java:101)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onSubscribe(FluxMapFuseable.java:265)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onSubscribe(FluxFilterFuseable.java:305)
	at reactor.core.publisher.Operators$BaseFluxToMonoOperator.onSubscribe(Operators.java:2050)
	at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onSubscribe(FluxPeek.java:171)
	at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
	at reactor.netty.channel.FluxReceive.startReceiver(FluxReceive.java:170)
	at reactor.netty.channel.FluxReceive.subscribe(FluxReceive.java:145)
	at reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:68)
	at reactor.netty.ByteBufFlux.subscribe(ByteBufFlux.java:340)
	at reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:68)
	at reactor.netty.ByteBufFlux.subscribe(ByteBufFlux.java:340)
	at reactor.core.publisher.Flux.subscribe(Flux.java:8891)
	at reactor.netty.channel.MonoSendMany.subscribe(MonoSendMany.java:102)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.netty.FutureMono.doSubscribe(FutureMono.java:122)
	at reactor.netty.FutureMono$DeferredFutureMono.subscribe(FutureMono.java:114)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.netty.NettyOutbound.subscribe(NettyOutbound.java:336)
	at reactor.core.publisher.MonoSource.subscribe(MonoSource.java:68)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.netty.http.client.HttpClientConnect$HttpIOHandlerObserver.onStateChange(HttpClientConnect.java:459)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onStateChange(DefaultPooledConnectionProvider.java:207)
	at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnection.onStateChange(DefaultPooledConnectionProvider.java:468)
	at reactor.netty.channel.ChannelOperationsHandler.channelActive(ChannelOperationsHandler.java:62)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:260)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:238)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:231)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelActive(CombinedChannelDuplexHandler.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelActive(ChannelInboundHandlerAdapter.java:69)
	at io.netty.channel.CombinedChannelDuplexHandler.channelActive(CombinedChannelDuplexHandler.java:211)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:260)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:238)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:231)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelActive(DefaultChannelPipeline.java:1345)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:258)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:238)
	at io.netty.channel.DefaultChannelPipeline.fireChannelActive(DefaultChannelPipeline.java:844)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:310)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:340)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.lang.NullPointerException: Cannot invoke "String.hashCode()" because "key" is null
	at com.citi.tts.api.gateway.crypto.AES256Util.hastTime(AES256Util.java:33)
	at com.citi.tts.api.gateway.crypto.AES256Util.decrypt(AES256Util.java:50)
	at com.citi.tts.api.gateway.crypto.ReactiveAESService.lambda$decrypt$2(ReactiveAESService.java:16)
	at reactor.core.publisher.MonoCallable$MonoCallableSubscription.request(MonoCallable.java:137)
	... 83 common frames omitted
2025-06-30 22:25:38 [reactor-http-nio-3] WARN  r.n.http.client.HttpClientConnect - [04bc0dbd-1, L:/127.0.0.1:60584 - R:localhost/127.0.0.1:8081] The connection observed an error
java.lang.RuntimeException: 解密失败: Cannot invoke "String.hashCode()" because "key" is null
	at com.citi.tts.api.gateway.crypto.ReactiveAESService.lambda$decrypt$3(ReactiveAESService.java:19)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:94)
	at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
	at reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.onError(FluxTimeout.java:220)
	at reactor.core.publisher.MonoCallable$MonoCallableSubscription.request(MonoCallable.java:145)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.SerializedSubscriber.request(SerializedSubscriber.java:151)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onSubscribe(FluxOnErrorResume.java:74)
	at reactor.core.publisher.SerializedSubscriber.onSubscribe(SerializedSubscriber.java:65)
	at reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.onSubscribe(FluxTimeout.java:155)
	at reactor.core.publisher.MonoCallable.subscribe(MonoCallable.java:48)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext(MonoFlatMapMany.java:196)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
	at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2096)
	at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
	at reactor.netty.channel.FluxReceive.terminateReceiver(FluxReceive.java:481)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:273)
	at reactor.netty.channel.FluxReceive.request(FluxReceive.java:131)
	at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:164)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.request(FluxPeek.java:138)
	at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:164)
	at reactor.core.publisher.Operators$BaseFluxToMonoOperator.request(Operators.java:2066)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.request(FluxFilterFuseable.java:411)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.request(FluxMapFuseable.java:360)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onSubscribe(MonoFlatMapMany.java:141)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onSubscribe(FluxContextWrite.java:101)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onSubscribe(FluxMapFuseable.java:265)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onSubscribe(FluxFilterFuseable.java:305)
	at reactor.core.publisher.Operators$BaseFluxToMonoOperator.onSubscribe(Operators.java:2050)
	at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onSubscribe(FluxPeek.java:171)
	at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
	at reactor.netty.channel.FluxReceive.startReceiver(FluxReceive.java:170)
	at reactor.netty.channel.FluxReceive.subscribe(FluxReceive.java:145)
	at reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:68)
	at reactor.netty.ByteBufFlux.subscribe(ByteBufFlux.java:340)
	at reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:68)
	at reactor.netty.ByteBufFlux.subscribe(ByteBufFlux.java:340)
	at reactor.core.publisher.Flux.subscribe(Flux.java:8891)
	at reactor.netty.channel.MonoSendMany.subscribe(MonoSendMany.java:102)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.netty.FutureMono.doSubscribe(FutureMono.java:122)
	at reactor.netty.FutureMono$DeferredFutureMono.subscribe(FutureMono.java:114)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.netty.NettyOutbound.subscribe(NettyOutbound.java:336)
	at reactor.core.publisher.MonoSource.subscribe(MonoSource.java:68)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.netty.http.client.HttpClientConnect$HttpIOHandlerObserver.onStateChange(HttpClientConnect.java:459)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onStateChange(DefaultPooledConnectionProvider.java:207)
	at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnection.onStateChange(DefaultPooledConnectionProvider.java:468)
	at reactor.netty.channel.ChannelOperationsHandler.channelActive(ChannelOperationsHandler.java:62)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:260)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:238)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:231)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelActive(CombinedChannelDuplexHandler.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelActive(ChannelInboundHandlerAdapter.java:69)
	at io.netty.channel.CombinedChannelDuplexHandler.channelActive(CombinedChannelDuplexHandler.java:211)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:260)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:238)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:231)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelActive(DefaultChannelPipeline.java:1345)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:258)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:238)
	at io.netty.channel.DefaultChannelPipeline.fireChannelActive(DefaultChannelPipeline.java:844)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:310)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:340)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.lang.NullPointerException: Cannot invoke "String.hashCode()" because "key" is null
	at com.citi.tts.api.gateway.crypto.AES256Util.hastTime(AES256Util.java:33)
	at com.citi.tts.api.gateway.crypto.AES256Util.decrypt(AES256Util.java:50)
	at com.citi.tts.api.gateway.crypto.ReactiveAESService.lambda$decrypt$2(ReactiveAESService.java:16)
	at reactor.core.publisher.MonoCallable$MonoCallableSubscription.request(MonoCallable.java:137)
	... 83 common frames omitted
2025-06-30 22:25:38 [reactor-http-nio-3] ERROR c.c.t.a.g.f.ServiceDegradationFilter - Service error detected - Service: api, Path: /api/payment/process, Error: 解密失败: Cannot invoke "String.hashCode()" because "key" is null
2025-06-30 22:25:38 [reactor-http-nio-3] INFO  c.c.t.a.g.s.ServiceDegradationService - Service degradation triggered - Service: api, Level: CORE, Error: RuntimeException
2025-06-30 22:25:38 [reactor-http-nio-3] INFO  c.c.t.a.g.s.ServiceDegradationService - Handling CORE service degradation for: api
2025-06-30 22:25:38 [reactor-http-nio-3] INFO  c.c.t.a.g.s.i.CoreServiceFallbackHandlerImpl - Core service fallback triggered - Service: api, Path: /api/payment/process
2025-06-30 22:25:38 [reactor-http-nio-3] WARN  c.c.t.a.g.s.i.CoreServiceFallbackHandlerImpl - Failed to get Redis fallback data for key: fallback:core:api:/api/payment/process
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1858)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1789)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1586)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.lambda$getConnection$0(LettuceConnectionFactory.java:1566)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.doInLock(LettuceConnectionFactory.java:1527)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1563)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedReactiveConnection(LettuceConnectionFactory.java:1274)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getReactiveConnection(LettuceConnectionFactory.java:1149)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getReactiveConnection(LettuceConnectionFactory.java:120)
	at org.springframework.data.redis.core.ReactiveRedisTemplate.lambda$getConnection$2(ReactiveRedisTemplate.java:273)
	at reactor.core.publisher.MonoSupplier.call(MonoSupplier.java:67)
	at reactor.core.publisher.FluxUsingWhen.subscribe(FluxUsingWhen.java:80)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onError(MonoIgnoreThen.java:280)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:205)
	at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
	at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:229)
	at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:279)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.maybeOnError(FluxConcatMapNoPrefetch.java:327)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onNext(FluxConcatMapNoPrefetch.java:212)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
	at reactor.core.publisher.SinkManyEmitterProcessor.drain(SinkManyEmitterProcessor.java:476)
	at reactor.core.publisher.SinkManyEmitterProcessor$EmitterInner.drainParent(SinkManyEmitterProcessor.java:620)
	at reactor.core.publisher.FluxPublish$PubSubInner.request(FluxPublish.java:874)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
	at reactor.core.publisher.Operators$DeferredSubscription.request(Operators.java:1742)
	at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:196)
	at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:205)
	at reactor.netty.http.client.HttpClientConnect$HttpObserver.onUncaughtException(HttpClientConnect.java:417)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onUncaughtException(ReactorNetty.java:715)
	at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onUncaughtException(DefaultPooledConnectionProvider.java:225)
	at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnection.onUncaughtException(DefaultPooledConnectionProvider.java:478)
	at reactor.netty.http.client.HttpClientOperations.onOutboundError(HttpClientOperations.java:693)
	at reactor.netty.channel.ChannelOperations.onError(ChannelOperations.java:272)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onError(MonoIgnoreThen.java:280)
	at reactor.netty.channel.MonoSendMany$SendManyInner.run(MonoSendMany.java:352)
	at reactor.netty.channel.MonoSendMany$SendManyInner.trySchedule(MonoSendMany.java:434)
	at reactor.netty.channel.MonoSendMany$SendManyInner.onError(MonoSendMany.java:199)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onError(MonoFlatMapMany.java:256)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:106)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
	at reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.onError(FluxTimeout.java:220)
	at reactor.core.publisher.MonoCallable$MonoCallableSubscription.request(MonoCallable.java:145)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.SerializedSubscriber.request(SerializedSubscriber.java:151)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onSubscribe(FluxOnErrorResume.java:74)
	at reactor.core.publisher.SerializedSubscriber.onSubscribe(SerializedSubscriber.java:65)
	at reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.onSubscribe(FluxTimeout.java:155)
	at reactor.core.publisher.MonoCallable.subscribe(MonoCallable.java:48)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext(MonoFlatMapMany.java:196)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
	at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2096)
	at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
	at reactor.netty.channel.FluxReceive.terminateReceiver(FluxReceive.java:481)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:273)
	at reactor.netty.channel.FluxReceive.request(FluxReceive.java:131)
	at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:164)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.request(FluxPeek.java:138)
	at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:164)
	at reactor.core.publisher.Operators$BaseFluxToMonoOperator.request(Operators.java:2066)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.request(FluxFilterFuseable.java:411)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.request(FluxMapFuseable.java:360)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onSubscribe(MonoFlatMapMany.java:141)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onSubscribe(FluxContextWrite.java:101)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onSubscribe(FluxMapFuseable.java:265)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onSubscribe(FluxFilterFuseable.java:305)
	at reactor.core.publisher.Operators$BaseFluxToMonoOperator.onSubscribe(Operators.java:2050)
	at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onSubscribe(FluxPeek.java:171)
	at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
	at reactor.netty.channel.FluxReceive.startReceiver(FluxReceive.java:170)
	at reactor.netty.channel.FluxReceive.subscribe(FluxReceive.java:145)
	at reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:68)
	at reactor.netty.ByteBufFlux.subscribe(ByteBufFlux.java:340)
	at reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:68)
	at reactor.netty.ByteBufFlux.subscribe(ByteBufFlux.java:340)
	at reactor.core.publisher.Flux.subscribe(Flux.java:8891)
	at reactor.netty.channel.MonoSendMany.subscribe(MonoSendMany.java:102)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.netty.FutureMono.doSubscribe(FutureMono.java:122)
	at reactor.netty.FutureMono$DeferredFutureMono.subscribe(FutureMono.java:114)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.netty.NettyOutbound.subscribe(NettyOutbound.java:336)
	at reactor.core.publisher.MonoSource.subscribe(MonoSource.java:68)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.netty.http.client.HttpClientConnect$HttpIOHandlerObserver.onStateChange(HttpClientConnect.java:459)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onStateChange(DefaultPooledConnectionProvider.java:207)
	at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnection.onStateChange(DefaultPooledConnectionProvider.java:468)
	at reactor.netty.channel.ChannelOperationsHandler.channelActive(ChannelOperationsHandler.java:62)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:260)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:238)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:231)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelActive(CombinedChannelDuplexHandler.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelActive(ChannelInboundHandlerAdapter.java:69)
	at io.netty.channel.CombinedChannelDuplexHandler.channelActive(CombinedChannelDuplexHandler.java:211)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:260)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:238)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:231)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelActive(DefaultChannelPipeline.java:1345)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:258)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:238)
	at io.netty.channel.DefaultChannelPipeline.fireChannelActive(DefaultChannelPipeline.java:844)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:310)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:340)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to localhost/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:63)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:41)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:354)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:220)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:112)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:112)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1787)
	... 134 common frames omitted
Caused by: io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: localhost/127.0.0.1:6379
Caused by: java.net.ConnectException: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:973)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:336)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:339)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-06-30 22:25:38 [reactor-http-nio-3] DEBUG i.g.r.c.i.CircuitBreakerStateMachine - CircuitBreaker 'nonCoreApiCircuitBreaker' succeeded:
2025-06-30 22:25:38 [reactor-http-nio-3] DEBUG r.n.http.server.HttpServerOperations - [02d2f245-1, L:/127.0.0.1:8080 - R:/127.0.0.1:60583] Last HTTP response frame
2025-06-30 22:25:38 [reactor-http-nio-3] DEBUG r.n.http.server.HttpServerOperations - [02d2f245-1, L:/127.0.0.1:8080 - R:/127.0.0.1:60583] Headers are not sent before onComplete().
2025-06-30 22:25:38 [reactor-http-nio-3] DEBUG r.n.http.server.HttpServerOperations - [02d2f245-1, L:/127.0.0.1:8080 - R:/127.0.0.1:60583] Decreasing pending responses count: 0
2025-06-30 22:25:38 [reactor-http-nio-3] DEBUG r.n.http.server.HttpServerOperations - [02d2f245-1, L:/127.0.0.1:8080 - R:/127.0.0.1:60583] Last HTTP packet was sent, terminating the channel
2025-06-30 22:25:38 [reactor-http-nio-3] DEBUG r.netty.channel.ChannelOperations - [02d2f245-1, L:/127.0.0.1:8080 - R:/127.0.0.1:60583] [HttpServer] Channel inbound receiver cancelled (subscription disposed).
2025-06-30 22:25:38 [reactor-http-nio-3] DEBUG c.c.t.a.gateway.tracing.TraceContext - Finished trace: 796ed53efbd34101b519a2ed249368ad with status: 200
2025-06-30 22:25:38 [reactor-http-nio-3] ERROR reactor.core.publisher.Operators - Operator called default onErrorDropped
java.lang.UnsupportedOperationException: null
	at org.springframework.http.ReadOnlyHttpHeaders.add(ReadOnlyHttpHeaders.java:97)
	at com.citi.tts.api.gateway.tracing.TraceFilter.addTraceHeadersToResponse(TraceFilter.java:113)
	at com.citi.tts.api.gateway.tracing.TraceFilter.lambda$filter$0(TraceFilter.java:69)
	at reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.runFinally(FluxDoFinally.java:146)
	at reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete(FluxDoFinally.java:129)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at io.github.resilience4j.reactor.circuitbreaker.operator.CircuitBreakerSubscriber.hookOnComplete(CircuitBreakerSubscriber.java:69)
	at reactor.core.publisher.BaseSubscriber.onComplete(BaseSubscriber.java:197)
	at reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete(FluxDoFinally.java:128)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:210)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onComplete(MonoPeekTerminal.java:299)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onComplete(MonoPeekTerminal.java:299)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onError(MonoPeekTerminal.java:258)
	at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.FluxUsingWhen.subscribe(FluxUsingWhen.java:98)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onError(MonoIgnoreThen.java:280)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:205)
	at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
	at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:229)
	at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:279)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.maybeOnError(FluxConcatMapNoPrefetch.java:327)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onNext(FluxConcatMapNoPrefetch.java:212)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
	at reactor.core.publisher.SinkManyEmitterProcessor.drain(SinkManyEmitterProcessor.java:476)
	at reactor.core.publisher.SinkManyEmitterProcessor$EmitterInner.drainParent(SinkManyEmitterProcessor.java:620)
	at reactor.core.publisher.FluxPublish$PubSubInner.request(FluxPublish.java:874)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
	at reactor.core.publisher.Operators$DeferredSubscription.request(Operators.java:1742)
	at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:196)
	at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:205)
	at reactor.netty.http.client.HttpClientConnect$HttpObserver.onUncaughtException(HttpClientConnect.java:417)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onUncaughtException(ReactorNetty.java:715)
	at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onUncaughtException(DefaultPooledConnectionProvider.java:225)
	at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnection.onUncaughtException(DefaultPooledConnectionProvider.java:478)
	at reactor.netty.http.client.HttpClientOperations.onOutboundError(HttpClientOperations.java:693)
	at reactor.netty.channel.ChannelOperations.onError(ChannelOperations.java:272)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onError(MonoIgnoreThen.java:280)
	at reactor.netty.channel.MonoSendMany$SendManyInner.run(MonoSendMany.java:352)
	at reactor.netty.channel.MonoSendMany$SendManyInner.trySchedule(MonoSendMany.java:434)
	at reactor.netty.channel.MonoSendMany$SendManyInner.onError(MonoSendMany.java:199)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onError(MonoFlatMapMany.java:256)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:106)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
	at reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.onError(FluxTimeout.java:220)
	at reactor.core.publisher.MonoCallable$MonoCallableSubscription.request(MonoCallable.java:145)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.SerializedSubscriber.request(SerializedSubscriber.java:151)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onSubscribe(FluxOnErrorResume.java:74)
	at reactor.core.publisher.SerializedSubscriber.onSubscribe(SerializedSubscriber.java:65)
	at reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.onSubscribe(FluxTimeout.java:155)
	at reactor.core.publisher.MonoCallable.subscribe(MonoCallable.java:48)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext(MonoFlatMapMany.java:196)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
	at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2096)
	at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
	at reactor.netty.channel.FluxReceive.terminateReceiver(FluxReceive.java:481)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:273)
	at reactor.netty.channel.FluxReceive.request(FluxReceive.java:131)
	at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:164)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.request(FluxPeek.java:138)
	at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:164)
	at reactor.core.publisher.Operators$BaseFluxToMonoOperator.request(Operators.java:2066)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.request(FluxFilterFuseable.java:411)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.request(FluxMapFuseable.java:360)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onSubscribe(MonoFlatMapMany.java:141)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onSubscribe(FluxContextWrite.java:101)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onSubscribe(FluxMapFuseable.java:265)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onSubscribe(FluxFilterFuseable.java:305)
	at reactor.core.publisher.Operators$BaseFluxToMonoOperator.onSubscribe(Operators.java:2050)
	at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onSubscribe(FluxPeek.java:171)
	at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
	at reactor.netty.channel.FluxReceive.startReceiver(FluxReceive.java:170)
	at reactor.netty.channel.FluxReceive.subscribe(FluxReceive.java:145)
	at reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:68)
	at reactor.netty.ByteBufFlux.subscribe(ByteBufFlux.java:340)
	at reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:68)
	at reactor.netty.ByteBufFlux.subscribe(ByteBufFlux.java:340)
	at reactor.core.publisher.Flux.subscribe(Flux.java:8891)
	at reactor.netty.channel.MonoSendMany.subscribe(MonoSendMany.java:102)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.netty.FutureMono.doSubscribe(FutureMono.java:122)
	at reactor.netty.FutureMono$DeferredFutureMono.subscribe(FutureMono.java:114)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.netty.NettyOutbound.subscribe(NettyOutbound.java:336)
	at reactor.core.publisher.MonoSource.subscribe(MonoSource.java:68)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.netty.http.client.HttpClientConnect$HttpIOHandlerObserver.onStateChange(HttpClientConnect.java:459)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onStateChange(DefaultPooledConnectionProvider.java:207)
	at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnection.onStateChange(DefaultPooledConnectionProvider.java:468)
	at reactor.netty.channel.ChannelOperationsHandler.channelActive(ChannelOperationsHandler.java:62)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:260)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:238)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:231)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelActive(CombinedChannelDuplexHandler.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelActive(ChannelInboundHandlerAdapter.java:69)
	at io.netty.channel.CombinedChannelDuplexHandler.channelActive(CombinedChannelDuplexHandler.java:211)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:260)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:238)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:231)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelActive(DefaultChannelPipeline.java:1345)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:258)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:238)
	at io.netty.channel.DefaultChannelPipeline.fireChannelActive(DefaultChannelPipeline.java:844)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:310)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:340)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-06-30 22:25:38 [reactor-http-nio-3] DEBUG r.n.r.DefaultPooledConnectionProvider - [04bc0dbd, L:/127.0.0.1:60584 - R:localhost/127.0.0.1:8081] onStateChange(POST{uri=/api/payment/process, connection=PooledConnection{channel=[id: 0x04bc0dbd, L:/127.0.0.1:60584 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-06-30 22:25:38 [reactor-http-nio-3] DEBUG r.n.r.DefaultPooledConnectionProvider - [04bc0dbd, L:/127.0.0.1:60584 - R:localhost/127.0.0.1:8081] onStateChange(POST{uri=/api/payment/process, connection=PooledConnection{channel=[id: 0x04bc0dbd, L:/127.0.0.1:60584 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-06-30 22:25:38 [reactor-http-nio-3] DEBUG r.n.r.PooledConnectionProvider - [04bc0dbd, L:/127.0.0.1:60584 ! R:localhost/127.0.0.1:8081] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-06-30 22:25:38 [reactor-http-nio-3] DEBUG r.n.r.DefaultPooledConnectionProvider - [04bc0dbd, L:/127.0.0.1:60584 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x04bc0dbd, L:/127.0.0.1:60584 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-06-30 22:26:03 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Performing periodic health check
2025-06-30 22:26:32 [boundedElastic-2] INFO  c.c.t.a.g.t.ReactiveTraceScheduler - Reactive Trace Statistics - Manager: Total=2, Sampled=2, Active=2, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0
2025-06-30 22:26:33 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Performing periodic health check
2025-06-30 22:26:33 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Cleaning up expired instances
2025-06-30 22:26:33 [scheduling-1] DEBUG c.c.t.a.g.s.QPSCleanupScheduler - Starting scheduled QPS data cleanup...
2025-06-30 22:26:33 [scheduling-1] INFO  c.c.t.api.gateway.metrics.QPSMetrics - Manual cleanup completed. Total cleaned: 0, Active entries: API=1, IP=1, User=1, Priority=1
2025-06-30 22:26:33 [scheduling-1] DEBUG c.c.t.a.g.s.QPSCleanupScheduler - Scheduled QPS data cleanup completed
2025-06-30 22:26:33 [scheduling-1] INFO  c.c.t.a.g.t.AdaptiveTraceScheduler - Adaptive Trace Statistics - Manager: Total=2, Sampled=2, Active=2, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0, Multiplier: 1.0
2025-06-30 22:26:33 [scheduling-1] INFO  c.c.t.a.g.tracing.TraceScheduler - Trace Statistics - Manager: Total=2, Sampled=2, Active=2, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0
2025-06-30 22:26:58 [reactor-http-nio-4] DEBUG r.n.http.server.HttpServerOperations - [5634f9b6, L:/127.0.0.1:8080 - R:/127.0.0.1:60742] New http connection, requesting read
2025-06-30 22:26:58 [reactor-http-nio-4] DEBUG r.netty.transport.TransportConfig - [5634f9b6, L:/127.0.0.1:8080 - R:/127.0.0.1:60742] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpServerCodec), (reactor.left.httpTrafficHandler = reactor.netty.http.server.HttpTrafficHandler), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-06-30 22:26:58 [reactor-http-nio-4] DEBUG r.n.http.server.HttpServerOperations - [5634f9b6, L:/127.0.0.1:8080 - R:/127.0.0.1:60742] Increasing pending responses count: 1
2025-06-30 22:26:58 [reactor-http-nio-4] DEBUG r.netty.http.server.HttpServer - [5634f9b6-1, L:/127.0.0.1:8080 - R:/127.0.0.1:60742] Handler is being applied: org.springframework.http.server.reactive.ReactorHttpHandlerAdapter@3d5700a3
2025-06-30 22:26:58 [reactor-http-nio-4] DEBUG o.s.c.g.h.RoutePredicateHandlerMapping - Route matched: payment-route
2025-06-30 22:26:58 [reactor-http-nio-4] DEBUG o.s.c.g.h.RoutePredicateHandlerMapping - Mapping [Exchange: POST http://localhost:8080/api/gateway/payment/process] to Route{id='payment-route', uri=http://localhost:8081, order=0, predicate=Paths: [/api/gateway/payment/**], match trailing slash: true, gatewayFilters=[[[RewritePath /api/gateway/payment/(?<segment>.*) = '/api/payment/${segment}'], order = 0], com.citi.tts.api.gateway.filter.AdvancedRateLimitFilter@1de12397, [com.citi.tts.api.gateway.filter.ServiceDegradationGatewayFilter$1@20dd1b2d, order = 0], com.citi.tts.api.gateway.filter.CircuitBreakerFilter@639948a2, [com.citi.tts.api.gateway.filter.CryptoFilter@7f41d979, order = 0]], metadata={}}
2025-06-30 22:26:58 [reactor-http-nio-4] DEBUG o.s.c.g.h.RoutePredicateHandlerMapping - [5634f9b6-3] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@1d33e72e
2025-06-30 22:26:58 [reactor-http-nio-4] DEBUG o.s.c.g.handler.FilteringWebHandler - Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@5c7e55a4}, order = -2147483648], [GatewayFilterAdapter{delegate=com.citi.tts.api.gateway.tracing.TraceFilter@b68932b}, order = -2147483598], com.citi.tts.api.gateway.filter.AdvancedRateLimitFilter@1de12397, [GatewayFilterAdapter{delegate=com.citi.tts.api.gateway.filter.QPSMetricsFilter@4a5d5b38}, order = -2147483548], com.citi.tts.api.gateway.filter.CircuitBreakerFilter@639948a2, [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@da67c46}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@42734b71}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@43f7f48d}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@29431f61}, order = 0], [[RewritePath /api/gateway/payment/(?<segment>.*) = '/api/payment/${segment}'], order = 0], [com.citi.tts.api.gateway.filter.ServiceDegradationGatewayFilter$1@20dd1b2d, order = 0], [com.citi.tts.api.gateway.filter.CryptoFilter@7f41d979, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@7ae6927}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ReactiveLoadBalancerClientFilter@16c9e378}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.LoadBalancerServiceInstanceCookieFilter@b87ea8b}, order = 10151], [GatewayFilterAdapter{delegate=com.citi.tts.api.gateway.filter.ServiceDegradationFilter@6fdaef04}, order = 2147483547], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@5a3be84}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@5f32ab17}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@7d0df326}, order = 2147483647]]
2025-06-30 22:26:58 [reactor-http-nio-4] DEBUG c.c.t.a.gateway.tracing.TraceContext - Created root trace context: 1fb73330be8e4baca97edef0eac2c54e
2025-06-30 22:26:58 [reactor-http-nio-4] DEBUG c.c.t.a.gateway.tracing.TraceManager - Created new sampled trace context: 1fb73330be8e4baca97edef0eac2c54e
2025-06-30 22:26:58 [reactor-http-nio-4] DEBUG c.c.t.a.g.f.AdvancedRateLimitFilter - Processing rate limit for: POST /api/gateway/payment/process from IP: 127.0.0.1, User: null
2025-06-30 22:26:58 [reactor-http-nio-4] DEBUG c.c.t.a.g.l.AdvancedRateLimiter - Tokens refilled for api_weight:NON_CORE: +800 tokens, total: 15
2025-06-30 22:26:58 [reactor-http-nio-4] DEBUG c.c.t.a.g.l.AdvancedRateLimiter - Token acquired for api_weight:NON_CORE: 1 tokens consumed, 14 remaining
2025-06-30 22:26:58 [reactor-http-nio-4] DEBUG c.c.t.a.g.filter.QPSMetricsFilter - QPS recorded - Path: /api/gateway/payment/process, IP: 127.0.0.1, User: anonymous, Priority: default
2025-06-30 22:26:58 [reactor-http-nio-4] DEBUG c.c.t.a.g.f.CircuitBreakerFilter - Using circuit breaker for API: /api/gateway/payment/process with priority: NON_CORE
2025-06-30 22:26:58 [reactor-http-nio-4] DEBUG c.c.t.a.g.f.ServiceDegradationGatewayFilter - Service degradation filter - Service: payment-service, Path: /api/payment/process, Level: CORE
2025-06-30 22:26:58 [reactor-http-nio-4] DEBUG c.c.t.a.gateway.filter.CryptoFilter - crupto filter is coming
2025-06-30 22:26:58 [reactor-http-nio-4] DEBUG c.c.t.a.g.f.ServiceDegradationFilter - Service degradation filter - Service: api, Path: /api/payment/process, Level: CORE
2025-06-30 22:26:58 [reactor-http-nio-4] DEBUG o.s.c.g.f.h.o.ObservedRequestHttpHeadersFilter - Will instrument the HTTP request headers [Content-Type:"application/json", Content-Length:"16", User-Agent:"IntelliJ HTTP Client/IntelliJ IDEA 2025.1.3", Accept-Encoding:"br, deflate, gzip, x-gzip", Accept:"*/*", host:"localhost:8080", X-Span-ID:"abd0dc5053da447c", X-Request-ID:"408e1710-86e0-47bb-993a-a6ee599c6dfc", X-Correlation-ID:"null", X-Trace-ID:"1fb73330be8e4baca97edef0eac2c54e", X-Sampled:"true"]
2025-06-30 22:26:58 [reactor-http-nio-4] DEBUG o.s.c.g.f.h.o.ObservedRequestHttpHeadersFilter - Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='payment-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://localhost:8080/api/payment/process'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@3d74c999', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=2.51334E-4, duration(nanos)=251334.0, startTimeNanos=161566155439791}'], parentObservation={name=http.server.requests(null), error=null, context=name='http.server.requests', contextualName='null', error='null', lowCardinalityKeyValues=[exception='none', method='POST', outcome='SUCCESS', status='200', uri='UNKNOWN'], highCardinalityKeyValues=[http.url='/api/gateway/payment/process'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@78765053', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.030962958, duration(nanos)=3.0962958E7, startTimeNanos=161566124840208}'], parentObservation=null}} created for the request. New headers are [Content-Type:"application/json", Content-Length:"16", User-Agent:"IntelliJ HTTP Client/IntelliJ IDEA 2025.1.3", Accept-Encoding:"br, deflate, gzip, x-gzip", Accept:"*/*", host:"localhost:8080", X-Span-ID:"abd0dc5053da447c", X-Request-ID:"408e1710-86e0-47bb-993a-a6ee599c6dfc", X-Correlation-ID:"null", X-Trace-ID:"1fb73330be8e4baca97edef0eac2c54e", X-Sampled:"true"]
2025-06-30 22:26:58 [reactor-http-nio-4] DEBUG r.n.r.PooledConnectionProvider - [40bc2cfb] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-06-30 22:26:58 [reactor-http-nio-4] DEBUG r.netty.transport.TransportConfig - [40bc2cfb] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-06-30 22:26:58 [reactor-http-nio-4] DEBUG r.netty.transport.TransportConnector - [40bc2cfb] Connecting to [localhost/127.0.0.1:8081].
2025-06-30 22:26:58 [reactor-http-nio-4] DEBUG r.n.r.DefaultPooledConnectionProvider - [40bc2cfb, L:/127.0.0.1:60743 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-06-30 22:26:58 [reactor-http-nio-4] DEBUG r.n.r.PooledConnectionProvider - [40bc2cfb, L:/127.0.0.1:60743 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-06-30 22:26:58 [reactor-http-nio-4] DEBUG r.n.r.DefaultPooledConnectionProvider - [40bc2cfb, L:/127.0.0.1:60743 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x40bc2cfb, L:/127.0.0.1:60743 - R:localhost/127.0.0.1:8081]}, [connected])
2025-06-30 22:26:58 [reactor-http-nio-4] DEBUG r.n.r.DefaultPooledConnectionProvider - [40bc2cfb-1, L:/127.0.0.1:60743 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x40bc2cfb, L:/127.0.0.1:60743 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-06-30 22:26:58 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [40bc2cfb-1, L:/127.0.0.1:60743 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/api/payment/process, method=POST}
2025-06-30 22:26:58 [reactor-http-nio-4] DEBUG r.n.r.DefaultPooledConnectionProvider - [40bc2cfb-1, L:/127.0.0.1:60743 - R:localhost/127.0.0.1:8081] onStateChange(POST{uri=/api/payment/process, connection=PooledConnection{channel=[id: 0x40bc2cfb, L:/127.0.0.1:60743 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-06-30 22:26:58 [reactor-http-nio-4] DEBUG reactor.netty.channel.FluxReceive - [5634f9b6-1, L:/127.0.0.1:8080 - R:/127.0.0.1:60742] [terminated=true, cancelled=false, pending=1, error=null]: subscribing inbound receiver
2025-06-30 22:26:58 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [40bc2cfb-1, L:/127.0.0.1:60743 - R:localhost/127.0.0.1:8081] Outbound error happened
java.lang.RuntimeException: 解密失败: Cannot invoke "String.hashCode()" because "key" is null
	at com.citi.tts.api.gateway.crypto.ReactiveAESService.lambda$decrypt$3(ReactiveAESService.java:19)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:94)
	at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
	at reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.onError(FluxTimeout.java:220)
	at reactor.core.publisher.MonoCallable$MonoCallableSubscription.request(MonoCallable.java:145)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.SerializedSubscriber.request(SerializedSubscriber.java:151)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onSubscribe(FluxOnErrorResume.java:74)
	at reactor.core.publisher.SerializedSubscriber.onSubscribe(SerializedSubscriber.java:65)
	at reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.onSubscribe(FluxTimeout.java:155)
	at reactor.core.publisher.MonoCallable.subscribe(MonoCallable.java:48)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext(MonoFlatMapMany.java:196)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
	at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2096)
	at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
	at reactor.netty.channel.FluxReceive.terminateReceiver(FluxReceive.java:481)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:273)
	at reactor.netty.channel.FluxReceive.request(FluxReceive.java:131)
	at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:164)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.request(FluxPeek.java:138)
	at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:164)
	at reactor.core.publisher.Operators$BaseFluxToMonoOperator.request(Operators.java:2066)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.request(FluxFilterFuseable.java:411)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.request(FluxMapFuseable.java:360)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onSubscribe(MonoFlatMapMany.java:141)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onSubscribe(FluxContextWrite.java:101)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onSubscribe(FluxMapFuseable.java:265)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onSubscribe(FluxFilterFuseable.java:305)
	at reactor.core.publisher.Operators$BaseFluxToMonoOperator.onSubscribe(Operators.java:2050)
	at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onSubscribe(FluxPeek.java:171)
	at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
	at reactor.netty.channel.FluxReceive.startReceiver(FluxReceive.java:170)
	at reactor.netty.channel.FluxReceive.subscribe(FluxReceive.java:145)
	at reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:68)
	at reactor.netty.ByteBufFlux.subscribe(ByteBufFlux.java:340)
	at reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:68)
	at reactor.netty.ByteBufFlux.subscribe(ByteBufFlux.java:340)
	at reactor.core.publisher.Flux.subscribe(Flux.java:8891)
	at reactor.netty.channel.MonoSendMany.subscribe(MonoSendMany.java:102)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.netty.FutureMono.doSubscribe(FutureMono.java:122)
	at reactor.netty.FutureMono$DeferredFutureMono.subscribe(FutureMono.java:114)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.netty.NettyOutbound.subscribe(NettyOutbound.java:336)
	at reactor.core.publisher.MonoSource.subscribe(MonoSource.java:68)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.netty.http.client.HttpClientConnect$HttpIOHandlerObserver.onStateChange(HttpClientConnect.java:459)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onStateChange(DefaultPooledConnectionProvider.java:207)
	at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnection.onStateChange(DefaultPooledConnectionProvider.java:468)
	at reactor.netty.channel.ChannelOperationsHandler.channelActive(ChannelOperationsHandler.java:62)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:260)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:238)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:231)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelActive(CombinedChannelDuplexHandler.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelActive(ChannelInboundHandlerAdapter.java:69)
	at io.netty.channel.CombinedChannelDuplexHandler.channelActive(CombinedChannelDuplexHandler.java:211)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:260)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:238)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:231)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelActive(DefaultChannelPipeline.java:1345)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:258)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:238)
	at io.netty.channel.DefaultChannelPipeline.fireChannelActive(DefaultChannelPipeline.java:844)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:310)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:340)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.lang.NullPointerException: Cannot invoke "String.hashCode()" because "key" is null
	at com.citi.tts.api.gateway.crypto.AES256Util.hastTime(AES256Util.java:33)
	at com.citi.tts.api.gateway.crypto.AES256Util.decrypt(AES256Util.java:50)
	at com.citi.tts.api.gateway.crypto.ReactiveAESService.lambda$decrypt$2(ReactiveAESService.java:16)
	at reactor.core.publisher.MonoCallable$MonoCallableSubscription.request(MonoCallable.java:137)
	... 83 common frames omitted
2025-06-30 22:26:58 [reactor-http-nio-4] WARN  r.n.http.client.HttpClientConnect - [40bc2cfb-1, L:/127.0.0.1:60743 - R:localhost/127.0.0.1:8081] The connection observed an error
java.lang.RuntimeException: 解密失败: Cannot invoke "String.hashCode()" because "key" is null
	at com.citi.tts.api.gateway.crypto.ReactiveAESService.lambda$decrypt$3(ReactiveAESService.java:19)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:94)
	at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
	at reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.onError(FluxTimeout.java:220)
	at reactor.core.publisher.MonoCallable$MonoCallableSubscription.request(MonoCallable.java:145)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.SerializedSubscriber.request(SerializedSubscriber.java:151)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onSubscribe(FluxOnErrorResume.java:74)
	at reactor.core.publisher.SerializedSubscriber.onSubscribe(SerializedSubscriber.java:65)
	at reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.onSubscribe(FluxTimeout.java:155)
	at reactor.core.publisher.MonoCallable.subscribe(MonoCallable.java:48)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext(MonoFlatMapMany.java:196)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
	at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2096)
	at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
	at reactor.netty.channel.FluxReceive.terminateReceiver(FluxReceive.java:481)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:273)
	at reactor.netty.channel.FluxReceive.request(FluxReceive.java:131)
	at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:164)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.request(FluxPeek.java:138)
	at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:164)
	at reactor.core.publisher.Operators$BaseFluxToMonoOperator.request(Operators.java:2066)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.request(FluxFilterFuseable.java:411)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.request(FluxMapFuseable.java:360)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onSubscribe(MonoFlatMapMany.java:141)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onSubscribe(FluxContextWrite.java:101)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onSubscribe(FluxMapFuseable.java:265)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onSubscribe(FluxFilterFuseable.java:305)
	at reactor.core.publisher.Operators$BaseFluxToMonoOperator.onSubscribe(Operators.java:2050)
	at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onSubscribe(FluxPeek.java:171)
	at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
	at reactor.netty.channel.FluxReceive.startReceiver(FluxReceive.java:170)
	at reactor.netty.channel.FluxReceive.subscribe(FluxReceive.java:145)
	at reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:68)
	at reactor.netty.ByteBufFlux.subscribe(ByteBufFlux.java:340)
	at reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:68)
	at reactor.netty.ByteBufFlux.subscribe(ByteBufFlux.java:340)
	at reactor.core.publisher.Flux.subscribe(Flux.java:8891)
	at reactor.netty.channel.MonoSendMany.subscribe(MonoSendMany.java:102)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.netty.FutureMono.doSubscribe(FutureMono.java:122)
	at reactor.netty.FutureMono$DeferredFutureMono.subscribe(FutureMono.java:114)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.netty.NettyOutbound.subscribe(NettyOutbound.java:336)
	at reactor.core.publisher.MonoSource.subscribe(MonoSource.java:68)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.netty.http.client.HttpClientConnect$HttpIOHandlerObserver.onStateChange(HttpClientConnect.java:459)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onStateChange(DefaultPooledConnectionProvider.java:207)
	at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnection.onStateChange(DefaultPooledConnectionProvider.java:468)
	at reactor.netty.channel.ChannelOperationsHandler.channelActive(ChannelOperationsHandler.java:62)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:260)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:238)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:231)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelActive(CombinedChannelDuplexHandler.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelActive(ChannelInboundHandlerAdapter.java:69)
	at io.netty.channel.CombinedChannelDuplexHandler.channelActive(CombinedChannelDuplexHandler.java:211)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:260)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:238)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:231)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelActive(DefaultChannelPipeline.java:1345)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:258)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:238)
	at io.netty.channel.DefaultChannelPipeline.fireChannelActive(DefaultChannelPipeline.java:844)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:310)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:340)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.lang.NullPointerException: Cannot invoke "String.hashCode()" because "key" is null
	at com.citi.tts.api.gateway.crypto.AES256Util.hastTime(AES256Util.java:33)
	at com.citi.tts.api.gateway.crypto.AES256Util.decrypt(AES256Util.java:50)
	at com.citi.tts.api.gateway.crypto.ReactiveAESService.lambda$decrypt$2(ReactiveAESService.java:16)
	at reactor.core.publisher.MonoCallable$MonoCallableSubscription.request(MonoCallable.java:137)
	... 83 common frames omitted
2025-06-30 22:26:58 [reactor-http-nio-4] ERROR c.c.t.a.g.f.ServiceDegradationFilter - Service error detected - Service: api, Path: /api/payment/process, Error: 解密失败: Cannot invoke "String.hashCode()" because "key" is null
2025-06-30 22:26:58 [reactor-http-nio-4] INFO  c.c.t.a.g.s.ServiceDegradationService - Service degradation triggered - Service: api, Level: CORE, Error: RuntimeException
2025-06-30 22:26:58 [reactor-http-nio-4] INFO  c.c.t.a.g.s.ServiceDegradationService - Handling CORE service degradation for: api
2025-06-30 22:26:58 [reactor-http-nio-4] INFO  c.c.t.a.g.s.i.CoreServiceFallbackHandlerImpl - Core service fallback triggered - Service: api, Path: /api/payment/process
2025-06-30 22:26:58 [reactor-http-nio-4] WARN  c.c.t.a.g.s.i.CoreServiceFallbackHandlerImpl - Failed to get Redis fallback data for key: fallback:core:api:/api/payment/process
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1858)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1789)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1586)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.lambda$getConnection$0(LettuceConnectionFactory.java:1566)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.doInLock(LettuceConnectionFactory.java:1527)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1563)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedReactiveConnection(LettuceConnectionFactory.java:1274)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getReactiveConnection(LettuceConnectionFactory.java:1149)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getReactiveConnection(LettuceConnectionFactory.java:120)
	at org.springframework.data.redis.core.ReactiveRedisTemplate.lambda$getConnection$2(ReactiveRedisTemplate.java:273)
	at reactor.core.publisher.MonoSupplier.call(MonoSupplier.java:67)
	at reactor.core.publisher.FluxUsingWhen.subscribe(FluxUsingWhen.java:80)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onError(MonoIgnoreThen.java:280)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:205)
	at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
	at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:229)
	at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:279)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.maybeOnError(FluxConcatMapNoPrefetch.java:327)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onNext(FluxConcatMapNoPrefetch.java:212)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
	at reactor.core.publisher.SinkManyEmitterProcessor.drain(SinkManyEmitterProcessor.java:476)
	at reactor.core.publisher.SinkManyEmitterProcessor$EmitterInner.drainParent(SinkManyEmitterProcessor.java:620)
	at reactor.core.publisher.FluxPublish$PubSubInner.request(FluxPublish.java:874)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
	at reactor.core.publisher.Operators$DeferredSubscription.request(Operators.java:1742)
	at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:196)
	at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:205)
	at reactor.netty.http.client.HttpClientConnect$HttpObserver.onUncaughtException(HttpClientConnect.java:417)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onUncaughtException(ReactorNetty.java:715)
	at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onUncaughtException(DefaultPooledConnectionProvider.java:225)
	at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnection.onUncaughtException(DefaultPooledConnectionProvider.java:478)
	at reactor.netty.http.client.HttpClientOperations.onOutboundError(HttpClientOperations.java:693)
	at reactor.netty.channel.ChannelOperations.onError(ChannelOperations.java:272)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onError(MonoIgnoreThen.java:280)
	at reactor.netty.channel.MonoSendMany$SendManyInner.run(MonoSendMany.java:352)
	at reactor.netty.channel.MonoSendMany$SendManyInner.trySchedule(MonoSendMany.java:434)
	at reactor.netty.channel.MonoSendMany$SendManyInner.onError(MonoSendMany.java:199)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onError(MonoFlatMapMany.java:256)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:106)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
	at reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.onError(FluxTimeout.java:220)
	at reactor.core.publisher.MonoCallable$MonoCallableSubscription.request(MonoCallable.java:145)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.SerializedSubscriber.request(SerializedSubscriber.java:151)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onSubscribe(FluxOnErrorResume.java:74)
	at reactor.core.publisher.SerializedSubscriber.onSubscribe(SerializedSubscriber.java:65)
	at reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.onSubscribe(FluxTimeout.java:155)
	at reactor.core.publisher.MonoCallable.subscribe(MonoCallable.java:48)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext(MonoFlatMapMany.java:196)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
	at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2096)
	at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
	at reactor.netty.channel.FluxReceive.terminateReceiver(FluxReceive.java:481)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:273)
	at reactor.netty.channel.FluxReceive.request(FluxReceive.java:131)
	at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:164)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.request(FluxPeek.java:138)
	at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:164)
	at reactor.core.publisher.Operators$BaseFluxToMonoOperator.request(Operators.java:2066)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.request(FluxFilterFuseable.java:411)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.request(FluxMapFuseable.java:360)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onSubscribe(MonoFlatMapMany.java:141)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onSubscribe(FluxContextWrite.java:101)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onSubscribe(FluxMapFuseable.java:265)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onSubscribe(FluxFilterFuseable.java:305)
	at reactor.core.publisher.Operators$BaseFluxToMonoOperator.onSubscribe(Operators.java:2050)
	at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onSubscribe(FluxPeek.java:171)
	at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
	at reactor.netty.channel.FluxReceive.startReceiver(FluxReceive.java:170)
	at reactor.netty.channel.FluxReceive.subscribe(FluxReceive.java:145)
	at reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:68)
	at reactor.netty.ByteBufFlux.subscribe(ByteBufFlux.java:340)
	at reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:68)
	at reactor.netty.ByteBufFlux.subscribe(ByteBufFlux.java:340)
	at reactor.core.publisher.Flux.subscribe(Flux.java:8891)
	at reactor.netty.channel.MonoSendMany.subscribe(MonoSendMany.java:102)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.netty.FutureMono.doSubscribe(FutureMono.java:122)
	at reactor.netty.FutureMono$DeferredFutureMono.subscribe(FutureMono.java:114)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.netty.NettyOutbound.subscribe(NettyOutbound.java:336)
	at reactor.core.publisher.MonoSource.subscribe(MonoSource.java:68)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.netty.http.client.HttpClientConnect$HttpIOHandlerObserver.onStateChange(HttpClientConnect.java:459)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onStateChange(DefaultPooledConnectionProvider.java:207)
	at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnection.onStateChange(DefaultPooledConnectionProvider.java:468)
	at reactor.netty.channel.ChannelOperationsHandler.channelActive(ChannelOperationsHandler.java:62)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:260)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:238)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:231)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelActive(CombinedChannelDuplexHandler.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelActive(ChannelInboundHandlerAdapter.java:69)
	at io.netty.channel.CombinedChannelDuplexHandler.channelActive(CombinedChannelDuplexHandler.java:211)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:260)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:238)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:231)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelActive(DefaultChannelPipeline.java:1345)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:258)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:238)
	at io.netty.channel.DefaultChannelPipeline.fireChannelActive(DefaultChannelPipeline.java:844)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:310)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:340)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to localhost/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:63)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:41)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:354)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:220)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:112)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:112)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1787)
	... 134 common frames omitted
Caused by: io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: localhost/127.0.0.1:6379
Caused by: java.net.ConnectException: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:973)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:336)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:339)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-06-30 22:26:58 [reactor-http-nio-4] DEBUG i.g.r.c.i.CircuitBreakerStateMachine - CircuitBreaker 'nonCoreApiCircuitBreaker' succeeded:
2025-06-30 22:26:58 [reactor-http-nio-4] DEBUG r.n.http.server.HttpServerOperations - [5634f9b6-1, L:/127.0.0.1:8080 - R:/127.0.0.1:60742] Last HTTP response frame
2025-06-30 22:26:58 [reactor-http-nio-4] DEBUG r.n.http.server.HttpServerOperations - [5634f9b6-1, L:/127.0.0.1:8080 - R:/127.0.0.1:60742] Headers are not sent before onComplete().
2025-06-30 22:26:58 [reactor-http-nio-4] DEBUG r.n.http.server.HttpServerOperations - [5634f9b6-1, L:/127.0.0.1:8080 - R:/127.0.0.1:60742] Decreasing pending responses count: 0
2025-06-30 22:26:58 [reactor-http-nio-4] DEBUG r.n.http.server.HttpServerOperations - [5634f9b6-1, L:/127.0.0.1:8080 - R:/127.0.0.1:60742] Last HTTP packet was sent, terminating the channel
2025-06-30 22:26:58 [reactor-http-nio-4] DEBUG r.netty.channel.ChannelOperations - [5634f9b6-1, L:/127.0.0.1:8080 - R:/127.0.0.1:60742] [HttpServer] Channel inbound receiver cancelled (subscription disposed).
2025-06-30 22:26:58 [reactor-http-nio-4] DEBUG c.c.t.a.gateway.tracing.TraceContext - Finished trace: 1fb73330be8e4baca97edef0eac2c54e with status: 200
2025-06-30 22:26:58 [reactor-http-nio-4] ERROR reactor.core.publisher.Operators - Operator called default onErrorDropped
java.lang.UnsupportedOperationException: null
	at org.springframework.http.ReadOnlyHttpHeaders.add(ReadOnlyHttpHeaders.java:97)
	at com.citi.tts.api.gateway.tracing.TraceFilter.addTraceHeadersToResponse(TraceFilter.java:113)
	at com.citi.tts.api.gateway.tracing.TraceFilter.lambda$filter$0(TraceFilter.java:69)
	at reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.runFinally(FluxDoFinally.java:146)
	at reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete(FluxDoFinally.java:129)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at io.github.resilience4j.reactor.circuitbreaker.operator.CircuitBreakerSubscriber.hookOnComplete(CircuitBreakerSubscriber.java:69)
	at reactor.core.publisher.BaseSubscriber.onComplete(BaseSubscriber.java:197)
	at reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete(FluxDoFinally.java:128)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:210)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onComplete(MonoPeekTerminal.java:299)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onComplete(MonoPeekTerminal.java:299)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onError(MonoPeekTerminal.java:258)
	at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.FluxUsingWhen.subscribe(FluxUsingWhen.java:98)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onError(MonoIgnoreThen.java:280)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:205)
	at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
	at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:229)
	at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:279)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.maybeOnError(FluxConcatMapNoPrefetch.java:327)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onNext(FluxConcatMapNoPrefetch.java:212)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
	at reactor.core.publisher.SinkManyEmitterProcessor.drain(SinkManyEmitterProcessor.java:476)
	at reactor.core.publisher.SinkManyEmitterProcessor$EmitterInner.drainParent(SinkManyEmitterProcessor.java:620)
	at reactor.core.publisher.FluxPublish$PubSubInner.request(FluxPublish.java:874)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
	at reactor.core.publisher.Operators$DeferredSubscription.request(Operators.java:1742)
	at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:196)
	at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:205)
	at reactor.netty.http.client.HttpClientConnect$HttpObserver.onUncaughtException(HttpClientConnect.java:417)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onUncaughtException(ReactorNetty.java:715)
	at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onUncaughtException(DefaultPooledConnectionProvider.java:225)
	at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnection.onUncaughtException(DefaultPooledConnectionProvider.java:478)
	at reactor.netty.http.client.HttpClientOperations.onOutboundError(HttpClientOperations.java:693)
	at reactor.netty.channel.ChannelOperations.onError(ChannelOperations.java:272)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onError(MonoIgnoreThen.java:280)
	at reactor.netty.channel.MonoSendMany$SendManyInner.run(MonoSendMany.java:352)
	at reactor.netty.channel.MonoSendMany$SendManyInner.trySchedule(MonoSendMany.java:434)
	at reactor.netty.channel.MonoSendMany$SendManyInner.onError(MonoSendMany.java:199)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onError(MonoFlatMapMany.java:256)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:106)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
	at reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.onError(FluxTimeout.java:220)
	at reactor.core.publisher.MonoCallable$MonoCallableSubscription.request(MonoCallable.java:145)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.SerializedSubscriber.request(SerializedSubscriber.java:151)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onSubscribe(FluxOnErrorResume.java:74)
	at reactor.core.publisher.SerializedSubscriber.onSubscribe(SerializedSubscriber.java:65)
	at reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.onSubscribe(FluxTimeout.java:155)
	at reactor.core.publisher.MonoCallable.subscribe(MonoCallable.java:48)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext(MonoFlatMapMany.java:196)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
	at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2096)
	at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
	at reactor.netty.channel.FluxReceive.terminateReceiver(FluxReceive.java:481)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:273)
	at reactor.netty.channel.FluxReceive.request(FluxReceive.java:131)
	at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:164)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.request(FluxPeek.java:138)
	at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:164)
	at reactor.core.publisher.Operators$BaseFluxToMonoOperator.request(Operators.java:2066)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.request(FluxFilterFuseable.java:411)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.request(FluxMapFuseable.java:360)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onSubscribe(MonoFlatMapMany.java:141)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onSubscribe(FluxContextWrite.java:101)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onSubscribe(FluxMapFuseable.java:265)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onSubscribe(FluxFilterFuseable.java:305)
	at reactor.core.publisher.Operators$BaseFluxToMonoOperator.onSubscribe(Operators.java:2050)
	at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onSubscribe(FluxPeek.java:171)
	at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
	at reactor.netty.channel.FluxReceive.startReceiver(FluxReceive.java:170)
	at reactor.netty.channel.FluxReceive.subscribe(FluxReceive.java:145)
	at reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:68)
	at reactor.netty.ByteBufFlux.subscribe(ByteBufFlux.java:340)
	at reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:68)
	at reactor.netty.ByteBufFlux.subscribe(ByteBufFlux.java:340)
	at reactor.core.publisher.Flux.subscribe(Flux.java:8891)
	at reactor.netty.channel.MonoSendMany.subscribe(MonoSendMany.java:102)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.netty.FutureMono.doSubscribe(FutureMono.java:122)
	at reactor.netty.FutureMono$DeferredFutureMono.subscribe(FutureMono.java:114)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.netty.NettyOutbound.subscribe(NettyOutbound.java:336)
	at reactor.core.publisher.MonoSource.subscribe(MonoSource.java:68)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.netty.http.client.HttpClientConnect$HttpIOHandlerObserver.onStateChange(HttpClientConnect.java:459)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onStateChange(DefaultPooledConnectionProvider.java:207)
	at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnection.onStateChange(DefaultPooledConnectionProvider.java:468)
	at reactor.netty.channel.ChannelOperationsHandler.channelActive(ChannelOperationsHandler.java:62)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:260)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:238)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:231)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelActive(CombinedChannelDuplexHandler.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelActive(ChannelInboundHandlerAdapter.java:69)
	at io.netty.channel.CombinedChannelDuplexHandler.channelActive(CombinedChannelDuplexHandler.java:211)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:260)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:238)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:231)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelActive(DefaultChannelPipeline.java:1345)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:258)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:238)
	at io.netty.channel.DefaultChannelPipeline.fireChannelActive(DefaultChannelPipeline.java:844)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:310)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:340)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-06-30 22:26:58 [reactor-http-nio-4] DEBUG r.n.r.DefaultPooledConnectionProvider - [40bc2cfb, L:/127.0.0.1:60743 - R:localhost/127.0.0.1:8081] onStateChange(POST{uri=/api/payment/process, connection=PooledConnection{channel=[id: 0x40bc2cfb, L:/127.0.0.1:60743 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-06-30 22:26:58 [reactor-http-nio-4] DEBUG r.n.r.DefaultPooledConnectionProvider - [40bc2cfb, L:/127.0.0.1:60743 - R:localhost/127.0.0.1:8081] onStateChange(POST{uri=/api/payment/process, connection=PooledConnection{channel=[id: 0x40bc2cfb, L:/127.0.0.1:60743 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-06-30 22:26:58 [reactor-http-nio-4] DEBUG r.n.r.PooledConnectionProvider - [40bc2cfb, L:/127.0.0.1:60743 ! R:localhost/127.0.0.1:8081] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-06-30 22:26:58 [reactor-http-nio-4] DEBUG r.n.r.DefaultPooledConnectionProvider - [40bc2cfb, L:/127.0.0.1:60743 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x40bc2cfb, L:/127.0.0.1:60743 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-06-30 22:27:00 [reactor-http-nio-5] DEBUG r.n.http.server.HttpServerOperations - [5f1eb98e, L:/127.0.0.1:8080 - R:/127.0.0.1:60748] New http connection, requesting read
2025-06-30 22:27:00 [reactor-http-nio-5] DEBUG r.netty.transport.TransportConfig - [5f1eb98e, L:/127.0.0.1:8080 - R:/127.0.0.1:60748] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpServerCodec), (reactor.left.httpTrafficHandler = reactor.netty.http.server.HttpTrafficHandler), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-06-30 22:27:00 [reactor-http-nio-5] DEBUG r.n.http.server.HttpServerOperations - [5f1eb98e, L:/127.0.0.1:8080 - R:/127.0.0.1:60748] Increasing pending responses count: 1
2025-06-30 22:27:00 [reactor-http-nio-5] DEBUG r.netty.http.server.HttpServer - [5f1eb98e-1, L:/127.0.0.1:8080 - R:/127.0.0.1:60748] Handler is being applied: org.springframework.http.server.reactive.ReactorHttpHandlerAdapter@3d5700a3
2025-06-30 22:27:00 [reactor-http-nio-5] DEBUG o.s.c.g.h.RoutePredicateHandlerMapping - Route matched: payment-route
2025-06-30 22:27:00 [reactor-http-nio-5] DEBUG o.s.c.g.h.RoutePredicateHandlerMapping - Mapping [Exchange: POST http://localhost:8080/api/gateway/payment/process] to Route{id='payment-route', uri=http://localhost:8081, order=0, predicate=Paths: [/api/gateway/payment/**], match trailing slash: true, gatewayFilters=[[[RewritePath /api/gateway/payment/(?<segment>.*) = '/api/payment/${segment}'], order = 0], com.citi.tts.api.gateway.filter.AdvancedRateLimitFilter@1de12397, [com.citi.tts.api.gateway.filter.ServiceDegradationGatewayFilter$1@20dd1b2d, order = 0], com.citi.tts.api.gateway.filter.CircuitBreakerFilter@639948a2, [com.citi.tts.api.gateway.filter.CryptoFilter@7f41d979, order = 0]], metadata={}}
2025-06-30 22:27:00 [reactor-http-nio-5] DEBUG o.s.c.g.h.RoutePredicateHandlerMapping - [5f1eb98e-4] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@1d33e72e
2025-06-30 22:27:00 [reactor-http-nio-5] DEBUG o.s.c.g.handler.FilteringWebHandler - Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@5c7e55a4}, order = -2147483648], [GatewayFilterAdapter{delegate=com.citi.tts.api.gateway.tracing.TraceFilter@b68932b}, order = -2147483598], com.citi.tts.api.gateway.filter.AdvancedRateLimitFilter@1de12397, [GatewayFilterAdapter{delegate=com.citi.tts.api.gateway.filter.QPSMetricsFilter@4a5d5b38}, order = -2147483548], com.citi.tts.api.gateway.filter.CircuitBreakerFilter@639948a2, [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@da67c46}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@42734b71}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@43f7f48d}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@29431f61}, order = 0], [[RewritePath /api/gateway/payment/(?<segment>.*) = '/api/payment/${segment}'], order = 0], [com.citi.tts.api.gateway.filter.ServiceDegradationGatewayFilter$1@20dd1b2d, order = 0], [com.citi.tts.api.gateway.filter.CryptoFilter@7f41d979, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@7ae6927}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ReactiveLoadBalancerClientFilter@16c9e378}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.LoadBalancerServiceInstanceCookieFilter@b87ea8b}, order = 10151], [GatewayFilterAdapter{delegate=com.citi.tts.api.gateway.filter.ServiceDegradationFilter@6fdaef04}, order = 2147483547], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@5a3be84}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@5f32ab17}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@7d0df326}, order = 2147483647]]
2025-06-30 22:27:00 [reactor-http-nio-5] DEBUG c.c.t.a.gateway.tracing.TraceContext - Created root trace context: 1a155891a4ec46cda2702fc5f12b0bf7
2025-06-30 22:27:00 [reactor-http-nio-5] DEBUG c.c.t.a.gateway.tracing.TraceManager - Created new sampled trace context: 1a155891a4ec46cda2702fc5f12b0bf7
2025-06-30 22:27:00 [reactor-http-nio-5] DEBUG c.c.t.a.g.f.AdvancedRateLimitFilter - Processing rate limit for: POST /api/gateway/payment/process from IP: 127.0.0.1, User: null
2025-06-30 22:27:00 [reactor-http-nio-5] DEBUG c.c.t.a.g.l.AdvancedRateLimiter - Tokens refilled for api_weight:NON_CORE: +30 tokens, total: 15
2025-06-30 22:27:00 [reactor-http-nio-5] DEBUG c.c.t.a.g.l.AdvancedRateLimiter - Token acquired for api_weight:NON_CORE: 1 tokens consumed, 14 remaining
2025-06-30 22:27:00 [reactor-http-nio-5] DEBUG c.c.t.a.g.filter.QPSMetricsFilter - QPS recorded - Path: /api/gateway/payment/process, IP: 127.0.0.1, User: anonymous, Priority: default
2025-06-30 22:27:00 [reactor-http-nio-5] DEBUG c.c.t.a.g.f.CircuitBreakerFilter - Using circuit breaker for API: /api/gateway/payment/process with priority: NON_CORE
2025-06-30 22:27:00 [reactor-http-nio-5] DEBUG c.c.t.a.g.f.ServiceDegradationGatewayFilter - Service degradation filter - Service: payment-service, Path: /api/payment/process, Level: CORE
2025-06-30 22:27:00 [reactor-http-nio-5] DEBUG c.c.t.a.gateway.filter.CryptoFilter - crupto filter is coming
2025-06-30 22:27:00 [reactor-http-nio-5] DEBUG c.c.t.a.g.f.ServiceDegradationFilter - Service degradation filter - Service: api, Path: /api/payment/process, Level: CORE
2025-06-30 22:27:00 [reactor-http-nio-5] DEBUG o.s.c.g.f.h.o.ObservedRequestHttpHeadersFilter - Will instrument the HTTP request headers [Content-Type:"application/json", Content-Length:"16", User-Agent:"IntelliJ HTTP Client/IntelliJ IDEA 2025.1.3", Accept-Encoding:"br, deflate, gzip, x-gzip", Accept:"*/*", host:"localhost:8080", X-Span-ID:"429815f8717246ab", X-Request-ID:"9177e0b4-effb-478a-bf4f-13000d421ae6", X-Correlation-ID:"null", X-Trace-ID:"1a155891a4ec46cda2702fc5f12b0bf7", X-Sampled:"true"]
2025-06-30 22:27:00 [reactor-http-nio-5] DEBUG o.s.c.g.f.h.o.ObservedRequestHttpHeadersFilter - Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='payment-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://localhost:8080/api/payment/process'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@7569a3b2', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=3.80375E-4, duration(nanos)=380375.0, startTimeNanos=161568512901875}'], parentObservation={name=http.server.requests(null), error=null, context=name='http.server.requests', contextualName='null', error='null', lowCardinalityKeyValues=[exception='none', method='POST', outcome='SUCCESS', status='200', uri='UNKNOWN'], highCardinalityKeyValues=[http.url='/api/gateway/payment/process'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@306b337b', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.020743875, duration(nanos)=2.0743875E7, startTimeNanos=161568492651708}'], parentObservation=null}} created for the request. New headers are [Content-Type:"application/json", Content-Length:"16", User-Agent:"IntelliJ HTTP Client/IntelliJ IDEA 2025.1.3", Accept-Encoding:"br, deflate, gzip, x-gzip", Accept:"*/*", host:"localhost:8080", X-Span-ID:"429815f8717246ab", X-Request-ID:"9177e0b4-effb-478a-bf4f-13000d421ae6", X-Correlation-ID:"null", X-Trace-ID:"1a155891a4ec46cda2702fc5f12b0bf7", X-Sampled:"true"]
2025-06-30 22:27:00 [reactor-http-nio-5] DEBUG r.n.r.PooledConnectionProvider - [d3a01176] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-06-30 22:27:00 [reactor-http-nio-5] DEBUG r.netty.transport.TransportConfig - [d3a01176] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-06-30 22:27:00 [reactor-http-nio-5] DEBUG r.netty.transport.TransportConnector - [d3a01176] Connecting to [localhost/127.0.0.1:8081].
2025-06-30 22:27:00 [reactor-http-nio-5] DEBUG r.n.r.DefaultPooledConnectionProvider - [d3a01176, L:/127.0.0.1:60749 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-06-30 22:27:00 [reactor-http-nio-5] DEBUG r.n.r.PooledConnectionProvider - [d3a01176, L:/127.0.0.1:60749 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-06-30 22:27:00 [reactor-http-nio-5] DEBUG r.n.r.DefaultPooledConnectionProvider - [d3a01176, L:/127.0.0.1:60749 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xd3a01176, L:/127.0.0.1:60749 - R:localhost/127.0.0.1:8081]}, [connected])
2025-06-30 22:27:00 [reactor-http-nio-5] DEBUG r.n.r.DefaultPooledConnectionProvider - [d3a01176-1, L:/127.0.0.1:60749 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0xd3a01176, L:/127.0.0.1:60749 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-06-30 22:27:00 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientConnect - [d3a01176-1, L:/127.0.0.1:60749 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/api/payment/process, method=POST}
2025-06-30 22:27:00 [reactor-http-nio-5] DEBUG r.n.r.DefaultPooledConnectionProvider - [d3a01176-1, L:/127.0.0.1:60749 - R:localhost/127.0.0.1:8081] onStateChange(POST{uri=/api/payment/process, connection=PooledConnection{channel=[id: 0xd3a01176, L:/127.0.0.1:60749 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-06-30 22:27:00 [reactor-http-nio-5] DEBUG reactor.netty.channel.FluxReceive - [5f1eb98e-1, L:/127.0.0.1:8080 - R:/127.0.0.1:60748] [terminated=true, cancelled=false, pending=1, error=null]: subscribing inbound receiver
2025-06-30 22:27:00 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [d3a01176-1, L:/127.0.0.1:60749 - R:localhost/127.0.0.1:8081] Outbound error happened
java.lang.RuntimeException: 解密失败: Cannot invoke "String.hashCode()" because "key" is null
	at com.citi.tts.api.gateway.crypto.ReactiveAESService.lambda$decrypt$3(ReactiveAESService.java:19)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:94)
	at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
	at reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.onError(FluxTimeout.java:220)
	at reactor.core.publisher.MonoCallable$MonoCallableSubscription.request(MonoCallable.java:145)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.SerializedSubscriber.request(SerializedSubscriber.java:151)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onSubscribe(FluxOnErrorResume.java:74)
	at reactor.core.publisher.SerializedSubscriber.onSubscribe(SerializedSubscriber.java:65)
	at reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.onSubscribe(FluxTimeout.java:155)
	at reactor.core.publisher.MonoCallable.subscribe(MonoCallable.java:48)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext(MonoFlatMapMany.java:196)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
	at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2096)
	at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
	at reactor.netty.channel.FluxReceive.terminateReceiver(FluxReceive.java:481)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:273)
	at reactor.netty.channel.FluxReceive.request(FluxReceive.java:131)
	at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:164)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.request(FluxPeek.java:138)
	at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:164)
	at reactor.core.publisher.Operators$BaseFluxToMonoOperator.request(Operators.java:2066)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.request(FluxFilterFuseable.java:411)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.request(FluxMapFuseable.java:360)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onSubscribe(MonoFlatMapMany.java:141)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onSubscribe(FluxContextWrite.java:101)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onSubscribe(FluxMapFuseable.java:265)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onSubscribe(FluxFilterFuseable.java:305)
	at reactor.core.publisher.Operators$BaseFluxToMonoOperator.onSubscribe(Operators.java:2050)
	at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onSubscribe(FluxPeek.java:171)
	at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
	at reactor.netty.channel.FluxReceive.startReceiver(FluxReceive.java:170)
	at reactor.netty.channel.FluxReceive.subscribe(FluxReceive.java:145)
	at reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:68)
	at reactor.netty.ByteBufFlux.subscribe(ByteBufFlux.java:340)
	at reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:68)
	at reactor.netty.ByteBufFlux.subscribe(ByteBufFlux.java:340)
	at reactor.core.publisher.Flux.subscribe(Flux.java:8891)
	at reactor.netty.channel.MonoSendMany.subscribe(MonoSendMany.java:102)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.netty.FutureMono.doSubscribe(FutureMono.java:122)
	at reactor.netty.FutureMono$DeferredFutureMono.subscribe(FutureMono.java:114)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.netty.NettyOutbound.subscribe(NettyOutbound.java:336)
	at reactor.core.publisher.MonoSource.subscribe(MonoSource.java:68)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.netty.http.client.HttpClientConnect$HttpIOHandlerObserver.onStateChange(HttpClientConnect.java:459)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onStateChange(DefaultPooledConnectionProvider.java:207)
	at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnection.onStateChange(DefaultPooledConnectionProvider.java:468)
	at reactor.netty.channel.ChannelOperationsHandler.channelActive(ChannelOperationsHandler.java:62)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:260)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:238)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:231)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelActive(CombinedChannelDuplexHandler.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelActive(ChannelInboundHandlerAdapter.java:69)
	at io.netty.channel.CombinedChannelDuplexHandler.channelActive(CombinedChannelDuplexHandler.java:211)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:260)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:238)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:231)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelActive(DefaultChannelPipeline.java:1345)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:258)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:238)
	at io.netty.channel.DefaultChannelPipeline.fireChannelActive(DefaultChannelPipeline.java:844)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:310)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:340)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.lang.NullPointerException: Cannot invoke "String.hashCode()" because "key" is null
	at com.citi.tts.api.gateway.crypto.AES256Util.hastTime(AES256Util.java:33)
	at com.citi.tts.api.gateway.crypto.AES256Util.decrypt(AES256Util.java:50)
	at com.citi.tts.api.gateway.crypto.ReactiveAESService.lambda$decrypt$2(ReactiveAESService.java:16)
	at reactor.core.publisher.MonoCallable$MonoCallableSubscription.request(MonoCallable.java:137)
	... 83 common frames omitted
2025-06-30 22:27:00 [reactor-http-nio-5] WARN  r.n.http.client.HttpClientConnect - [d3a01176-1, L:/127.0.0.1:60749 - R:localhost/127.0.0.1:8081] The connection observed an error
java.lang.RuntimeException: 解密失败: Cannot invoke "String.hashCode()" because "key" is null
	at com.citi.tts.api.gateway.crypto.ReactiveAESService.lambda$decrypt$3(ReactiveAESService.java:19)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:94)
	at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
	at reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.onError(FluxTimeout.java:220)
	at reactor.core.publisher.MonoCallable$MonoCallableSubscription.request(MonoCallable.java:145)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.SerializedSubscriber.request(SerializedSubscriber.java:151)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onSubscribe(FluxOnErrorResume.java:74)
	at reactor.core.publisher.SerializedSubscriber.onSubscribe(SerializedSubscriber.java:65)
	at reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.onSubscribe(FluxTimeout.java:155)
	at reactor.core.publisher.MonoCallable.subscribe(MonoCallable.java:48)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext(MonoFlatMapMany.java:196)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
	at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2096)
	at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
	at reactor.netty.channel.FluxReceive.terminateReceiver(FluxReceive.java:481)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:273)
	at reactor.netty.channel.FluxReceive.request(FluxReceive.java:131)
	at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:164)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.request(FluxPeek.java:138)
	at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:164)
	at reactor.core.publisher.Operators$BaseFluxToMonoOperator.request(Operators.java:2066)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.request(FluxFilterFuseable.java:411)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.request(FluxMapFuseable.java:360)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onSubscribe(MonoFlatMapMany.java:141)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onSubscribe(FluxContextWrite.java:101)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onSubscribe(FluxMapFuseable.java:265)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onSubscribe(FluxFilterFuseable.java:305)
	at reactor.core.publisher.Operators$BaseFluxToMonoOperator.onSubscribe(Operators.java:2050)
	at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onSubscribe(FluxPeek.java:171)
	at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
	at reactor.netty.channel.FluxReceive.startReceiver(FluxReceive.java:170)
	at reactor.netty.channel.FluxReceive.subscribe(FluxReceive.java:145)
	at reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:68)
	at reactor.netty.ByteBufFlux.subscribe(ByteBufFlux.java:340)
	at reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:68)
	at reactor.netty.ByteBufFlux.subscribe(ByteBufFlux.java:340)
	at reactor.core.publisher.Flux.subscribe(Flux.java:8891)
	at reactor.netty.channel.MonoSendMany.subscribe(MonoSendMany.java:102)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.netty.FutureMono.doSubscribe(FutureMono.java:122)
	at reactor.netty.FutureMono$DeferredFutureMono.subscribe(FutureMono.java:114)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.netty.NettyOutbound.subscribe(NettyOutbound.java:336)
	at reactor.core.publisher.MonoSource.subscribe(MonoSource.java:68)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.netty.http.client.HttpClientConnect$HttpIOHandlerObserver.onStateChange(HttpClientConnect.java:459)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onStateChange(DefaultPooledConnectionProvider.java:207)
	at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnection.onStateChange(DefaultPooledConnectionProvider.java:468)
	at reactor.netty.channel.ChannelOperationsHandler.channelActive(ChannelOperationsHandler.java:62)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:260)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:238)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:231)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelActive(CombinedChannelDuplexHandler.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelActive(ChannelInboundHandlerAdapter.java:69)
	at io.netty.channel.CombinedChannelDuplexHandler.channelActive(CombinedChannelDuplexHandler.java:211)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:260)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:238)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:231)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelActive(DefaultChannelPipeline.java:1345)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:258)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:238)
	at io.netty.channel.DefaultChannelPipeline.fireChannelActive(DefaultChannelPipeline.java:844)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:310)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:340)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.lang.NullPointerException: Cannot invoke "String.hashCode()" because "key" is null
	at com.citi.tts.api.gateway.crypto.AES256Util.hastTime(AES256Util.java:33)
	at com.citi.tts.api.gateway.crypto.AES256Util.decrypt(AES256Util.java:50)
	at com.citi.tts.api.gateway.crypto.ReactiveAESService.lambda$decrypt$2(ReactiveAESService.java:16)
	at reactor.core.publisher.MonoCallable$MonoCallableSubscription.request(MonoCallable.java:137)
	... 83 common frames omitted
2025-06-30 22:27:00 [reactor-http-nio-5] ERROR c.c.t.a.g.f.ServiceDegradationFilter - Service error detected - Service: api, Path: /api/payment/process, Error: 解密失败: Cannot invoke "String.hashCode()" because "key" is null
2025-06-30 22:27:00 [reactor-http-nio-5] INFO  c.c.t.a.g.s.ServiceDegradationService - Service degradation triggered - Service: api, Level: CORE, Error: RuntimeException
2025-06-30 22:27:00 [reactor-http-nio-5] INFO  c.c.t.a.g.s.ServiceDegradationService - Handling CORE service degradation for: api
2025-06-30 22:27:00 [reactor-http-nio-5] INFO  c.c.t.a.g.s.i.CoreServiceFallbackHandlerImpl - Core service fallback triggered - Service: api, Path: /api/payment/process
2025-06-30 22:27:00 [reactor-http-nio-5] WARN  c.c.t.a.g.s.i.CoreServiceFallbackHandlerImpl - Failed to get Redis fallback data for key: fallback:core:api:/api/payment/process
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1858)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1789)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1586)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.lambda$getConnection$0(LettuceConnectionFactory.java:1566)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.doInLock(LettuceConnectionFactory.java:1527)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1563)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedReactiveConnection(LettuceConnectionFactory.java:1274)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getReactiveConnection(LettuceConnectionFactory.java:1149)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getReactiveConnection(LettuceConnectionFactory.java:120)
	at org.springframework.data.redis.core.ReactiveRedisTemplate.lambda$getConnection$2(ReactiveRedisTemplate.java:273)
	at reactor.core.publisher.MonoSupplier.call(MonoSupplier.java:67)
	at reactor.core.publisher.FluxUsingWhen.subscribe(FluxUsingWhen.java:80)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onError(MonoIgnoreThen.java:280)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:205)
	at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
	at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:229)
	at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:279)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.maybeOnError(FluxConcatMapNoPrefetch.java:327)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onNext(FluxConcatMapNoPrefetch.java:212)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
	at reactor.core.publisher.SinkManyEmitterProcessor.drain(SinkManyEmitterProcessor.java:476)
	at reactor.core.publisher.SinkManyEmitterProcessor$EmitterInner.drainParent(SinkManyEmitterProcessor.java:620)
	at reactor.core.publisher.FluxPublish$PubSubInner.request(FluxPublish.java:874)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
	at reactor.core.publisher.Operators$DeferredSubscription.request(Operators.java:1742)
	at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:196)
	at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:205)
	at reactor.netty.http.client.HttpClientConnect$HttpObserver.onUncaughtException(HttpClientConnect.java:417)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onUncaughtException(ReactorNetty.java:715)
	at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onUncaughtException(DefaultPooledConnectionProvider.java:225)
	at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnection.onUncaughtException(DefaultPooledConnectionProvider.java:478)
	at reactor.netty.http.client.HttpClientOperations.onOutboundError(HttpClientOperations.java:693)
	at reactor.netty.channel.ChannelOperations.onError(ChannelOperations.java:272)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onError(MonoIgnoreThen.java:280)
	at reactor.netty.channel.MonoSendMany$SendManyInner.run(MonoSendMany.java:352)
	at reactor.netty.channel.MonoSendMany$SendManyInner.trySchedule(MonoSendMany.java:434)
	at reactor.netty.channel.MonoSendMany$SendManyInner.onError(MonoSendMany.java:199)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onError(MonoFlatMapMany.java:256)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:106)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
	at reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.onError(FluxTimeout.java:220)
	at reactor.core.publisher.MonoCallable$MonoCallableSubscription.request(MonoCallable.java:145)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.SerializedSubscriber.request(SerializedSubscriber.java:151)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onSubscribe(FluxOnErrorResume.java:74)
	at reactor.core.publisher.SerializedSubscriber.onSubscribe(SerializedSubscriber.java:65)
	at reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.onSubscribe(FluxTimeout.java:155)
	at reactor.core.publisher.MonoCallable.subscribe(MonoCallable.java:48)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext(MonoFlatMapMany.java:196)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
	at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2096)
	at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
	at reactor.netty.channel.FluxReceive.terminateReceiver(FluxReceive.java:481)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:273)
	at reactor.netty.channel.FluxReceive.request(FluxReceive.java:131)
	at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:164)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.request(FluxPeek.java:138)
	at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:164)
	at reactor.core.publisher.Operators$BaseFluxToMonoOperator.request(Operators.java:2066)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.request(FluxFilterFuseable.java:411)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.request(FluxMapFuseable.java:360)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onSubscribe(MonoFlatMapMany.java:141)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onSubscribe(FluxContextWrite.java:101)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onSubscribe(FluxMapFuseable.java:265)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onSubscribe(FluxFilterFuseable.java:305)
	at reactor.core.publisher.Operators$BaseFluxToMonoOperator.onSubscribe(Operators.java:2050)
	at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onSubscribe(FluxPeek.java:171)
	at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
	at reactor.netty.channel.FluxReceive.startReceiver(FluxReceive.java:170)
	at reactor.netty.channel.FluxReceive.subscribe(FluxReceive.java:145)
	at reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:68)
	at reactor.netty.ByteBufFlux.subscribe(ByteBufFlux.java:340)
	at reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:68)
	at reactor.netty.ByteBufFlux.subscribe(ByteBufFlux.java:340)
	at reactor.core.publisher.Flux.subscribe(Flux.java:8891)
	at reactor.netty.channel.MonoSendMany.subscribe(MonoSendMany.java:102)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.netty.FutureMono.doSubscribe(FutureMono.java:122)
	at reactor.netty.FutureMono$DeferredFutureMono.subscribe(FutureMono.java:114)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.netty.NettyOutbound.subscribe(NettyOutbound.java:336)
	at reactor.core.publisher.MonoSource.subscribe(MonoSource.java:68)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.netty.http.client.HttpClientConnect$HttpIOHandlerObserver.onStateChange(HttpClientConnect.java:459)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onStateChange(DefaultPooledConnectionProvider.java:207)
	at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnection.onStateChange(DefaultPooledConnectionProvider.java:468)
	at reactor.netty.channel.ChannelOperationsHandler.channelActive(ChannelOperationsHandler.java:62)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:260)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:238)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:231)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelActive(CombinedChannelDuplexHandler.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelActive(ChannelInboundHandlerAdapter.java:69)
	at io.netty.channel.CombinedChannelDuplexHandler.channelActive(CombinedChannelDuplexHandler.java:211)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:260)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:238)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:231)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelActive(DefaultChannelPipeline.java:1345)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:258)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:238)
	at io.netty.channel.DefaultChannelPipeline.fireChannelActive(DefaultChannelPipeline.java:844)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:310)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:340)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to localhost/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:63)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:41)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:354)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:220)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:112)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:112)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1787)
	... 134 common frames omitted
Caused by: io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: localhost/127.0.0.1:6379
Caused by: java.net.ConnectException: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:973)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:336)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:339)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-06-30 22:27:00 [reactor-http-nio-5] DEBUG i.g.r.c.i.CircuitBreakerStateMachine - CircuitBreaker 'nonCoreApiCircuitBreaker' succeeded:
2025-06-30 22:27:00 [reactor-http-nio-5] DEBUG r.n.http.server.HttpServerOperations - [5f1eb98e-1, L:/127.0.0.1:8080 - R:/127.0.0.1:60748] Last HTTP response frame
2025-06-30 22:27:00 [reactor-http-nio-5] DEBUG r.n.http.server.HttpServerOperations - [5f1eb98e-1, L:/127.0.0.1:8080 - R:/127.0.0.1:60748] Headers are not sent before onComplete().
2025-06-30 22:27:00 [reactor-http-nio-5] DEBUG r.n.http.server.HttpServerOperations - [5f1eb98e-1, L:/127.0.0.1:8080 - R:/127.0.0.1:60748] Decreasing pending responses count: 0
2025-06-30 22:27:00 [reactor-http-nio-5] DEBUG r.n.http.server.HttpServerOperations - [5f1eb98e-1, L:/127.0.0.1:8080 - R:/127.0.0.1:60748] Last HTTP packet was sent, terminating the channel
2025-06-30 22:27:00 [reactor-http-nio-5] DEBUG r.netty.channel.ChannelOperations - [5f1eb98e-1, L:/127.0.0.1:8080 - R:/127.0.0.1:60748] [HttpServer] Channel inbound receiver cancelled (subscription disposed).
2025-06-30 22:27:00 [reactor-http-nio-5] DEBUG c.c.t.a.gateway.tracing.TraceContext - Finished trace: 1a155891a4ec46cda2702fc5f12b0bf7 with status: 200
2025-06-30 22:27:00 [reactor-http-nio-5] ERROR reactor.core.publisher.Operators - Operator called default onErrorDropped
java.lang.UnsupportedOperationException: null
	at org.springframework.http.ReadOnlyHttpHeaders.add(ReadOnlyHttpHeaders.java:97)
	at com.citi.tts.api.gateway.tracing.TraceFilter.addTraceHeadersToResponse(TraceFilter.java:113)
	at com.citi.tts.api.gateway.tracing.TraceFilter.lambda$filter$0(TraceFilter.java:69)
	at reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.runFinally(FluxDoFinally.java:146)
	at reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete(FluxDoFinally.java:129)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at io.github.resilience4j.reactor.circuitbreaker.operator.CircuitBreakerSubscriber.hookOnComplete(CircuitBreakerSubscriber.java:69)
	at reactor.core.publisher.BaseSubscriber.onComplete(BaseSubscriber.java:197)
	at reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete(FluxDoFinally.java:128)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:210)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onComplete(MonoPeekTerminal.java:299)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onComplete(MonoPeekTerminal.java:299)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onError(MonoPeekTerminal.java:258)
	at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.FluxUsingWhen.subscribe(FluxUsingWhen.java:98)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onError(MonoIgnoreThen.java:280)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:205)
	at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
	at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:229)
	at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:279)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.maybeOnError(FluxConcatMapNoPrefetch.java:327)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onNext(FluxConcatMapNoPrefetch.java:212)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
	at reactor.core.publisher.SinkManyEmitterProcessor.drain(SinkManyEmitterProcessor.java:476)
	at reactor.core.publisher.SinkManyEmitterProcessor$EmitterInner.drainParent(SinkManyEmitterProcessor.java:620)
	at reactor.core.publisher.FluxPublish$PubSubInner.request(FluxPublish.java:874)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
	at reactor.core.publisher.Operators$DeferredSubscription.request(Operators.java:1742)
	at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:196)
	at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:205)
	at reactor.netty.http.client.HttpClientConnect$HttpObserver.onUncaughtException(HttpClientConnect.java:417)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onUncaughtException(ReactorNetty.java:715)
	at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onUncaughtException(DefaultPooledConnectionProvider.java:225)
	at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnection.onUncaughtException(DefaultPooledConnectionProvider.java:478)
	at reactor.netty.http.client.HttpClientOperations.onOutboundError(HttpClientOperations.java:693)
	at reactor.netty.channel.ChannelOperations.onError(ChannelOperations.java:272)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onError(MonoIgnoreThen.java:280)
	at reactor.netty.channel.MonoSendMany$SendManyInner.run(MonoSendMany.java:352)
	at reactor.netty.channel.MonoSendMany$SendManyInner.trySchedule(MonoSendMany.java:434)
	at reactor.netty.channel.MonoSendMany$SendManyInner.onError(MonoSendMany.java:199)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onError(MonoFlatMapMany.java:256)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:106)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
	at reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.onError(FluxTimeout.java:220)
	at reactor.core.publisher.MonoCallable$MonoCallableSubscription.request(MonoCallable.java:145)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.SerializedSubscriber.request(SerializedSubscriber.java:151)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onSubscribe(FluxOnErrorResume.java:74)
	at reactor.core.publisher.SerializedSubscriber.onSubscribe(SerializedSubscriber.java:65)
	at reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.onSubscribe(FluxTimeout.java:155)
	at reactor.core.publisher.MonoCallable.subscribe(MonoCallable.java:48)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext(MonoFlatMapMany.java:196)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
	at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2096)
	at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
	at reactor.netty.channel.FluxReceive.terminateReceiver(FluxReceive.java:481)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:273)
	at reactor.netty.channel.FluxReceive.request(FluxReceive.java:131)
	at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:164)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.request(FluxPeek.java:138)
	at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:164)
	at reactor.core.publisher.Operators$BaseFluxToMonoOperator.request(Operators.java:2066)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.request(FluxFilterFuseable.java:411)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.request(FluxMapFuseable.java:360)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onSubscribe(MonoFlatMapMany.java:141)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onSubscribe(FluxContextWrite.java:101)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onSubscribe(FluxMapFuseable.java:265)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onSubscribe(FluxFilterFuseable.java:305)
	at reactor.core.publisher.Operators$BaseFluxToMonoOperator.onSubscribe(Operators.java:2050)
	at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onSubscribe(FluxPeek.java:171)
	at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
	at reactor.netty.channel.FluxReceive.startReceiver(FluxReceive.java:170)
	at reactor.netty.channel.FluxReceive.subscribe(FluxReceive.java:145)
	at reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:68)
	at reactor.netty.ByteBufFlux.subscribe(ByteBufFlux.java:340)
	at reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:68)
	at reactor.netty.ByteBufFlux.subscribe(ByteBufFlux.java:340)
	at reactor.core.publisher.Flux.subscribe(Flux.java:8891)
	at reactor.netty.channel.MonoSendMany.subscribe(MonoSendMany.java:102)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.netty.FutureMono.doSubscribe(FutureMono.java:122)
	at reactor.netty.FutureMono$DeferredFutureMono.subscribe(FutureMono.java:114)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.netty.NettyOutbound.subscribe(NettyOutbound.java:336)
	at reactor.core.publisher.MonoSource.subscribe(MonoSource.java:68)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.netty.http.client.HttpClientConnect$HttpIOHandlerObserver.onStateChange(HttpClientConnect.java:459)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onStateChange(DefaultPooledConnectionProvider.java:207)
	at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnection.onStateChange(DefaultPooledConnectionProvider.java:468)
	at reactor.netty.channel.ChannelOperationsHandler.channelActive(ChannelOperationsHandler.java:62)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:260)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:238)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:231)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelActive(CombinedChannelDuplexHandler.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelActive(ChannelInboundHandlerAdapter.java:69)
	at io.netty.channel.CombinedChannelDuplexHandler.channelActive(CombinedChannelDuplexHandler.java:211)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:260)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:238)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:231)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelActive(DefaultChannelPipeline.java:1345)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:258)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:238)
	at io.netty.channel.DefaultChannelPipeline.fireChannelActive(DefaultChannelPipeline.java:844)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:310)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:340)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-06-30 22:27:00 [reactor-http-nio-5] DEBUG r.n.r.DefaultPooledConnectionProvider - [d3a01176, L:/127.0.0.1:60749 - R:localhost/127.0.0.1:8081] onStateChange(POST{uri=/api/payment/process, connection=PooledConnection{channel=[id: 0xd3a01176, L:/127.0.0.1:60749 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-06-30 22:27:00 [reactor-http-nio-5] DEBUG r.n.r.DefaultPooledConnectionProvider - [d3a01176, L:/127.0.0.1:60749 - R:localhost/127.0.0.1:8081] onStateChange(POST{uri=/api/payment/process, connection=PooledConnection{channel=[id: 0xd3a01176, L:/127.0.0.1:60749 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-06-30 22:27:00 [reactor-http-nio-5] DEBUG r.n.r.PooledConnectionProvider - [d3a01176, L:/127.0.0.1:60749 ! R:localhost/127.0.0.1:8081] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-06-30 22:27:00 [reactor-http-nio-5] DEBUG r.n.r.DefaultPooledConnectionProvider - [d3a01176, L:/127.0.0.1:60749 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0xd3a01176, L:/127.0.0.1:60749 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-06-30 22:27:03 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Performing periodic health check
2025-06-30 22:27:32 [boundedElastic-2] INFO  c.c.t.a.g.t.ReactiveTraceScheduler - Reactive Trace Statistics - Manager: Total=4, Sampled=4, Active=4, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0
2025-06-30 22:27:33 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Performing periodic health check
2025-06-30 22:27:33 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Cleaning up expired instances
2025-06-30 22:27:33 [scheduling-1] DEBUG c.c.t.a.g.s.QPSCleanupScheduler - Starting scheduled QPS data cleanup...
2025-06-30 22:27:33 [scheduling-1] INFO  c.c.t.api.gateway.metrics.QPSMetrics - Manual cleanup completed. Total cleaned: 0, Active entries: API=1, IP=1, User=1, Priority=1
2025-06-30 22:27:33 [scheduling-1] DEBUG c.c.t.a.g.s.QPSCleanupScheduler - Scheduled QPS data cleanup completed
2025-06-30 22:27:33 [scheduling-1] INFO  c.c.t.a.g.t.AdaptiveTraceScheduler - Adaptive Trace Statistics - Manager: Total=4, Sampled=4, Active=4, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0, Multiplier: 1.0
2025-06-30 22:27:33 [scheduling-1] INFO  c.c.t.a.g.tracing.TraceScheduler - Trace Statistics - Manager: Total=4, Sampled=4, Active=4, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0
2025-06-30 22:28:03 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Performing periodic health check
2025-06-30 22:28:32 [boundedElastic-2] INFO  c.c.t.a.g.t.ReactiveTraceScheduler - Reactive Trace Statistics - Manager: Total=4, Sampled=4, Active=4, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0
2025-06-30 22:28:33 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Performing periodic health check
2025-06-30 22:28:33 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Cleaning up expired instances
2025-06-30 22:28:33 [scheduling-1] DEBUG c.c.t.a.g.s.QPSCleanupScheduler - Starting scheduled QPS data cleanup...
2025-06-30 22:28:33 [scheduling-1] DEBUG c.c.t.api.gateway.metrics.QPSMetrics - Cleaned 1 expired API QPS entries
2025-06-30 22:28:33 [scheduling-1] DEBUG c.c.t.api.gateway.metrics.QPSMetrics - Cleaned 1 expired IP QPS entries
2025-06-30 22:28:33 [scheduling-1] DEBUG c.c.t.api.gateway.metrics.QPSMetrics - Cleaned 1 expired User QPS entries
2025-06-30 22:28:33 [scheduling-1] DEBUG c.c.t.api.gateway.metrics.QPSMetrics - Cleaned 1 expired Priority QPS entries
2025-06-30 22:28:33 [scheduling-1] INFO  c.c.t.api.gateway.metrics.QPSMetrics - Manual cleanup completed. Total cleaned: 4, Active entries: API=0, IP=0, User=0, Priority=0
2025-06-30 22:28:33 [scheduling-1] DEBUG c.c.t.a.g.s.QPSCleanupScheduler - Scheduled QPS data cleanup completed
2025-06-30 22:28:33 [scheduling-1] INFO  c.c.t.a.g.t.AdaptiveTraceScheduler - Adaptive Trace Statistics - Manager: Total=4, Sampled=4, Active=4, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0, Multiplier: 1.0
2025-06-30 22:28:33 [scheduling-1] INFO  c.c.t.a.g.tracing.TraceScheduler - Trace Statistics - Manager: Total=4, Sampled=4, Active=4, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0
2025-06-30 22:29:01 [reactor-http-nio-6] DEBUG r.n.http.server.HttpServerOperations - [90e5832e, L:/127.0.0.1:8080 - R:/127.0.0.1:60946] New http connection, requesting read
2025-06-30 22:29:01 [reactor-http-nio-6] DEBUG r.netty.transport.TransportConfig - [90e5832e, L:/127.0.0.1:8080 - R:/127.0.0.1:60946] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpServerCodec), (reactor.left.httpTrafficHandler = reactor.netty.http.server.HttpTrafficHandler), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-06-30 22:29:01 [reactor-http-nio-6] DEBUG r.n.http.server.HttpServerOperations - [90e5832e, L:/127.0.0.1:8080 - R:/127.0.0.1:60946] Increasing pending responses count: 1
2025-06-30 22:29:01 [reactor-http-nio-6] DEBUG r.netty.http.server.HttpServer - [90e5832e-1, L:/127.0.0.1:8080 - R:/127.0.0.1:60946] Handler is being applied: org.springframework.http.server.reactive.ReactorHttpHandlerAdapter@3d5700a3
2025-06-30 22:29:01 [reactor-http-nio-6] DEBUG o.s.c.g.h.RoutePredicateHandlerMapping - Route matched: payment-route
2025-06-30 22:29:01 [reactor-http-nio-6] DEBUG o.s.c.g.h.RoutePredicateHandlerMapping - Mapping [Exchange: POST http://localhost:8080/api/gateway/payment/process] to Route{id='payment-route', uri=http://localhost:8081, order=0, predicate=Paths: [/api/gateway/payment/**], match trailing slash: true, gatewayFilters=[[[RewritePath /api/gateway/payment/(?<segment>.*) = '/api/payment/${segment}'], order = 0], com.citi.tts.api.gateway.filter.AdvancedRateLimitFilter@1de12397, [com.citi.tts.api.gateway.filter.ServiceDegradationGatewayFilter$1@20dd1b2d, order = 0], com.citi.tts.api.gateway.filter.CircuitBreakerFilter@639948a2, [com.citi.tts.api.gateway.filter.CryptoFilter@7f41d979, order = 0]], metadata={}}
2025-06-30 22:29:01 [reactor-http-nio-6] DEBUG o.s.c.g.h.RoutePredicateHandlerMapping - [90e5832e-5] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@1d33e72e
2025-06-30 22:29:01 [reactor-http-nio-6] DEBUG o.s.c.g.handler.FilteringWebHandler - Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@5c7e55a4}, order = -2147483648], [GatewayFilterAdapter{delegate=com.citi.tts.api.gateway.tracing.TraceFilter@b68932b}, order = -2147483598], com.citi.tts.api.gateway.filter.AdvancedRateLimitFilter@1de12397, [GatewayFilterAdapter{delegate=com.citi.tts.api.gateway.filter.QPSMetricsFilter@4a5d5b38}, order = -2147483548], com.citi.tts.api.gateway.filter.CircuitBreakerFilter@639948a2, [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@da67c46}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@42734b71}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@43f7f48d}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@29431f61}, order = 0], [[RewritePath /api/gateway/payment/(?<segment>.*) = '/api/payment/${segment}'], order = 0], [com.citi.tts.api.gateway.filter.ServiceDegradationGatewayFilter$1@20dd1b2d, order = 0], [com.citi.tts.api.gateway.filter.CryptoFilter@7f41d979, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@7ae6927}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ReactiveLoadBalancerClientFilter@16c9e378}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.LoadBalancerServiceInstanceCookieFilter@b87ea8b}, order = 10151], [GatewayFilterAdapter{delegate=com.citi.tts.api.gateway.filter.ServiceDegradationFilter@6fdaef04}, order = 2147483547], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@5a3be84}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@5f32ab17}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@7d0df326}, order = 2147483647]]
2025-06-30 22:29:01 [reactor-http-nio-6] DEBUG c.c.t.a.gateway.tracing.TraceContext - Created root trace context: 9696ba8c1788435d88733d19c79add1f
2025-06-30 22:29:01 [reactor-http-nio-6] DEBUG c.c.t.a.gateway.tracing.TraceManager - Created new sampled trace context: 9696ba8c1788435d88733d19c79add1f
2025-06-30 22:29:01 [reactor-http-nio-6] DEBUG c.c.t.a.g.f.AdvancedRateLimitFilter - Processing rate limit for: POST /api/gateway/payment/process from IP: 127.0.0.1, User: null
2025-06-30 22:29:01 [reactor-http-nio-6] DEBUG c.c.t.a.g.l.AdvancedRateLimiter - Tokens refilled for api_weight:NON_CORE: +1200 tokens, total: 15
2025-06-30 22:29:01 [reactor-http-nio-6] DEBUG c.c.t.a.g.l.AdvancedRateLimiter - Token acquired for api_weight:NON_CORE: 1 tokens consumed, 14 remaining
2025-06-30 22:29:01 [reactor-http-nio-6] DEBUG c.c.t.a.g.filter.QPSMetricsFilter - QPS recorded - Path: /api/gateway/payment/process, IP: 127.0.0.1, User: anonymous, Priority: default
2025-06-30 22:29:01 [reactor-http-nio-6] DEBUG c.c.t.a.g.f.CircuitBreakerFilter - Using circuit breaker for API: /api/gateway/payment/process with priority: NON_CORE
2025-06-30 22:29:01 [reactor-http-nio-6] DEBUG c.c.t.a.g.f.ServiceDegradationGatewayFilter - Service degradation filter - Service: payment-service, Path: /api/payment/process, Level: CORE
2025-06-30 22:29:01 [reactor-http-nio-6] DEBUG c.c.t.a.gateway.filter.CryptoFilter - crupto filter is coming
2025-06-30 22:29:01 [reactor-http-nio-6] DEBUG c.c.t.a.g.f.ServiceDegradationFilter - Service degradation filter - Service: api, Path: /api/payment/process, Level: CORE
2025-06-30 22:29:01 [reactor-http-nio-6] DEBUG o.s.c.g.f.h.o.ObservedRequestHttpHeadersFilter - Will instrument the HTTP request headers [Content-Type:"application/json", Content-Length:"16", User-Agent:"IntelliJ HTTP Client/IntelliJ IDEA 2025.1.3", Accept-Encoding:"br, deflate, gzip, x-gzip", Accept:"*/*", host:"localhost:8080", X-Span-ID:"fe0e7fb59c2a4466", X-Request-ID:"d62aa821-7898-43cf-9f30-5cf402f8f842", X-Correlation-ID:"null", X-Trace-ID:"9696ba8c1788435d88733d19c79add1f", X-Sampled:"true"]
2025-06-30 22:29:01 [reactor-http-nio-6] DEBUG o.s.c.g.f.h.o.ObservedRequestHttpHeadersFilter - Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='payment-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://localhost:8080/api/payment/process'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@7b922f46', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=3.61834E-4, duration(nanos)=361834.0, startTimeNanos=161689017215291}'], parentObservation={name=http.server.requests(null), error=null, context=name='http.server.requests', contextualName='null', error='null', lowCardinalityKeyValues=[exception='none', method='POST', outcome='SUCCESS', status='200', uri='UNKNOWN'], highCardinalityKeyValues=[http.url='/api/gateway/payment/process'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@3e90ae50', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.014461834, duration(nanos)=1.4461834E7, startTimeNanos=161689003305041}'], parentObservation=null}} created for the request. New headers are [Content-Type:"application/json", Content-Length:"16", User-Agent:"IntelliJ HTTP Client/IntelliJ IDEA 2025.1.3", Accept-Encoding:"br, deflate, gzip, x-gzip", Accept:"*/*", host:"localhost:8080", X-Span-ID:"fe0e7fb59c2a4466", X-Request-ID:"d62aa821-7898-43cf-9f30-5cf402f8f842", X-Correlation-ID:"null", X-Trace-ID:"9696ba8c1788435d88733d19c79add1f", X-Sampled:"true"]
2025-06-30 22:29:01 [reactor-http-nio-6] DEBUG r.n.r.PooledConnectionProvider - [4450d624] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-06-30 22:29:01 [reactor-http-nio-6] DEBUG r.netty.transport.TransportConfig - [4450d624] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-06-30 22:29:01 [reactor-http-nio-6] DEBUG r.netty.transport.TransportConnector - [4450d624] Connecting to [localhost/127.0.0.1:8081].
2025-06-30 22:29:01 [reactor-http-nio-6] DEBUG r.n.r.DefaultPooledConnectionProvider - [4450d624, L:/127.0.0.1:60947 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-06-30 22:29:01 [reactor-http-nio-6] DEBUG r.n.r.PooledConnectionProvider - [4450d624, L:/127.0.0.1:60947 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-06-30 22:29:01 [reactor-http-nio-6] DEBUG r.n.r.DefaultPooledConnectionProvider - [4450d624, L:/127.0.0.1:60947 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x4450d624, L:/127.0.0.1:60947 - R:localhost/127.0.0.1:8081]}, [connected])
2025-06-30 22:29:01 [reactor-http-nio-6] DEBUG r.n.r.DefaultPooledConnectionProvider - [4450d624-1, L:/127.0.0.1:60947 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x4450d624, L:/127.0.0.1:60947 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-06-30 22:29:01 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientConnect - [4450d624-1, L:/127.0.0.1:60947 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/api/payment/process, method=POST}
2025-06-30 22:29:01 [reactor-http-nio-6] DEBUG r.n.r.DefaultPooledConnectionProvider - [4450d624-1, L:/127.0.0.1:60947 - R:localhost/127.0.0.1:8081] onStateChange(POST{uri=/api/payment/process, connection=PooledConnection{channel=[id: 0x4450d624, L:/127.0.0.1:60947 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-06-30 22:29:01 [reactor-http-nio-6] DEBUG reactor.netty.channel.FluxReceive - [90e5832e-1, L:/127.0.0.1:8080 - R:/127.0.0.1:60946] [terminated=true, cancelled=false, pending=1, error=null]: subscribing inbound receiver
2025-06-30 22:29:01 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [4450d624-1, L:/127.0.0.1:60947 - R:localhost/127.0.0.1:8081] Outbound error happened
java.lang.RuntimeException: 解密失败: Cannot invoke "String.hashCode()" because "key" is null
	at com.citi.tts.api.gateway.crypto.ReactiveAESService.lambda$decrypt$3(ReactiveAESService.java:19)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:94)
	at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
	at reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.onError(FluxTimeout.java:220)
	at reactor.core.publisher.MonoCallable$MonoCallableSubscription.request(MonoCallable.java:145)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.SerializedSubscriber.request(SerializedSubscriber.java:151)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onSubscribe(FluxOnErrorResume.java:74)
	at reactor.core.publisher.SerializedSubscriber.onSubscribe(SerializedSubscriber.java:65)
	at reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.onSubscribe(FluxTimeout.java:155)
	at reactor.core.publisher.MonoCallable.subscribe(MonoCallable.java:48)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext(MonoFlatMapMany.java:196)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
	at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2096)
	at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
	at reactor.netty.channel.FluxReceive.terminateReceiver(FluxReceive.java:481)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:273)
	at reactor.netty.channel.FluxReceive.request(FluxReceive.java:131)
	at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:164)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.request(FluxPeek.java:138)
	at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:164)
	at reactor.core.publisher.Operators$BaseFluxToMonoOperator.request(Operators.java:2066)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.request(FluxFilterFuseable.java:411)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.request(FluxMapFuseable.java:360)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onSubscribe(MonoFlatMapMany.java:141)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onSubscribe(FluxContextWrite.java:101)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onSubscribe(FluxMapFuseable.java:265)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onSubscribe(FluxFilterFuseable.java:305)
	at reactor.core.publisher.Operators$BaseFluxToMonoOperator.onSubscribe(Operators.java:2050)
	at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onSubscribe(FluxPeek.java:171)
	at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
	at reactor.netty.channel.FluxReceive.startReceiver(FluxReceive.java:170)
	at reactor.netty.channel.FluxReceive.subscribe(FluxReceive.java:145)
	at reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:68)
	at reactor.netty.ByteBufFlux.subscribe(ByteBufFlux.java:340)
	at reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:68)
	at reactor.netty.ByteBufFlux.subscribe(ByteBufFlux.java:340)
	at reactor.core.publisher.Flux.subscribe(Flux.java:8891)
	at reactor.netty.channel.MonoSendMany.subscribe(MonoSendMany.java:102)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.netty.FutureMono.doSubscribe(FutureMono.java:122)
	at reactor.netty.FutureMono$DeferredFutureMono.subscribe(FutureMono.java:114)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.netty.NettyOutbound.subscribe(NettyOutbound.java:336)
	at reactor.core.publisher.MonoSource.subscribe(MonoSource.java:68)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.netty.http.client.HttpClientConnect$HttpIOHandlerObserver.onStateChange(HttpClientConnect.java:459)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onStateChange(DefaultPooledConnectionProvider.java:207)
	at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnection.onStateChange(DefaultPooledConnectionProvider.java:468)
	at reactor.netty.channel.ChannelOperationsHandler.channelActive(ChannelOperationsHandler.java:62)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:260)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:238)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:231)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelActive(CombinedChannelDuplexHandler.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelActive(ChannelInboundHandlerAdapter.java:69)
	at io.netty.channel.CombinedChannelDuplexHandler.channelActive(CombinedChannelDuplexHandler.java:211)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:260)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:238)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:231)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelActive(DefaultChannelPipeline.java:1345)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:258)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:238)
	at io.netty.channel.DefaultChannelPipeline.fireChannelActive(DefaultChannelPipeline.java:844)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:310)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:340)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.lang.NullPointerException: Cannot invoke "String.hashCode()" because "key" is null
	at com.citi.tts.api.gateway.crypto.AES256Util.hastTime(AES256Util.java:33)
	at com.citi.tts.api.gateway.crypto.AES256Util.decrypt(AES256Util.java:50)
	at com.citi.tts.api.gateway.crypto.ReactiveAESService.lambda$decrypt$2(ReactiveAESService.java:16)
	at reactor.core.publisher.MonoCallable$MonoCallableSubscription.request(MonoCallable.java:137)
	... 83 common frames omitted
2025-06-30 22:29:01 [reactor-http-nio-6] WARN  r.n.http.client.HttpClientConnect - [4450d624-1, L:/127.0.0.1:60947 - R:localhost/127.0.0.1:8081] The connection observed an error
java.lang.RuntimeException: 解密失败: Cannot invoke "String.hashCode()" because "key" is null
	at com.citi.tts.api.gateway.crypto.ReactiveAESService.lambda$decrypt$3(ReactiveAESService.java:19)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:94)
	at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
	at reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.onError(FluxTimeout.java:220)
	at reactor.core.publisher.MonoCallable$MonoCallableSubscription.request(MonoCallable.java:145)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.SerializedSubscriber.request(SerializedSubscriber.java:151)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onSubscribe(FluxOnErrorResume.java:74)
	at reactor.core.publisher.SerializedSubscriber.onSubscribe(SerializedSubscriber.java:65)
	at reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.onSubscribe(FluxTimeout.java:155)
	at reactor.core.publisher.MonoCallable.subscribe(MonoCallable.java:48)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext(MonoFlatMapMany.java:196)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
	at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2096)
	at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
	at reactor.netty.channel.FluxReceive.terminateReceiver(FluxReceive.java:481)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:273)
	at reactor.netty.channel.FluxReceive.request(FluxReceive.java:131)
	at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:164)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.request(FluxPeek.java:138)
	at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:164)
	at reactor.core.publisher.Operators$BaseFluxToMonoOperator.request(Operators.java:2066)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.request(FluxFilterFuseable.java:411)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.request(FluxMapFuseable.java:360)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onSubscribe(MonoFlatMapMany.java:141)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onSubscribe(FluxContextWrite.java:101)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onSubscribe(FluxMapFuseable.java:265)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onSubscribe(FluxFilterFuseable.java:305)
	at reactor.core.publisher.Operators$BaseFluxToMonoOperator.onSubscribe(Operators.java:2050)
	at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onSubscribe(FluxPeek.java:171)
	at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
	at reactor.netty.channel.FluxReceive.startReceiver(FluxReceive.java:170)
	at reactor.netty.channel.FluxReceive.subscribe(FluxReceive.java:145)
	at reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:68)
	at reactor.netty.ByteBufFlux.subscribe(ByteBufFlux.java:340)
	at reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:68)
	at reactor.netty.ByteBufFlux.subscribe(ByteBufFlux.java:340)
	at reactor.core.publisher.Flux.subscribe(Flux.java:8891)
	at reactor.netty.channel.MonoSendMany.subscribe(MonoSendMany.java:102)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.netty.FutureMono.doSubscribe(FutureMono.java:122)
	at reactor.netty.FutureMono$DeferredFutureMono.subscribe(FutureMono.java:114)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.netty.NettyOutbound.subscribe(NettyOutbound.java:336)
	at reactor.core.publisher.MonoSource.subscribe(MonoSource.java:68)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.netty.http.client.HttpClientConnect$HttpIOHandlerObserver.onStateChange(HttpClientConnect.java:459)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onStateChange(DefaultPooledConnectionProvider.java:207)
	at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnection.onStateChange(DefaultPooledConnectionProvider.java:468)
	at reactor.netty.channel.ChannelOperationsHandler.channelActive(ChannelOperationsHandler.java:62)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:260)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:238)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:231)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelActive(CombinedChannelDuplexHandler.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelActive(ChannelInboundHandlerAdapter.java:69)
	at io.netty.channel.CombinedChannelDuplexHandler.channelActive(CombinedChannelDuplexHandler.java:211)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:260)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:238)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:231)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelActive(DefaultChannelPipeline.java:1345)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:258)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:238)
	at io.netty.channel.DefaultChannelPipeline.fireChannelActive(DefaultChannelPipeline.java:844)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:310)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:340)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.lang.NullPointerException: Cannot invoke "String.hashCode()" because "key" is null
	at com.citi.tts.api.gateway.crypto.AES256Util.hastTime(AES256Util.java:33)
	at com.citi.tts.api.gateway.crypto.AES256Util.decrypt(AES256Util.java:50)
	at com.citi.tts.api.gateway.crypto.ReactiveAESService.lambda$decrypt$2(ReactiveAESService.java:16)
	at reactor.core.publisher.MonoCallable$MonoCallableSubscription.request(MonoCallable.java:137)
	... 83 common frames omitted
2025-06-30 22:29:01 [reactor-http-nio-6] ERROR c.c.t.a.g.f.ServiceDegradationFilter - Service error detected - Service: api, Path: /api/payment/process, Error: 解密失败: Cannot invoke "String.hashCode()" because "key" is null
2025-06-30 22:29:01 [reactor-http-nio-6] INFO  c.c.t.a.g.s.ServiceDegradationService - Service degradation triggered - Service: api, Level: CORE, Error: RuntimeException
2025-06-30 22:29:01 [reactor-http-nio-6] INFO  c.c.t.a.g.s.ServiceDegradationService - Handling CORE service degradation for: api
2025-06-30 22:29:01 [reactor-http-nio-6] INFO  c.c.t.a.g.s.i.CoreServiceFallbackHandlerImpl - Core service fallback triggered - Service: api, Path: /api/payment/process
2025-06-30 22:29:01 [reactor-http-nio-6] WARN  c.c.t.a.g.s.i.CoreServiceFallbackHandlerImpl - Failed to get Redis fallback data for key: fallback:core:api:/api/payment/process
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1858)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1789)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1586)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.lambda$getConnection$0(LettuceConnectionFactory.java:1566)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.doInLock(LettuceConnectionFactory.java:1527)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1563)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedReactiveConnection(LettuceConnectionFactory.java:1274)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getReactiveConnection(LettuceConnectionFactory.java:1149)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getReactiveConnection(LettuceConnectionFactory.java:120)
	at org.springframework.data.redis.core.ReactiveRedisTemplate.lambda$getConnection$2(ReactiveRedisTemplate.java:273)
	at reactor.core.publisher.MonoSupplier.call(MonoSupplier.java:67)
	at reactor.core.publisher.FluxUsingWhen.subscribe(FluxUsingWhen.java:80)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onError(MonoIgnoreThen.java:280)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:205)
	at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
	at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:229)
	at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:279)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.maybeOnError(FluxConcatMapNoPrefetch.java:327)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onNext(FluxConcatMapNoPrefetch.java:212)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
	at reactor.core.publisher.SinkManyEmitterProcessor.drain(SinkManyEmitterProcessor.java:476)
	at reactor.core.publisher.SinkManyEmitterProcessor$EmitterInner.drainParent(SinkManyEmitterProcessor.java:620)
	at reactor.core.publisher.FluxPublish$PubSubInner.request(FluxPublish.java:874)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
	at reactor.core.publisher.Operators$DeferredSubscription.request(Operators.java:1742)
	at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:196)
	at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:205)
	at reactor.netty.http.client.HttpClientConnect$HttpObserver.onUncaughtException(HttpClientConnect.java:417)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onUncaughtException(ReactorNetty.java:715)
	at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onUncaughtException(DefaultPooledConnectionProvider.java:225)
	at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnection.onUncaughtException(DefaultPooledConnectionProvider.java:478)
	at reactor.netty.http.client.HttpClientOperations.onOutboundError(HttpClientOperations.java:693)
	at reactor.netty.channel.ChannelOperations.onError(ChannelOperations.java:272)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onError(MonoIgnoreThen.java:280)
	at reactor.netty.channel.MonoSendMany$SendManyInner.run(MonoSendMany.java:352)
	at reactor.netty.channel.MonoSendMany$SendManyInner.trySchedule(MonoSendMany.java:434)
	at reactor.netty.channel.MonoSendMany$SendManyInner.onError(MonoSendMany.java:199)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onError(MonoFlatMapMany.java:256)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:106)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
	at reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.onError(FluxTimeout.java:220)
	at reactor.core.publisher.MonoCallable$MonoCallableSubscription.request(MonoCallable.java:145)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.SerializedSubscriber.request(SerializedSubscriber.java:151)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onSubscribe(FluxOnErrorResume.java:74)
	at reactor.core.publisher.SerializedSubscriber.onSubscribe(SerializedSubscriber.java:65)
	at reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.onSubscribe(FluxTimeout.java:155)
	at reactor.core.publisher.MonoCallable.subscribe(MonoCallable.java:48)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext(MonoFlatMapMany.java:196)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
	at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2096)
	at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
	at reactor.netty.channel.FluxReceive.terminateReceiver(FluxReceive.java:481)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:273)
	at reactor.netty.channel.FluxReceive.request(FluxReceive.java:131)
	at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:164)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.request(FluxPeek.java:138)
	at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:164)
	at reactor.core.publisher.Operators$BaseFluxToMonoOperator.request(Operators.java:2066)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.request(FluxFilterFuseable.java:411)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.request(FluxMapFuseable.java:360)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onSubscribe(MonoFlatMapMany.java:141)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onSubscribe(FluxContextWrite.java:101)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onSubscribe(FluxMapFuseable.java:265)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onSubscribe(FluxFilterFuseable.java:305)
	at reactor.core.publisher.Operators$BaseFluxToMonoOperator.onSubscribe(Operators.java:2050)
	at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onSubscribe(FluxPeek.java:171)
	at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
	at reactor.netty.channel.FluxReceive.startReceiver(FluxReceive.java:170)
	at reactor.netty.channel.FluxReceive.subscribe(FluxReceive.java:145)
	at reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:68)
	at reactor.netty.ByteBufFlux.subscribe(ByteBufFlux.java:340)
	at reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:68)
	at reactor.netty.ByteBufFlux.subscribe(ByteBufFlux.java:340)
	at reactor.core.publisher.Flux.subscribe(Flux.java:8891)
	at reactor.netty.channel.MonoSendMany.subscribe(MonoSendMany.java:102)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.netty.FutureMono.doSubscribe(FutureMono.java:122)
	at reactor.netty.FutureMono$DeferredFutureMono.subscribe(FutureMono.java:114)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.netty.NettyOutbound.subscribe(NettyOutbound.java:336)
	at reactor.core.publisher.MonoSource.subscribe(MonoSource.java:68)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.netty.http.client.HttpClientConnect$HttpIOHandlerObserver.onStateChange(HttpClientConnect.java:459)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onStateChange(DefaultPooledConnectionProvider.java:207)
	at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnection.onStateChange(DefaultPooledConnectionProvider.java:468)
	at reactor.netty.channel.ChannelOperationsHandler.channelActive(ChannelOperationsHandler.java:62)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:260)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:238)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:231)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelActive(CombinedChannelDuplexHandler.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelActive(ChannelInboundHandlerAdapter.java:69)
	at io.netty.channel.CombinedChannelDuplexHandler.channelActive(CombinedChannelDuplexHandler.java:211)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:260)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:238)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:231)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelActive(DefaultChannelPipeline.java:1345)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:258)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:238)
	at io.netty.channel.DefaultChannelPipeline.fireChannelActive(DefaultChannelPipeline.java:844)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:310)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:340)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to localhost/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:63)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:41)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:354)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:220)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:112)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:112)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1787)
	... 134 common frames omitted
Caused by: io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: localhost/127.0.0.1:6379
Caused by: java.net.ConnectException: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:973)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:336)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:339)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-06-30 22:29:01 [reactor-http-nio-6] DEBUG i.g.r.c.i.CircuitBreakerStateMachine - CircuitBreaker 'nonCoreApiCircuitBreaker' succeeded:
2025-06-30 22:29:01 [reactor-http-nio-6] DEBUG r.n.http.server.HttpServerOperations - [90e5832e-1, L:/127.0.0.1:8080 - R:/127.0.0.1:60946] Last HTTP response frame
2025-06-30 22:29:01 [reactor-http-nio-6] DEBUG r.n.http.server.HttpServerOperations - [90e5832e-1, L:/127.0.0.1:8080 - R:/127.0.0.1:60946] Headers are not sent before onComplete().
2025-06-30 22:29:01 [reactor-http-nio-6] DEBUG r.n.http.server.HttpServerOperations - [90e5832e-1, L:/127.0.0.1:8080 - R:/127.0.0.1:60946] Decreasing pending responses count: 0
2025-06-30 22:29:01 [reactor-http-nio-6] DEBUG r.n.http.server.HttpServerOperations - [90e5832e-1, L:/127.0.0.1:8080 - R:/127.0.0.1:60946] Last HTTP packet was sent, terminating the channel
2025-06-30 22:29:01 [reactor-http-nio-6] DEBUG r.netty.channel.ChannelOperations - [90e5832e-1, L:/127.0.0.1:8080 - R:/127.0.0.1:60946] [HttpServer] Channel inbound receiver cancelled (subscription disposed).
2025-06-30 22:29:01 [reactor-http-nio-6] DEBUG c.c.t.a.gateway.tracing.TraceContext - Finished trace: 9696ba8c1788435d88733d19c79add1f with status: 200
2025-06-30 22:29:01 [reactor-http-nio-6] ERROR reactor.core.publisher.Operators - Operator called default onErrorDropped
java.lang.UnsupportedOperationException: null
	at org.springframework.http.ReadOnlyHttpHeaders.add(ReadOnlyHttpHeaders.java:97)
	at com.citi.tts.api.gateway.tracing.TraceFilter.addTraceHeadersToResponse(TraceFilter.java:113)
	at com.citi.tts.api.gateway.tracing.TraceFilter.lambda$filter$0(TraceFilter.java:69)
	at reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.runFinally(FluxDoFinally.java:146)
	at reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete(FluxDoFinally.java:129)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at io.github.resilience4j.reactor.circuitbreaker.operator.CircuitBreakerSubscriber.hookOnComplete(CircuitBreakerSubscriber.java:69)
	at reactor.core.publisher.BaseSubscriber.onComplete(BaseSubscriber.java:197)
	at reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete(FluxDoFinally.java:128)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:210)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onComplete(MonoPeekTerminal.java:299)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onComplete(MonoPeekTerminal.java:299)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onError(MonoPeekTerminal.java:258)
	at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.FluxUsingWhen.subscribe(FluxUsingWhen.java:98)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onError(MonoIgnoreThen.java:280)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:205)
	at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
	at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:229)
	at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:279)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.maybeOnError(FluxConcatMapNoPrefetch.java:327)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onNext(FluxConcatMapNoPrefetch.java:212)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
	at reactor.core.publisher.SinkManyEmitterProcessor.drain(SinkManyEmitterProcessor.java:476)
	at reactor.core.publisher.SinkManyEmitterProcessor$EmitterInner.drainParent(SinkManyEmitterProcessor.java:620)
	at reactor.core.publisher.FluxPublish$PubSubInner.request(FluxPublish.java:874)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
	at reactor.core.publisher.Operators$DeferredSubscription.request(Operators.java:1742)
	at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:196)
	at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:205)
	at reactor.netty.http.client.HttpClientConnect$HttpObserver.onUncaughtException(HttpClientConnect.java:417)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onUncaughtException(ReactorNetty.java:715)
	at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onUncaughtException(DefaultPooledConnectionProvider.java:225)
	at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnection.onUncaughtException(DefaultPooledConnectionProvider.java:478)
	at reactor.netty.http.client.HttpClientOperations.onOutboundError(HttpClientOperations.java:693)
	at reactor.netty.channel.ChannelOperations.onError(ChannelOperations.java:272)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onError(MonoIgnoreThen.java:280)
	at reactor.netty.channel.MonoSendMany$SendManyInner.run(MonoSendMany.java:352)
	at reactor.netty.channel.MonoSendMany$SendManyInner.trySchedule(MonoSendMany.java:434)
	at reactor.netty.channel.MonoSendMany$SendManyInner.onError(MonoSendMany.java:199)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onError(MonoFlatMapMany.java:256)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:106)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
	at reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.onError(FluxTimeout.java:220)
	at reactor.core.publisher.MonoCallable$MonoCallableSubscription.request(MonoCallable.java:145)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.SerializedSubscriber.request(SerializedSubscriber.java:151)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onSubscribe(FluxOnErrorResume.java:74)
	at reactor.core.publisher.SerializedSubscriber.onSubscribe(SerializedSubscriber.java:65)
	at reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.onSubscribe(FluxTimeout.java:155)
	at reactor.core.publisher.MonoCallable.subscribe(MonoCallable.java:48)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext(MonoFlatMapMany.java:196)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
	at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2096)
	at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
	at reactor.netty.channel.FluxReceive.terminateReceiver(FluxReceive.java:481)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:273)
	at reactor.netty.channel.FluxReceive.request(FluxReceive.java:131)
	at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:164)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.request(FluxPeek.java:138)
	at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:164)
	at reactor.core.publisher.Operators$BaseFluxToMonoOperator.request(Operators.java:2066)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.request(FluxFilterFuseable.java:411)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.request(FluxMapFuseable.java:360)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onSubscribe(MonoFlatMapMany.java:141)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onSubscribe(FluxContextWrite.java:101)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onSubscribe(FluxMapFuseable.java:265)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onSubscribe(FluxFilterFuseable.java:305)
	at reactor.core.publisher.Operators$BaseFluxToMonoOperator.onSubscribe(Operators.java:2050)
	at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onSubscribe(FluxPeek.java:171)
	at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
	at reactor.netty.channel.FluxReceive.startReceiver(FluxReceive.java:170)
	at reactor.netty.channel.FluxReceive.subscribe(FluxReceive.java:145)
	at reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:68)
	at reactor.netty.ByteBufFlux.subscribe(ByteBufFlux.java:340)
	at reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:68)
	at reactor.netty.ByteBufFlux.subscribe(ByteBufFlux.java:340)
	at reactor.core.publisher.Flux.subscribe(Flux.java:8891)
	at reactor.netty.channel.MonoSendMany.subscribe(MonoSendMany.java:102)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.netty.FutureMono.doSubscribe(FutureMono.java:122)
	at reactor.netty.FutureMono$DeferredFutureMono.subscribe(FutureMono.java:114)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.netty.NettyOutbound.subscribe(NettyOutbound.java:336)
	at reactor.core.publisher.MonoSource.subscribe(MonoSource.java:68)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.netty.http.client.HttpClientConnect$HttpIOHandlerObserver.onStateChange(HttpClientConnect.java:459)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onStateChange(DefaultPooledConnectionProvider.java:207)
	at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnection.onStateChange(DefaultPooledConnectionProvider.java:468)
	at reactor.netty.channel.ChannelOperationsHandler.channelActive(ChannelOperationsHandler.java:62)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:260)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:238)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:231)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelActive(CombinedChannelDuplexHandler.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelActive(ChannelInboundHandlerAdapter.java:69)
	at io.netty.channel.CombinedChannelDuplexHandler.channelActive(CombinedChannelDuplexHandler.java:211)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:260)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:238)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:231)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelActive(DefaultChannelPipeline.java:1345)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:258)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:238)
	at io.netty.channel.DefaultChannelPipeline.fireChannelActive(DefaultChannelPipeline.java:844)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:310)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:340)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-06-30 22:29:01 [reactor-http-nio-6] DEBUG r.n.r.DefaultPooledConnectionProvider - [4450d624, L:/127.0.0.1:60947 - R:localhost/127.0.0.1:8081] onStateChange(POST{uri=/api/payment/process, connection=PooledConnection{channel=[id: 0x4450d624, L:/127.0.0.1:60947 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-06-30 22:29:01 [reactor-http-nio-6] DEBUG r.n.r.DefaultPooledConnectionProvider - [4450d624, L:/127.0.0.1:60947 - R:localhost/127.0.0.1:8081] onStateChange(POST{uri=/api/payment/process, connection=PooledConnection{channel=[id: 0x4450d624, L:/127.0.0.1:60947 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-06-30 22:29:01 [reactor-http-nio-6] DEBUG r.n.r.PooledConnectionProvider - [4450d624, L:/127.0.0.1:60947 ! R:localhost/127.0.0.1:8081] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-06-30 22:29:01 [reactor-http-nio-6] DEBUG r.n.r.DefaultPooledConnectionProvider - [4450d624, L:/127.0.0.1:60947 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x4450d624, L:/127.0.0.1:60947 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-06-30 22:29:03 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Performing periodic health check
2025-06-30 22:29:32 [boundedElastic-1] DEBUG c.c.t.a.g.t.ReactiveTraceScheduler - Reactive trace cleanup completed - No traces cleaned, Duration: 0ms
2025-06-30 22:29:32 [boundedElastic-2] INFO  c.c.t.a.g.t.ReactiveTraceScheduler - Reactive Trace Statistics - Manager: Total=5, Sampled=5, Active=5, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0
2025-06-30 22:29:33 [scheduling-1] DEBUG c.c.t.a.g.c.ReleaseValidationConfig - Executing auto step traffic scheduler
2025-06-30 22:29:33 [scheduling-1] DEBUG c.c.t.a.g.c.ReleaseValidationConfig - Executing release strategy health check
2025-06-30 22:29:33 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Performing periodic health check
2025-06-30 22:29:33 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Cleaning up expired instances
2025-06-30 22:29:33 [scheduling-1] DEBUG c.c.t.a.g.s.QPSCleanupScheduler - Starting scheduled QPS data cleanup...
2025-06-30 22:29:33 [scheduling-1] INFO  c.c.t.api.gateway.metrics.QPSMetrics - Manual cleanup completed. Total cleaned: 0, Active entries: API=1, IP=1, User=1, Priority=1
2025-06-30 22:29:33 [scheduling-1] DEBUG c.c.t.a.g.s.QPSCleanupScheduler - Scheduled QPS data cleanup completed
2025-06-30 22:29:33 [scheduling-1] INFO  c.c.t.a.g.s.QPSCleanupScheduler - === QPS Summary Report ===
2025-06-30 22:29:33 [scheduling-1] INFO  c.c.t.a.g.s.QPSCleanupScheduler - Global QPS: 0
2025-06-30 22:29:33 [scheduling-1] INFO  c.c.t.a.g.s.QPSCleanupScheduler - Active APIs: 1
2025-06-30 22:29:33 [scheduling-1] INFO  c.c.t.a.g.s.QPSCleanupScheduler - Active IPs: 1
2025-06-30 22:29:33 [scheduling-1] INFO  c.c.t.a.g.s.QPSCleanupScheduler - Active Users: 1
2025-06-30 22:29:33 [scheduling-1] INFO  c.c.t.a.g.s.QPSCleanupScheduler - Active Priorities: 1
2025-06-30 22:29:33 [scheduling-1] INFO  c.c.t.a.g.s.QPSCleanupScheduler - Top API - /api/gateway/payment/process: 1 QPS
2025-06-30 22:29:33 [scheduling-1] INFO  c.c.t.a.g.s.QPSCleanupScheduler - Top IP - 127.0.0.1: 1 QPS
2025-06-30 22:29:33 [scheduling-1] INFO  c.c.t.a.g.s.QPSCleanupScheduler - === End QPS Summary Report ===
2025-06-30 22:29:33 [scheduling-1] DEBUG c.c.t.a.g.t.AdaptiveTraceScheduler - Adaptive trace cleanup completed - No traces cleaned, Duration: 0ms, Multiplier: 1.0
2025-06-30 22:29:33 [scheduling-1] DEBUG c.c.t.a.g.tracing.TraceScheduler - Scheduled trace cleanup completed - No traces cleaned, Duration: 0ms
2025-06-30 22:29:33 [scheduling-1] INFO  c.c.t.a.g.t.AdaptiveTraceScheduler - Adaptive Trace Statistics - Manager: Total=5, Sampled=5, Active=5, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0, Multiplier: 1.0
2025-06-30 22:29:33 [scheduling-1] INFO  c.c.t.a.g.tracing.TraceScheduler - Trace Statistics - Manager: Total=5, Sampled=5, Active=5, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0
2025-06-30 22:29:48 [reactor-http-nio-7] DEBUG r.n.http.server.HttpServerOperations - [ef014883, L:/127.0.0.1:8080 - R:/127.0.0.1:61021] New http connection, requesting read
2025-06-30 22:29:48 [reactor-http-nio-7] DEBUG r.netty.transport.TransportConfig - [ef014883, L:/127.0.0.1:8080 - R:/127.0.0.1:61021] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpServerCodec), (reactor.left.httpTrafficHandler = reactor.netty.http.server.HttpTrafficHandler), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-06-30 22:29:48 [reactor-http-nio-7] DEBUG r.n.http.server.HttpServerOperations - [ef014883, L:/127.0.0.1:8080 - R:/127.0.0.1:61021] Increasing pending responses count: 1
2025-06-30 22:29:48 [reactor-http-nio-7] DEBUG r.netty.http.server.HttpServer - [ef014883-1, L:/127.0.0.1:8080 - R:/127.0.0.1:61021] Handler is being applied: org.springframework.http.server.reactive.ReactorHttpHandlerAdapter@3d5700a3
2025-06-30 22:29:48 [reactor-http-nio-7] DEBUG o.s.c.g.h.RoutePredicateHandlerMapping - Route matched: payment-route
2025-06-30 22:29:48 [reactor-http-nio-7] DEBUG o.s.c.g.h.RoutePredicateHandlerMapping - Mapping [Exchange: POST http://localhost:8080/api/gateway/payment/process] to Route{id='payment-route', uri=http://localhost:8081, order=0, predicate=Paths: [/api/gateway/payment/**], match trailing slash: true, gatewayFilters=[[[RewritePath /api/gateway/payment/(?<segment>.*) = '/api/payment/${segment}'], order = 0], com.citi.tts.api.gateway.filter.AdvancedRateLimitFilter@1de12397, [com.citi.tts.api.gateway.filter.ServiceDegradationGatewayFilter$1@20dd1b2d, order = 0], com.citi.tts.api.gateway.filter.CircuitBreakerFilter@639948a2, [com.citi.tts.api.gateway.filter.CryptoFilter@7f41d979, order = 0]], metadata={}}
2025-06-30 22:29:48 [reactor-http-nio-7] DEBUG o.s.c.g.h.RoutePredicateHandlerMapping - [ef014883-6] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@1d33e72e
2025-06-30 22:29:48 [reactor-http-nio-7] DEBUG o.s.c.g.handler.FilteringWebHandler - Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@5c7e55a4}, order = -2147483648], [GatewayFilterAdapter{delegate=com.citi.tts.api.gateway.tracing.TraceFilter@b68932b}, order = -2147483598], com.citi.tts.api.gateway.filter.AdvancedRateLimitFilter@1de12397, [GatewayFilterAdapter{delegate=com.citi.tts.api.gateway.filter.QPSMetricsFilter@4a5d5b38}, order = -2147483548], com.citi.tts.api.gateway.filter.CircuitBreakerFilter@639948a2, [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@da67c46}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@42734b71}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@43f7f48d}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@29431f61}, order = 0], [[RewritePath /api/gateway/payment/(?<segment>.*) = '/api/payment/${segment}'], order = 0], [com.citi.tts.api.gateway.filter.ServiceDegradationGatewayFilter$1@20dd1b2d, order = 0], [com.citi.tts.api.gateway.filter.CryptoFilter@7f41d979, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@7ae6927}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ReactiveLoadBalancerClientFilter@16c9e378}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.LoadBalancerServiceInstanceCookieFilter@b87ea8b}, order = 10151], [GatewayFilterAdapter{delegate=com.citi.tts.api.gateway.filter.ServiceDegradationFilter@6fdaef04}, order = 2147483547], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@5a3be84}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@5f32ab17}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@7d0df326}, order = 2147483647]]
2025-06-30 22:29:48 [reactor-http-nio-7] DEBUG c.c.t.a.gateway.tracing.TraceContext - Created root trace context: 3629833a68bf41d0b10ec913501864ed
2025-06-30 22:29:48 [reactor-http-nio-7] DEBUG c.c.t.a.gateway.tracing.TraceManager - Created new sampled trace context: 3629833a68bf41d0b10ec913501864ed
2025-06-30 22:29:48 [reactor-http-nio-7] DEBUG c.c.t.a.g.f.AdvancedRateLimitFilter - Processing rate limit for: POST /api/gateway/payment/process from IP: 127.0.0.1, User: null
2025-06-30 22:29:48 [reactor-http-nio-7] DEBUG c.c.t.a.g.l.AdvancedRateLimiter - Tokens refilled for api_weight:NON_CORE: +480 tokens, total: 15
2025-06-30 22:29:48 [reactor-http-nio-7] DEBUG c.c.t.a.g.l.AdvancedRateLimiter - Token acquired for api_weight:NON_CORE: 1 tokens consumed, 14 remaining
2025-06-30 22:29:48 [reactor-http-nio-7] DEBUG c.c.t.a.g.filter.QPSMetricsFilter - QPS recorded - Path: /api/gateway/payment/process, IP: 127.0.0.1, User: anonymous, Priority: default
2025-06-30 22:29:48 [reactor-http-nio-7] DEBUG c.c.t.a.g.f.CircuitBreakerFilter - Using circuit breaker for API: /api/gateway/payment/process with priority: NON_CORE
2025-06-30 22:29:48 [reactor-http-nio-7] DEBUG c.c.t.a.g.f.ServiceDegradationGatewayFilter - Service degradation filter - Service: payment-service, Path: /api/payment/process, Level: CORE
2025-06-30 22:29:48 [reactor-http-nio-7] DEBUG c.c.t.a.gateway.filter.CryptoFilter - crupto filter is coming
2025-06-30 22:29:48 [reactor-http-nio-7] DEBUG c.c.t.a.g.f.ServiceDegradationFilter - Service degradation filter - Service: api, Path: /api/payment/process, Level: CORE
2025-06-30 22:29:48 [reactor-http-nio-7] DEBUG o.s.c.g.f.h.o.ObservedRequestHttpHeadersFilter - Will instrument the HTTP request headers [Content-Type:"application/json", Content-Length:"16", User-Agent:"IntelliJ HTTP Client/IntelliJ IDEA 2025.1.3", Accept-Encoding:"br, deflate, gzip, x-gzip", Accept:"*/*", host:"localhost:8080", X-Span-ID:"22e070b881f147c2", X-Request-ID:"8ece4540-4f38-4bea-9744-04c485e89805", X-Correlation-ID:"null", X-Trace-ID:"3629833a68bf41d0b10ec913501864ed", X-Sampled:"true"]
2025-06-30 22:29:48 [reactor-http-nio-7] DEBUG o.s.c.g.f.h.o.ObservedRequestHttpHeadersFilter - Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='payment-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://localhost:8080/api/payment/process'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@1f3a1a46', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=9.00291E-4, duration(nanos)=900291.0, startTimeNanos=161736618671750}'], parentObservation={name=http.server.requests(null), error=null, context=name='http.server.requests', contextualName='null', error='null', lowCardinalityKeyValues=[exception='none', method='POST', outcome='SUCCESS', status='200', uri='UNKNOWN'], highCardinalityKeyValues=[http.url='/api/gateway/payment/process'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@5a3897c5', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.010052833, duration(nanos)=1.0052833E7, startTimeNanos=161736609597208}'], parentObservation=null}} created for the request. New headers are [Content-Type:"application/json", Content-Length:"16", User-Agent:"IntelliJ HTTP Client/IntelliJ IDEA 2025.1.3", Accept-Encoding:"br, deflate, gzip, x-gzip", Accept:"*/*", host:"localhost:8080", X-Span-ID:"22e070b881f147c2", X-Request-ID:"8ece4540-4f38-4bea-9744-04c485e89805", X-Correlation-ID:"null", X-Trace-ID:"3629833a68bf41d0b10ec913501864ed", X-Sampled:"true"]
2025-06-30 22:29:48 [reactor-http-nio-7] DEBUG r.n.r.PooledConnectionProvider - [388151c4] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-06-30 22:29:49 [reactor-http-nio-7] DEBUG r.netty.transport.TransportConfig - [388151c4] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-06-30 22:29:49 [reactor-http-nio-7] DEBUG r.netty.transport.TransportConnector - [388151c4] Connecting to [localhost/127.0.0.1:8081].
2025-06-30 22:29:49 [reactor-http-nio-7] DEBUG r.n.r.DefaultPooledConnectionProvider - [388151c4, L:/127.0.0.1:61022 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-06-30 22:29:49 [reactor-http-nio-7] DEBUG r.n.r.PooledConnectionProvider - [388151c4, L:/127.0.0.1:61022 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-06-30 22:29:49 [reactor-http-nio-7] DEBUG r.n.r.DefaultPooledConnectionProvider - [388151c4, L:/127.0.0.1:61022 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x388151c4, L:/127.0.0.1:61022 - R:localhost/127.0.0.1:8081]}, [connected])
2025-06-30 22:29:49 [reactor-http-nio-7] DEBUG r.n.r.DefaultPooledConnectionProvider - [388151c4-1, L:/127.0.0.1:61022 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x388151c4, L:/127.0.0.1:61022 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-06-30 22:29:49 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientConnect - [388151c4-1, L:/127.0.0.1:61022 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/api/payment/process, method=POST}
2025-06-30 22:29:49 [reactor-http-nio-7] DEBUG r.n.r.DefaultPooledConnectionProvider - [388151c4-1, L:/127.0.0.1:61022 - R:localhost/127.0.0.1:8081] onStateChange(POST{uri=/api/payment/process, connection=PooledConnection{channel=[id: 0x388151c4, L:/127.0.0.1:61022 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-06-30 22:29:49 [reactor-http-nio-7] DEBUG reactor.netty.channel.FluxReceive - [ef014883-1, L:/127.0.0.1:8080 - R:/127.0.0.1:61021] [terminated=true, cancelled=false, pending=1, error=null]: subscribing inbound receiver
2025-06-30 22:29:49 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [388151c4-1, L:/127.0.0.1:61022 - R:localhost/127.0.0.1:8081] Outbound error happened
java.lang.RuntimeException: 解密失败: Cannot invoke "String.hashCode()" because "key" is null
	at com.citi.tts.api.gateway.crypto.ReactiveAESService.lambda$decrypt$3(ReactiveAESService.java:19)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:94)
	at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
	at reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.onError(FluxTimeout.java:220)
	at reactor.core.publisher.MonoCallable$MonoCallableSubscription.request(MonoCallable.java:145)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.SerializedSubscriber.request(SerializedSubscriber.java:151)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onSubscribe(FluxOnErrorResume.java:74)
	at reactor.core.publisher.SerializedSubscriber.onSubscribe(SerializedSubscriber.java:65)
	at reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.onSubscribe(FluxTimeout.java:155)
	at reactor.core.publisher.MonoCallable.subscribe(MonoCallable.java:48)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext(MonoFlatMapMany.java:196)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
	at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2096)
	at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
	at reactor.netty.channel.FluxReceive.terminateReceiver(FluxReceive.java:481)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:273)
	at reactor.netty.channel.FluxReceive.request(FluxReceive.java:131)
	at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:164)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.request(FluxPeek.java:138)
	at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:164)
	at reactor.core.publisher.Operators$BaseFluxToMonoOperator.request(Operators.java:2066)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.request(FluxFilterFuseable.java:411)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.request(FluxMapFuseable.java:360)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onSubscribe(MonoFlatMapMany.java:141)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onSubscribe(FluxContextWrite.java:101)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onSubscribe(FluxMapFuseable.java:265)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onSubscribe(FluxFilterFuseable.java:305)
	at reactor.core.publisher.Operators$BaseFluxToMonoOperator.onSubscribe(Operators.java:2050)
	at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onSubscribe(FluxPeek.java:171)
	at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
	at reactor.netty.channel.FluxReceive.startReceiver(FluxReceive.java:170)
	at reactor.netty.channel.FluxReceive.subscribe(FluxReceive.java:145)
	at reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:68)
	at reactor.netty.ByteBufFlux.subscribe(ByteBufFlux.java:340)
	at reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:68)
	at reactor.netty.ByteBufFlux.subscribe(ByteBufFlux.java:340)
	at reactor.core.publisher.Flux.subscribe(Flux.java:8891)
	at reactor.netty.channel.MonoSendMany.subscribe(MonoSendMany.java:102)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.netty.FutureMono.doSubscribe(FutureMono.java:122)
	at reactor.netty.FutureMono$DeferredFutureMono.subscribe(FutureMono.java:114)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.netty.NettyOutbound.subscribe(NettyOutbound.java:336)
	at reactor.core.publisher.MonoSource.subscribe(MonoSource.java:68)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.netty.http.client.HttpClientConnect$HttpIOHandlerObserver.onStateChange(HttpClientConnect.java:459)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onStateChange(DefaultPooledConnectionProvider.java:207)
	at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnection.onStateChange(DefaultPooledConnectionProvider.java:468)
	at reactor.netty.channel.ChannelOperationsHandler.channelActive(ChannelOperationsHandler.java:62)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:260)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:238)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:231)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelActive(CombinedChannelDuplexHandler.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelActive(ChannelInboundHandlerAdapter.java:69)
	at io.netty.channel.CombinedChannelDuplexHandler.channelActive(CombinedChannelDuplexHandler.java:211)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:260)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:238)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:231)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelActive(DefaultChannelPipeline.java:1345)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:258)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:238)
	at io.netty.channel.DefaultChannelPipeline.fireChannelActive(DefaultChannelPipeline.java:844)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:310)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:340)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.lang.NullPointerException: Cannot invoke "String.hashCode()" because "key" is null
	at com.citi.tts.api.gateway.crypto.AES256Util.hastTime(AES256Util.java:33)
	at com.citi.tts.api.gateway.crypto.AES256Util.decrypt(AES256Util.java:50)
	at com.citi.tts.api.gateway.crypto.ReactiveAESService.lambda$decrypt$2(ReactiveAESService.java:16)
	at reactor.core.publisher.MonoCallable$MonoCallableSubscription.request(MonoCallable.java:137)
	... 83 common frames omitted
2025-06-30 22:29:49 [reactor-http-nio-7] WARN  r.n.http.client.HttpClientConnect - [388151c4-1, L:/127.0.0.1:61022 - R:localhost/127.0.0.1:8081] The connection observed an error
java.lang.RuntimeException: 解密失败: Cannot invoke "String.hashCode()" because "key" is null
	at com.citi.tts.api.gateway.crypto.ReactiveAESService.lambda$decrypt$3(ReactiveAESService.java:19)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:94)
	at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
	at reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.onError(FluxTimeout.java:220)
	at reactor.core.publisher.MonoCallable$MonoCallableSubscription.request(MonoCallable.java:145)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.SerializedSubscriber.request(SerializedSubscriber.java:151)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onSubscribe(FluxOnErrorResume.java:74)
	at reactor.core.publisher.SerializedSubscriber.onSubscribe(SerializedSubscriber.java:65)
	at reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.onSubscribe(FluxTimeout.java:155)
	at reactor.core.publisher.MonoCallable.subscribe(MonoCallable.java:48)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext(MonoFlatMapMany.java:196)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
	at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2096)
	at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
	at reactor.netty.channel.FluxReceive.terminateReceiver(FluxReceive.java:481)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:273)
	at reactor.netty.channel.FluxReceive.request(FluxReceive.java:131)
	at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:164)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.request(FluxPeek.java:138)
	at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:164)
	at reactor.core.publisher.Operators$BaseFluxToMonoOperator.request(Operators.java:2066)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.request(FluxFilterFuseable.java:411)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.request(FluxMapFuseable.java:360)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onSubscribe(MonoFlatMapMany.java:141)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onSubscribe(FluxContextWrite.java:101)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onSubscribe(FluxMapFuseable.java:265)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onSubscribe(FluxFilterFuseable.java:305)
	at reactor.core.publisher.Operators$BaseFluxToMonoOperator.onSubscribe(Operators.java:2050)
	at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onSubscribe(FluxPeek.java:171)
	at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
	at reactor.netty.channel.FluxReceive.startReceiver(FluxReceive.java:170)
	at reactor.netty.channel.FluxReceive.subscribe(FluxReceive.java:145)
	at reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:68)
	at reactor.netty.ByteBufFlux.subscribe(ByteBufFlux.java:340)
	at reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:68)
	at reactor.netty.ByteBufFlux.subscribe(ByteBufFlux.java:340)
	at reactor.core.publisher.Flux.subscribe(Flux.java:8891)
	at reactor.netty.channel.MonoSendMany.subscribe(MonoSendMany.java:102)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.netty.FutureMono.doSubscribe(FutureMono.java:122)
	at reactor.netty.FutureMono$DeferredFutureMono.subscribe(FutureMono.java:114)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.netty.NettyOutbound.subscribe(NettyOutbound.java:336)
	at reactor.core.publisher.MonoSource.subscribe(MonoSource.java:68)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.netty.http.client.HttpClientConnect$HttpIOHandlerObserver.onStateChange(HttpClientConnect.java:459)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onStateChange(DefaultPooledConnectionProvider.java:207)
	at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnection.onStateChange(DefaultPooledConnectionProvider.java:468)
	at reactor.netty.channel.ChannelOperationsHandler.channelActive(ChannelOperationsHandler.java:62)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:260)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:238)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:231)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelActive(CombinedChannelDuplexHandler.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelActive(ChannelInboundHandlerAdapter.java:69)
	at io.netty.channel.CombinedChannelDuplexHandler.channelActive(CombinedChannelDuplexHandler.java:211)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:260)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:238)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:231)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelActive(DefaultChannelPipeline.java:1345)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:258)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:238)
	at io.netty.channel.DefaultChannelPipeline.fireChannelActive(DefaultChannelPipeline.java:844)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:310)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:340)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.lang.NullPointerException: Cannot invoke "String.hashCode()" because "key" is null
	at com.citi.tts.api.gateway.crypto.AES256Util.hastTime(AES256Util.java:33)
	at com.citi.tts.api.gateway.crypto.AES256Util.decrypt(AES256Util.java:50)
	at com.citi.tts.api.gateway.crypto.ReactiveAESService.lambda$decrypt$2(ReactiveAESService.java:16)
	at reactor.core.publisher.MonoCallable$MonoCallableSubscription.request(MonoCallable.java:137)
	... 83 common frames omitted
2025-06-30 22:29:49 [reactor-http-nio-7] ERROR c.c.t.a.g.f.ServiceDegradationFilter - Service error detected - Service: api, Path: /api/payment/process, Error: 解密失败: Cannot invoke "String.hashCode()" because "key" is null
2025-06-30 22:29:49 [reactor-http-nio-7] INFO  c.c.t.a.g.s.ServiceDegradationService - Service degradation triggered - Service: api, Level: CORE, Error: RuntimeException
2025-06-30 22:29:49 [reactor-http-nio-7] INFO  c.c.t.a.g.s.ServiceDegradationService - Handling CORE service degradation for: api
2025-06-30 22:29:49 [reactor-http-nio-7] INFO  c.c.t.a.g.s.i.CoreServiceFallbackHandlerImpl - Core service fallback triggered - Service: api, Path: /api/payment/process
2025-06-30 22:29:49 [reactor-http-nio-7] WARN  c.c.t.a.g.s.i.CoreServiceFallbackHandlerImpl - Failed to get Redis fallback data for key: fallback:core:api:/api/payment/process
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1858)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1789)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1586)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.lambda$getConnection$0(LettuceConnectionFactory.java:1566)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.doInLock(LettuceConnectionFactory.java:1527)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1563)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedReactiveConnection(LettuceConnectionFactory.java:1274)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getReactiveConnection(LettuceConnectionFactory.java:1149)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getReactiveConnection(LettuceConnectionFactory.java:120)
	at org.springframework.data.redis.core.ReactiveRedisTemplate.lambda$getConnection$2(ReactiveRedisTemplate.java:273)
	at reactor.core.publisher.MonoSupplier.call(MonoSupplier.java:67)
	at reactor.core.publisher.FluxUsingWhen.subscribe(FluxUsingWhen.java:80)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onError(MonoIgnoreThen.java:280)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:205)
	at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
	at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:229)
	at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:279)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.maybeOnError(FluxConcatMapNoPrefetch.java:327)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onNext(FluxConcatMapNoPrefetch.java:212)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
	at reactor.core.publisher.SinkManyEmitterProcessor.drain(SinkManyEmitterProcessor.java:476)
	at reactor.core.publisher.SinkManyEmitterProcessor$EmitterInner.drainParent(SinkManyEmitterProcessor.java:620)
	at reactor.core.publisher.FluxPublish$PubSubInner.request(FluxPublish.java:874)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
	at reactor.core.publisher.Operators$DeferredSubscription.request(Operators.java:1742)
	at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:196)
	at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:205)
	at reactor.netty.http.client.HttpClientConnect$HttpObserver.onUncaughtException(HttpClientConnect.java:417)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onUncaughtException(ReactorNetty.java:715)
	at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onUncaughtException(DefaultPooledConnectionProvider.java:225)
	at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnection.onUncaughtException(DefaultPooledConnectionProvider.java:478)
	at reactor.netty.http.client.HttpClientOperations.onOutboundError(HttpClientOperations.java:693)
	at reactor.netty.channel.ChannelOperations.onError(ChannelOperations.java:272)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onError(MonoIgnoreThen.java:280)
	at reactor.netty.channel.MonoSendMany$SendManyInner.run(MonoSendMany.java:352)
	at reactor.netty.channel.MonoSendMany$SendManyInner.trySchedule(MonoSendMany.java:434)
	at reactor.netty.channel.MonoSendMany$SendManyInner.onError(MonoSendMany.java:199)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onError(MonoFlatMapMany.java:256)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:106)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
	at reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.onError(FluxTimeout.java:220)
	at reactor.core.publisher.MonoCallable$MonoCallableSubscription.request(MonoCallable.java:145)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.SerializedSubscriber.request(SerializedSubscriber.java:151)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onSubscribe(FluxOnErrorResume.java:74)
	at reactor.core.publisher.SerializedSubscriber.onSubscribe(SerializedSubscriber.java:65)
	at reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.onSubscribe(FluxTimeout.java:155)
	at reactor.core.publisher.MonoCallable.subscribe(MonoCallable.java:48)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext(MonoFlatMapMany.java:196)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
	at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2096)
	at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
	at reactor.netty.channel.FluxReceive.terminateReceiver(FluxReceive.java:481)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:273)
	at reactor.netty.channel.FluxReceive.request(FluxReceive.java:131)
	at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:164)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.request(FluxPeek.java:138)
	at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:164)
	at reactor.core.publisher.Operators$BaseFluxToMonoOperator.request(Operators.java:2066)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.request(FluxFilterFuseable.java:411)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.request(FluxMapFuseable.java:360)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onSubscribe(MonoFlatMapMany.java:141)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onSubscribe(FluxContextWrite.java:101)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onSubscribe(FluxMapFuseable.java:265)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onSubscribe(FluxFilterFuseable.java:305)
	at reactor.core.publisher.Operators$BaseFluxToMonoOperator.onSubscribe(Operators.java:2050)
	at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onSubscribe(FluxPeek.java:171)
	at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
	at reactor.netty.channel.FluxReceive.startReceiver(FluxReceive.java:170)
	at reactor.netty.channel.FluxReceive.subscribe(FluxReceive.java:145)
	at reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:68)
	at reactor.netty.ByteBufFlux.subscribe(ByteBufFlux.java:340)
	at reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:68)
	at reactor.netty.ByteBufFlux.subscribe(ByteBufFlux.java:340)
	at reactor.core.publisher.Flux.subscribe(Flux.java:8891)
	at reactor.netty.channel.MonoSendMany.subscribe(MonoSendMany.java:102)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.netty.FutureMono.doSubscribe(FutureMono.java:122)
	at reactor.netty.FutureMono$DeferredFutureMono.subscribe(FutureMono.java:114)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.netty.NettyOutbound.subscribe(NettyOutbound.java:336)
	at reactor.core.publisher.MonoSource.subscribe(MonoSource.java:68)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.netty.http.client.HttpClientConnect$HttpIOHandlerObserver.onStateChange(HttpClientConnect.java:459)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onStateChange(DefaultPooledConnectionProvider.java:207)
	at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnection.onStateChange(DefaultPooledConnectionProvider.java:468)
	at reactor.netty.channel.ChannelOperationsHandler.channelActive(ChannelOperationsHandler.java:62)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:260)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:238)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:231)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelActive(CombinedChannelDuplexHandler.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelActive(ChannelInboundHandlerAdapter.java:69)
	at io.netty.channel.CombinedChannelDuplexHandler.channelActive(CombinedChannelDuplexHandler.java:211)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:260)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:238)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:231)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelActive(DefaultChannelPipeline.java:1345)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:258)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:238)
	at io.netty.channel.DefaultChannelPipeline.fireChannelActive(DefaultChannelPipeline.java:844)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:310)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:340)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to localhost/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:63)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:41)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:354)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:220)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:112)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:112)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1787)
	... 134 common frames omitted
Caused by: io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: localhost/127.0.0.1:6379
Caused by: java.net.ConnectException: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:973)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:336)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:339)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-06-30 22:29:49 [reactor-http-nio-7] DEBUG i.g.r.c.i.CircuitBreakerStateMachine - CircuitBreaker 'nonCoreApiCircuitBreaker' succeeded:
2025-06-30 22:29:49 [reactor-http-nio-7] DEBUG r.n.http.server.HttpServerOperations - [ef014883-1, L:/127.0.0.1:8080 - R:/127.0.0.1:61021] Last HTTP response frame
2025-06-30 22:29:49 [reactor-http-nio-7] DEBUG r.n.http.server.HttpServerOperations - [ef014883-1, L:/127.0.0.1:8080 - R:/127.0.0.1:61021] Headers are not sent before onComplete().
2025-06-30 22:29:49 [reactor-http-nio-7] DEBUG r.n.http.server.HttpServerOperations - [ef014883-1, L:/127.0.0.1:8080 - R:/127.0.0.1:61021] Decreasing pending responses count: 0
2025-06-30 22:29:49 [reactor-http-nio-7] DEBUG r.n.http.server.HttpServerOperations - [ef014883-1, L:/127.0.0.1:8080 - R:/127.0.0.1:61021] Last HTTP packet was sent, terminating the channel
2025-06-30 22:29:49 [reactor-http-nio-7] DEBUG r.netty.channel.ChannelOperations - [ef014883-1, L:/127.0.0.1:8080 - R:/127.0.0.1:61021] [HttpServer] Channel inbound receiver cancelled (subscription disposed).
2025-06-30 22:29:49 [reactor-http-nio-7] DEBUG c.c.t.a.gateway.tracing.TraceContext - Finished trace: 3629833a68bf41d0b10ec913501864ed with status: 200
2025-06-30 22:29:49 [reactor-http-nio-7] ERROR reactor.core.publisher.Operators - Operator called default onErrorDropped
java.lang.UnsupportedOperationException: null
	at org.springframework.http.ReadOnlyHttpHeaders.add(ReadOnlyHttpHeaders.java:97)
	at com.citi.tts.api.gateway.tracing.TraceFilter.addTraceHeadersToResponse(TraceFilter.java:113)
	at com.citi.tts.api.gateway.tracing.TraceFilter.lambda$filter$0(TraceFilter.java:69)
	at reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.runFinally(FluxDoFinally.java:146)
	at reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete(FluxDoFinally.java:129)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at io.github.resilience4j.reactor.circuitbreaker.operator.CircuitBreakerSubscriber.hookOnComplete(CircuitBreakerSubscriber.java:69)
	at reactor.core.publisher.BaseSubscriber.onComplete(BaseSubscriber.java:197)
	at reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete(FluxDoFinally.java:128)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:210)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onComplete(MonoPeekTerminal.java:299)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onComplete(MonoPeekTerminal.java:299)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onError(MonoPeekTerminal.java:258)
	at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.FluxUsingWhen.subscribe(FluxUsingWhen.java:98)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onError(MonoIgnoreThen.java:280)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:205)
	at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
	at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:229)
	at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:279)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.maybeOnError(FluxConcatMapNoPrefetch.java:327)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onNext(FluxConcatMapNoPrefetch.java:212)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
	at reactor.core.publisher.SinkManyEmitterProcessor.drain(SinkManyEmitterProcessor.java:476)
	at reactor.core.publisher.SinkManyEmitterProcessor$EmitterInner.drainParent(SinkManyEmitterProcessor.java:620)
	at reactor.core.publisher.FluxPublish$PubSubInner.request(FluxPublish.java:874)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
	at reactor.core.publisher.Operators$DeferredSubscription.request(Operators.java:1742)
	at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:196)
	at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:205)
	at reactor.netty.http.client.HttpClientConnect$HttpObserver.onUncaughtException(HttpClientConnect.java:417)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onUncaughtException(ReactorNetty.java:715)
	at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onUncaughtException(DefaultPooledConnectionProvider.java:225)
	at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnection.onUncaughtException(DefaultPooledConnectionProvider.java:478)
	at reactor.netty.http.client.HttpClientOperations.onOutboundError(HttpClientOperations.java:693)
	at reactor.netty.channel.ChannelOperations.onError(ChannelOperations.java:272)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onError(MonoIgnoreThen.java:280)
	at reactor.netty.channel.MonoSendMany$SendManyInner.run(MonoSendMany.java:352)
	at reactor.netty.channel.MonoSendMany$SendManyInner.trySchedule(MonoSendMany.java:434)
	at reactor.netty.channel.MonoSendMany$SendManyInner.onError(MonoSendMany.java:199)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onError(MonoFlatMapMany.java:256)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:106)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
	at reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.onError(FluxTimeout.java:220)
	at reactor.core.publisher.MonoCallable$MonoCallableSubscription.request(MonoCallable.java:145)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.SerializedSubscriber.request(SerializedSubscriber.java:151)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onSubscribe(FluxOnErrorResume.java:74)
	at reactor.core.publisher.SerializedSubscriber.onSubscribe(SerializedSubscriber.java:65)
	at reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.onSubscribe(FluxTimeout.java:155)
	at reactor.core.publisher.MonoCallable.subscribe(MonoCallable.java:48)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext(MonoFlatMapMany.java:196)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
	at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2096)
	at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
	at reactor.netty.channel.FluxReceive.terminateReceiver(FluxReceive.java:481)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:273)
	at reactor.netty.channel.FluxReceive.request(FluxReceive.java:131)
	at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:164)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.request(FluxPeek.java:138)
	at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:164)
	at reactor.core.publisher.Operators$BaseFluxToMonoOperator.request(Operators.java:2066)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.request(FluxFilterFuseable.java:411)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.request(FluxMapFuseable.java:360)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onSubscribe(MonoFlatMapMany.java:141)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onSubscribe(FluxContextWrite.java:101)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onSubscribe(FluxMapFuseable.java:265)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onSubscribe(FluxFilterFuseable.java:305)
	at reactor.core.publisher.Operators$BaseFluxToMonoOperator.onSubscribe(Operators.java:2050)
	at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onSubscribe(FluxPeek.java:171)
	at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
	at reactor.netty.channel.FluxReceive.startReceiver(FluxReceive.java:170)
	at reactor.netty.channel.FluxReceive.subscribe(FluxReceive.java:145)
	at reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:68)
	at reactor.netty.ByteBufFlux.subscribe(ByteBufFlux.java:340)
	at reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:68)
	at reactor.netty.ByteBufFlux.subscribe(ByteBufFlux.java:340)
	at reactor.core.publisher.Flux.subscribe(Flux.java:8891)
	at reactor.netty.channel.MonoSendMany.subscribe(MonoSendMany.java:102)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.netty.FutureMono.doSubscribe(FutureMono.java:122)
	at reactor.netty.FutureMono$DeferredFutureMono.subscribe(FutureMono.java:114)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.netty.NettyOutbound.subscribe(NettyOutbound.java:336)
	at reactor.core.publisher.MonoSource.subscribe(MonoSource.java:68)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.netty.http.client.HttpClientConnect$HttpIOHandlerObserver.onStateChange(HttpClientConnect.java:459)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onStateChange(DefaultPooledConnectionProvider.java:207)
	at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnection.onStateChange(DefaultPooledConnectionProvider.java:468)
	at reactor.netty.channel.ChannelOperationsHandler.channelActive(ChannelOperationsHandler.java:62)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:260)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:238)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:231)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelActive(CombinedChannelDuplexHandler.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelActive(ChannelInboundHandlerAdapter.java:69)
	at io.netty.channel.CombinedChannelDuplexHandler.channelActive(CombinedChannelDuplexHandler.java:211)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:260)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:238)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:231)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelActive(DefaultChannelPipeline.java:1345)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:258)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:238)
	at io.netty.channel.DefaultChannelPipeline.fireChannelActive(DefaultChannelPipeline.java:844)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:310)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:340)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-06-30 22:29:49 [reactor-http-nio-7] DEBUG r.n.r.DefaultPooledConnectionProvider - [388151c4, L:/127.0.0.1:61022 - R:localhost/127.0.0.1:8081] onStateChange(POST{uri=/api/payment/process, connection=PooledConnection{channel=[id: 0x388151c4, L:/127.0.0.1:61022 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-06-30 22:29:49 [reactor-http-nio-7] DEBUG r.n.r.DefaultPooledConnectionProvider - [388151c4, L:/127.0.0.1:61022 - R:localhost/127.0.0.1:8081] onStateChange(POST{uri=/api/payment/process, connection=PooledConnection{channel=[id: 0x388151c4, L:/127.0.0.1:61022 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-06-30 22:29:49 [reactor-http-nio-7] DEBUG r.n.r.PooledConnectionProvider - [388151c4, L:/127.0.0.1:61022 ! R:localhost/127.0.0.1:8081] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-06-30 22:29:49 [reactor-http-nio-7] DEBUG r.n.r.DefaultPooledConnectionProvider - [388151c4, L:/127.0.0.1:61022 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x388151c4, L:/127.0.0.1:61022 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-06-30 22:30:03 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Performing periodic health check
2025-06-30 22:30:17 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.netty.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-06-30 22:30:17 [netty-shutdown] DEBUG r.netty.transport.ServerTransport - [ccfd023b, L:/[0:0:0:0:0:0:0:0]:8080] Server is about to be disposed with timeout: PT2562047H47M16.854775807S
2025-06-30 22:30:17 [netty-shutdown] INFO  o.s.b.w.e.netty.GracefulShutdown - Graceful shutdown complete
2025-06-30 22:30:17 [SpringApplicationShutdownHook] DEBUG r.netty.transport.ServerTransport - [ccfd023b, L:/[0:0:0:0:0:0:0:0]:8080] Server has been disposed
2025-06-30 22:30:20 [SpringApplicationShutdownHook] INFO  c.c.t.a.g.t.ReactiveTraceScheduler - Stopping reactive trace scheduler
2025-06-30 22:30:20 [SpringApplicationShutdownHook] INFO  c.c.t.a.g.audit.AsyncAuditService - Shutting down async audit service...
2025-06-30 22:30:25 [SpringApplicationShutdownHook] INFO  c.c.t.a.g.audit.AsyncAuditService - Async audit service shutdown completed
2025-06-30 22:30:25 [async-audit-worker] INFO  c.c.t.a.g.audit.AsyncAuditService - Async audit log processor stopped
2025-06-30 22:30:30 [main] INFO  c.c.t.api.gateway.GatewayApplication - Starting GatewayApplication using Java 21.0.7 with PID 69758 (/Users/ouyangbaobao/gateway/build/classes/java/main started by ouyangbaobao in /Users/ouyangbaobao/gateway)
2025-06-30 22:30:30 [main] DEBUG c.c.t.api.gateway.GatewayApplication - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-06-30 22:30:30 [main] INFO  c.c.t.api.gateway.GatewayApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-30 22:30:31 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:30:31 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:30:31 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:30:31 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:30:31 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:30:31 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:30:31 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:30:31 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:30:31 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:30:31 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:30:31 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:30:31 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:30:31 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:30:31 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:30:31 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:30:31 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:30:31 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:30:31 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:30:31 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:30:31 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:30:31 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:30:32 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-30 22:30:32 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-30 22:30:32 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 35 ms. Found 0 Redis repository interfaces.
2025-06-30 22:30:32 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=f4b1e6f6-9484-3bc8-a690-d233cc88f213
2025-06-30 22:30:33 [async-audit-worker] INFO  c.c.t.a.g.audit.AsyncAuditService - Async audit log processor started
2025-06-30 22:30:33 [main] INFO  c.c.t.a.g.audit.AsyncAuditService - Async audit service initialized - batchSize: 100, flushInterval: 5000ms, queueSize: 10000
2025-06-30 22:30:33 [main] INFO  c.c.t.a.g.config.WebClientConfig - Created optimized WebClient: normal-service - maxConnections: 8, maxIdleConnections: 3, connectTimeout: 2500ms, readTimeout: 5000ms, writeTimeout: 3000ms
2025-06-30 22:30:33 [main] INFO  c.c.t.a.g.config.RateLimitConfig - === 限流配置验证 ===
2025-06-30 22:30:33 [main] INFO  c.c.t.a.g.config.RateLimitConfig - 全局默认QPS: 80, Burst: 120
2025-06-30 22:30:33 [main] INFO  c.c.t.a.g.config.RateLimitConfig - IP限流: 30 QPS, 50 Burst, 启用: true
2025-06-30 22:30:33 [main] INFO  c.c.t.a.g.config.RateLimitConfig - 用户限流: 20 QPS, 35 Burst, 启用: true
2025-06-30 22:30:33 [main] INFO  c.c.t.a.g.config.RateLimitConfig - URL限流: 40 QPS, 60 Burst, 启用: true
2025-06-30 22:30:33 [main] INFO  c.c.t.a.g.config.RateLimitConfig - API权重限流启用: true
2025-06-30 22:30:33 [main] INFO  c.c.t.a.g.config.RateLimitConfig - API权重总QPS: 110 (允许轻微超载)
2025-06-30 22:30:33 [main] INFO  c.c.t.a.g.config.RateLimitConfig - === 限流配置验证完成 ===
2025-06-30 22:30:33 [main] INFO  c.c.t.a.g.services.ApiRoutingService - API priority map initialized with 15 entries
2025-06-30 22:30:33 [main] INFO  c.c.t.a.g.config.RateLimitConfig - === 限流配置验证 ===
2025-06-30 22:30:33 [main] INFO  c.c.t.a.g.config.RateLimitConfig - 全局默认QPS: 80, Burst: 120
2025-06-30 22:30:33 [main] INFO  c.c.t.a.g.config.RateLimitConfig - IP限流: 30 QPS, 50 Burst, 启用: true
2025-06-30 22:30:33 [main] INFO  c.c.t.a.g.config.RateLimitConfig - 用户限流: 20 QPS, 35 Burst, 启用: true
2025-06-30 22:30:33 [main] INFO  c.c.t.a.g.config.RateLimitConfig - URL限流: 40 QPS, 60 Burst, 启用: true
2025-06-30 22:30:33 [main] INFO  c.c.t.a.g.config.RateLimitConfig - API权重限流启用: true
2025-06-30 22:30:33 [main] INFO  c.c.t.a.g.config.RateLimitConfig - API权重总QPS: 110 (允许轻微超载)
2025-06-30 22:30:33 [main] INFO  c.c.t.a.g.config.RateLimitConfig - === 限流配置验证完成 ===
2025-06-30 22:30:34 [main] INFO  c.c.t.a.g.config.WebClientConfig - Created optimized WebClient: default - maxConnections: 6, maxIdleConnections: 2, connectTimeout: 2000ms, readTimeout: 5000ms, writeTimeout: 3000ms
2025-06-30 22:30:34 [main] INFO  c.c.t.a.g.config.WebClientConfig - Created optimized WebClient: core-service - maxConnections: 25, maxIdleConnections: 8, connectTimeout: 1500ms, readTimeout: 3000ms, writeTimeout: 2000ms
2025-06-30 22:30:34 [main] INFO  c.c.t.a.g.config.WebClientConfig - Created optimized WebClient: important-service - maxConnections: 15, maxIdleConnections: 5, connectTimeout: 2000ms, readTimeout: 4000ms, writeTimeout: 2500ms
2025-06-30 22:30:34 [main] INFO  c.c.t.a.g.config.WebClientConfig - Created optimized WebClient: non-core-service - maxConnections: 4, maxIdleConnections: 2, connectTimeout: 3000ms, readTimeout: 8000ms, writeTimeout: 4000ms
2025-06-30 22:30:34 [main] INFO  c.c.t.a.g.t.ReactiveTraceScheduler - Starting reactive trace scheduler
2025-06-30 22:30:34 [main] DEBUG o.s.c.g.f.f.c.LocalResponseCacheProperties - No TTL configuration found. Default TTL will be applied for cache entries: PT5M minutes
2025-06-30 22:30:34 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [After]
2025-06-30 22:30:34 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Before]
2025-06-30 22:30:34 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Between]
2025-06-30 22:30:34 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Cookie]
2025-06-30 22:30:34 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Header]
2025-06-30 22:30:34 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Host]
2025-06-30 22:30:34 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Method]
2025-06-30 22:30:34 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Path]
2025-06-30 22:30:34 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Query]
2025-06-30 22:30:34 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [ReadBody]
2025-06-30 22:30:34 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [RemoteAddr]
2025-06-30 22:30:34 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [XForwardedRemoteAddr]
2025-06-30 22:30:34 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Weight]
2025-06-30 22:30:34 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [CloudFoundryRouteService]
2025-06-30 22:30:35 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 5 endpoints beneath base path '/actuator'
2025-06-30 22:30:35 [main] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default LoopResources: DefaultLoopResources {prefix=reactor-http, daemon=true, selectCount=8, workerCount=8}
2025-06-30 22:30:35 [main] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default ConnectionProvider: reactor.netty.resources.DefaultPooledConnectionProvider@5bb661e0
2025-06-30 22:30:35 [main] DEBUG r.netty.resources.DefaultLoopIOUring - Default io_uring support : false
2025-06-30 22:30:35 [main] DEBUG r.netty.resources.DefaultLoopEpoll - Default Epoll support : false
2025-06-30 22:30:35 [main] DEBUG r.netty.resources.DefaultLoopKQueue - Default KQueue support : false
2025-06-30 22:30:36 [reactor-http-nio-1] DEBUG r.netty.transport.ServerTransport - [cd62d4c5, L:/[0:0:0:0:0:0:0:0]:8080] Bound new server
2025-06-30 22:30:36 [main] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port 8080 (http)
2025-06-30 22:30:36 [scheduling-1] DEBUG c.c.t.a.g.c.ReleaseValidationConfig - Executing auto step traffic scheduler
2025-06-30 22:30:36 [scheduling-1] DEBUG c.c.t.a.g.c.ReleaseValidationConfig - Executing release strategy health check
2025-06-30 22:30:36 [scheduling-1] DEBUG c.c.t.a.g.c.ReleaseValidationConfig - Executing cleanup completed strategies
2025-06-30 22:30:36 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Cleaning up expired instances
2025-06-30 22:30:36 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Performing periodic health check
2025-06-30 22:30:36 [scheduling-1] INFO  c.c.t.a.g.s.QPSCleanupScheduler - === QPS Summary Report ===
2025-06-30 22:30:36 [main] DEBUG o.s.c.g.filter.GatewayMetricsFilter - New routes count: 0
2025-06-30 22:30:36 [scheduling-1] INFO  c.c.t.a.g.s.QPSCleanupScheduler - Global QPS: 0
2025-06-30 22:30:36 [scheduling-1] INFO  c.c.t.a.g.s.QPSCleanupScheduler - Active APIs: 0
2025-06-30 22:30:36 [scheduling-1] INFO  c.c.t.a.g.s.QPSCleanupScheduler - Active IPs: 0
2025-06-30 22:30:36 [scheduling-1] INFO  c.c.t.a.g.s.QPSCleanupScheduler - Active Users: 0
2025-06-30 22:30:36 [scheduling-1] INFO  c.c.t.a.g.s.QPSCleanupScheduler - Active Priorities: 0
2025-06-30 22:30:36 [scheduling-1] INFO  c.c.t.a.g.s.QPSCleanupScheduler - === End QPS Summary Report ===
2025-06-30 22:30:36 [scheduling-1] DEBUG c.c.t.a.g.s.QPSCleanupScheduler - Starting scheduled QPS data cleanup...
2025-06-30 22:30:36 [scheduling-1] INFO  c.c.t.api.gateway.metrics.QPSMetrics - Manual cleanup completed. Total cleaned: 0, Active entries: API=0, IP=0, User=0, Priority=0
2025-06-30 22:30:36 [scheduling-1] DEBUG c.c.t.a.g.s.QPSCleanupScheduler - Scheduled QPS data cleanup completed
2025-06-30 22:30:36 [main] INFO  c.c.t.api.gateway.GatewayApplication - Started GatewayApplication in 6.67 seconds (process running for 9.05)
2025-06-30 22:30:36 [scheduling-1] INFO  c.c.t.a.g.t.AdaptiveTraceScheduler - Adaptive Trace Statistics - Manager: Total=0, Sampled=0, Active=0, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0, Multiplier: 1.0
2025-06-30 22:30:36 [scheduling-1] DEBUG c.c.t.a.g.t.AdaptiveTraceScheduler - Adaptive trace cleanup completed - No traces cleaned, Duration: 1ms, Multiplier: 1.0
2025-06-30 22:30:36 [scheduling-1] INFO  c.c.t.a.g.tracing.TraceScheduler - Trace Statistics - Manager: Total=0, Sampled=0, Active=0, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0
2025-06-30 22:30:36 [scheduling-1] DEBUG c.c.t.a.g.tracing.TraceScheduler - Scheduled trace cleanup completed - No traces cleaned, Duration: 0ms
2025-06-30 22:30:57 [reactor-http-nio-2] DEBUG r.n.http.server.HttpServerOperations - [a01ae771, L:/127.0.0.1:8080 - R:/127.0.0.1:61162] New http connection, requesting read
2025-06-30 22:30:57 [reactor-http-nio-2] DEBUG r.netty.transport.TransportConfig - [a01ae771, L:/127.0.0.1:8080 - R:/127.0.0.1:61162] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpServerCodec), (reactor.left.httpTrafficHandler = reactor.netty.http.server.HttpTrafficHandler), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-06-30 22:30:57 [reactor-http-nio-2] DEBUG r.n.http.server.HttpServerOperations - [a01ae771, L:/127.0.0.1:8080 - R:/127.0.0.1:61162] Increasing pending responses count: 1
2025-06-30 22:30:57 [reactor-http-nio-2] DEBUG r.netty.http.server.HttpServer - [a01ae771-1, L:/127.0.0.1:8080 - R:/127.0.0.1:61162] Handler is being applied: org.springframework.http.server.reactive.ReactorHttpHandlerAdapter@1d080d0b
2025-06-30 22:30:57 [reactor-http-nio-2] DEBUG o.s.c.g.h.RoutePredicateHandlerMapping - Route matched: payment-route
2025-06-30 22:30:57 [reactor-http-nio-2] DEBUG o.s.c.g.h.RoutePredicateHandlerMapping - Mapping [Exchange: POST http://localhost:8080/api/gateway/payment/process] to Route{id='payment-route', uri=http://localhost:8081, order=0, predicate=Paths: [/api/gateway/payment/**], match trailing slash: true, gatewayFilters=[[[RewritePath /api/gateway/payment/(?<segment>.*) = '/api/payment/${segment}'], order = 0], com.citi.tts.api.gateway.filter.AdvancedRateLimitFilter@35d4035f, [com.citi.tts.api.gateway.filter.ServiceDegradationGatewayFilter$1@64af78fc, order = 0], com.citi.tts.api.gateway.filter.CircuitBreakerFilter@5cc669d, [com.citi.tts.api.gateway.filter.CryptoFilter@dd77e0d, order = 0]], metadata={}}
2025-06-30 22:30:57 [reactor-http-nio-2] DEBUG o.s.c.g.h.RoutePredicateHandlerMapping - [a01ae771-1] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@4154ecd3
2025-06-30 22:30:57 [reactor-http-nio-2] DEBUG o.s.c.g.handler.FilteringWebHandler - Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@797ee1a9}, order = -2147483648], [GatewayFilterAdapter{delegate=com.citi.tts.api.gateway.tracing.TraceFilter@a6204e4}, order = -2147483598], com.citi.tts.api.gateway.filter.AdvancedRateLimitFilter@35d4035f, [GatewayFilterAdapter{delegate=com.citi.tts.api.gateway.filter.QPSMetricsFilter@7bd1098}, order = -2147483548], com.citi.tts.api.gateway.filter.CircuitBreakerFilter@5cc669d, [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@600e2000}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@53f1fcc2}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@49c947f7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@2823b7c5}, order = 0], [[RewritePath /api/gateway/payment/(?<segment>.*) = '/api/payment/${segment}'], order = 0], [com.citi.tts.api.gateway.filter.ServiceDegradationGatewayFilter$1@64af78fc, order = 0], [com.citi.tts.api.gateway.filter.CryptoFilter@dd77e0d, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@5f190cfe}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ReactiveLoadBalancerClientFilter@57806346}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.LoadBalancerServiceInstanceCookieFilter@3ab70d34}, order = 10151], [GatewayFilterAdapter{delegate=com.citi.tts.api.gateway.filter.ServiceDegradationFilter@581d5b33}, order = 2147483547], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@6ca30886}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@4feaa4b8}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@585672dd}, order = 2147483647]]
2025-06-30 22:30:57 [reactor-http-nio-2] DEBUG c.c.t.a.gateway.tracing.TraceContext - Created root trace context: 8e9fc70281a04364bf86f4500ad6eedc
2025-06-30 22:30:57 [reactor-http-nio-2] DEBUG c.c.t.a.gateway.tracing.TraceManager - Created new sampled trace context: 8e9fc70281a04364bf86f4500ad6eedc
2025-06-30 22:31:09 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Performing periodic health check
2025-06-30 22:31:19 [reactor-http-nio-2] DEBUG c.c.t.a.g.f.AdvancedRateLimitFilter - Processing rate limit for: POST /api/gateway/payment/process from IP: 127.0.0.1, User: null
2025-06-30 22:31:36 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Cleaning up expired instances
2025-06-30 22:31:39 [boundedElastic-1] INFO  c.c.t.a.g.t.ReactiveTraceScheduler - Reactive Trace Statistics - Manager: Total=1, Sampled=1, Active=1, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0
2025-06-30 22:31:40 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Performing periodic health check
2025-06-30 22:31:41 [scheduling-1] DEBUG c.c.t.a.g.s.QPSCleanupScheduler - Starting scheduled QPS data cleanup...
2025-06-30 22:31:43 [scheduling-1] INFO  c.c.t.api.gateway.metrics.QPSMetrics - Manual cleanup completed. Total cleaned: 0, Active entries: API=0, IP=0, User=0, Priority=0
2025-06-30 22:31:43 [scheduling-1] DEBUG c.c.t.a.g.s.QPSCleanupScheduler - Scheduled QPS data cleanup completed
2025-06-30 22:31:47 [scheduling-1] INFO  c.c.t.a.g.t.AdaptiveTraceScheduler - Adaptive Trace Statistics - Manager: Total=1, Sampled=1, Active=1, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0, Multiplier: 1.0
2025-06-30 22:31:47 [scheduling-1] INFO  c.c.t.a.g.tracing.TraceScheduler - Trace Statistics - Manager: Total=1, Sampled=1, Active=1, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0
2025-06-30 22:32:08 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Performing periodic health check
2025-06-30 22:32:13 [reactor-http-nio-2] DEBUG c.c.t.a.g.l.AdvancedRateLimiter - Token acquired for api_weight:NON_CORE: 1 tokens consumed, 14 remaining
2025-06-30 22:32:22 [reactor-http-nio-2] WARN  c.c.t.a.g.f.AdvancedRateLimitFilter - Rate limit processing took 47411ms for path: /api/gateway/payment/process
2025-06-30 22:32:26 [reactor-http-nio-2] DEBUG c.c.t.a.g.filter.QPSMetricsFilter - QPS recorded - Path: /api/gateway/payment/process, IP: 127.0.0.1, User: anonymous, Priority: default
2025-06-30 22:32:26 [reactor-http-nio-2] DEBUG c.c.t.a.g.f.CircuitBreakerFilter - Using circuit breaker for API: /api/gateway/payment/process with priority: NON_CORE
2025-06-30 22:32:26 [reactor-http-nio-2] DEBUG c.c.t.a.g.f.ServiceDegradationGatewayFilter - Service degradation filter - Service: payment-service, Path: /api/payment/process, Level: CORE
2025-06-30 22:32:26 [reactor-http-nio-2] DEBUG c.c.t.a.gateway.filter.CryptoFilter - crupto filter is coming
2025-06-30 22:32:35 [boundedElastic-2] INFO  c.c.t.a.g.t.ReactiveTraceScheduler - Reactive Trace Statistics - Manager: Total=1, Sampled=1, Active=1, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0
2025-06-30 22:32:36 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Cleaning up expired instances
2025-06-30 22:32:36 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Performing periodic health check
2025-06-30 22:32:37 [scheduling-1] DEBUG c.c.t.a.g.s.QPSCleanupScheduler - Starting scheduled QPS data cleanup...
2025-06-30 22:32:37 [scheduling-1] INFO  c.c.t.api.gateway.metrics.QPSMetrics - Manual cleanup completed. Total cleaned: 0, Active entries: API=1, IP=1, User=1, Priority=1
2025-06-30 22:32:37 [reactor-http-nio-2] DEBUG c.c.t.a.g.f.ServiceDegradationFilter - Service degradation filter - Service: api, Path: /api/payment/process, Level: CORE
2025-06-30 22:32:37 [scheduling-1] DEBUG c.c.t.a.g.s.QPSCleanupScheduler - Scheduled QPS data cleanup completed
2025-06-30 22:32:42 [reactor-http-nio-2] DEBUG o.s.c.g.f.h.o.ObservedRequestHttpHeadersFilter - Will instrument the HTTP request headers [Content-Type:"application/json", Content-Length:"16", User-Agent:"IntelliJ HTTP Client/IntelliJ IDEA 2025.1.3", Accept-Encoding:"br, deflate, gzip, x-gzip", Accept:"*/*", host:"localhost:8080", X-Span-ID:"32a57eb47f07411a", X-Request-ID:"65c2cb07-de3f-4adb-aef6-0c350596bc02", X-Correlation-ID:"null", X-Trace-ID:"8e9fc70281a04364bf86f4500ad6eedc", X-Sampled:"true"]
2025-06-30 22:32:42 [reactor-http-nio-2] DEBUG o.s.c.g.f.h.o.ObservedRequestHttpHeadersFilter - Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='payment-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://localhost:8080/api/payment/process'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.003208958, duration(nanos)=3208958.0, startTimeNanos=161909962534750}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@723503f5'], parentObservation={name=http.server.requests(null), error=null, context=name='http.server.requests', contextualName='null', error='null', lowCardinalityKeyValues=[exception='none', method='POST', outcome='SUCCESS', status='200', uri='UNKNOWN'], highCardinalityKeyValues=[http.url='/api/gateway/payment/process'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=105.010486584, duration(nanos)=1.05010486584E11, startTimeNanos=161804955692666}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@4874f06'], parentObservation=null}} created for the request. New headers are [Content-Type:"application/json", Content-Length:"16", User-Agent:"IntelliJ HTTP Client/IntelliJ IDEA 2025.1.3", Accept-Encoding:"br, deflate, gzip, x-gzip", Accept:"*/*", host:"localhost:8080", X-Span-ID:"32a57eb47f07411a", X-Request-ID:"65c2cb07-de3f-4adb-aef6-0c350596bc02", X-Correlation-ID:"null", X-Trace-ID:"8e9fc70281a04364bf86f4500ad6eedc", X-Sampled:"true"]
2025-06-30 22:32:42 [reactor-http-nio-2] DEBUG r.n.r.PooledConnectionProvider - Creating a new [proxy] client pool [PoolFactory{evictionInterval=PT0S, leasingStrategy=fifo, maxConnections=2147483647, maxIdleTime=-1, maxLifeTime=-1, metricsEnabled=false, pendingAcquireMaxCount=-1, pendingAcquireTimeout=0}] for [localhost/<unresolved>:8081]
2025-06-30 22:32:42 [reactor-http-nio-2] DEBUG r.n.r.PooledConnectionProvider - [4226917b] Created a new pooled channel, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-06-30 22:32:42 [reactor-http-nio-2] DEBUG r.netty.transport.TransportConfig - [4226917b] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-06-30 22:32:42 [reactor-http-nio-2] DEBUG r.netty.transport.TransportConnector - [4226917b] Connecting to [localhost/127.0.0.1:8081].
2025-06-30 22:32:42 [reactor-http-nio-2] DEBUG r.n.r.DefaultPooledConnectionProvider - [4226917b, L:/127.0.0.1:61364 - R:localhost/127.0.0.1:8081] Registering pool release on close event for channel
2025-06-30 22:32:42 [reactor-http-nio-2] DEBUG r.n.r.PooledConnectionProvider - [4226917b, L:/127.0.0.1:61364 - R:localhost/127.0.0.1:8081] Channel connected, now: 1 active connections, 0 inactive connections 0 pending acquire requests.
2025-06-30 22:32:42 [reactor-http-nio-2] DEBUG r.n.r.DefaultPooledConnectionProvider - [4226917b, L:/127.0.0.1:61364 - R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x4226917b, L:/127.0.0.1:61364 - R:localhost/127.0.0.1:8081]}, [connected])
2025-06-30 22:32:42 [reactor-http-nio-2] DEBUG r.n.r.DefaultPooledConnectionProvider - [4226917b-1, L:/127.0.0.1:61364 - R:localhost/127.0.0.1:8081] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x4226917b, L:/127.0.0.1:61364 - R:localhost/127.0.0.1:8081]}}, [configured])
2025-06-30 22:32:42 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientConnect - [4226917b-1, L:/127.0.0.1:61364 - R:localhost/127.0.0.1:8081] Handler is being applied: {uri=http://localhost:8081/api/payment/process, method=POST}
2025-06-30 22:32:42 [reactor-http-nio-2] DEBUG r.n.r.DefaultPooledConnectionProvider - [4226917b-1, L:/127.0.0.1:61364 - R:localhost/127.0.0.1:8081] onStateChange(POST{uri=/api/payment/process, connection=PooledConnection{channel=[id: 0x4226917b, L:/127.0.0.1:61364 - R:localhost/127.0.0.1:8081]}}, [request_prepared])
2025-06-30 22:32:42 [reactor-http-nio-2] DEBUG reactor.netty.channel.FluxReceive - [a01ae771-1, L:/127.0.0.1:8080 ! R:/127.0.0.1:61162] [terminated=true, cancelled=false, pending=1, error=null]: subscribing inbound receiver
2025-06-30 22:32:42 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [4226917b-1, L:/127.0.0.1:61364 - R:localhost/127.0.0.1:8081] Outbound error happened
java.lang.RuntimeException: 解密失败: Cannot invoke "String.hashCode()" because "key" is null
	at com.citi.tts.api.gateway.crypto.ReactiveAESService.lambda$decrypt$3(ReactiveAESService.java:19)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.MonoError] :
	reactor.core.publisher.Mono.error(Mono.java:299)
	com.citi.tts.api.gateway.crypto.ReactiveAESService.lambda$decrypt$3(ReactiveAESService.java:19)
Error has been observed at the following site(s):
	*__________Mono.error ⇢ at com.citi.tts.api.gateway.crypto.ReactiveAESService.lambda$decrypt$3(ReactiveAESService.java:19)
	*__Mono.onErrorResume ⇢ at com.citi.tts.api.gateway.crypto.ReactiveAESService.decrypt(ReactiveAESService.java:18)
	|_           Mono.map ⇢ at com.citi.tts.api.gateway.filter.CryptoFilter$1.lambda$getBody$1(CryptoFilter.java:46)
	*____Mono.flatMapMany ⇢ at com.citi.tts.api.gateway.filter.CryptoFilter$1.getBody(CryptoFilter.java:40)
	|_           Flux.map ⇢ at org.springframework.cloud.gateway.filter.NettyRoutingFilter.lambda$filter$2(NettyRoutingFilter.java:147)
	*______Mono.thenEmpty ⇢ at reactor.netty.ReactorNetty$OutboundThen.<init>(ReactorNetty.java:757)
	*_____Mono.fromDirect ⇢ at reactor.netty.http.client.HttpClientConnect$HttpIOHandlerObserver.lambda$onStateChange$0(HttpClientConnect.java:458)
	*__________Mono.defer ⇢ at reactor.netty.http.client.HttpClientConnect$HttpIOHandlerObserver.onStateChange(HttpClientConnect.java:458)
Original Stack Trace:
		at com.citi.tts.api.gateway.crypto.ReactiveAESService.lambda$decrypt$3(ReactiveAESService.java:19)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:94)
		at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
		at reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.onError(FluxTimeout.java:220)
		at reactor.core.publisher.MonoCallable$MonoCallableSubscription.request(MonoCallable.java:145)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
		at reactor.core.publisher.SerializedSubscriber.request(SerializedSubscriber.java:151)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onSubscribe(FluxOnErrorResume.java:74)
		at reactor.core.publisher.SerializedSubscriber.onSubscribe(SerializedSubscriber.java:65)
		at reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.onSubscribe(FluxTimeout.java:155)
		at reactor.core.publisher.MonoCallable.subscribe(MonoCallable.java:48)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext(MonoFlatMapMany.java:196)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2096)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onComplete(FluxMapFuseable.java:152)
		at reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onComplete(FluxPeekFuseable.java:277)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.terminateReceiver(FluxReceive.java:481)
		at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:273)
		at reactor.netty.channel.FluxReceive.request(FluxReceive.java:131)
		at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:164)
		at reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request(FluxPeekFuseable.java:144)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.request(Operators.java:2066)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.request(FluxFilterFuseable.java:411)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.request(FluxMapFuseable.java:360)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onSubscribe(MonoFlatMapMany.java:141)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onSubscribe(FluxContextWrite.java:101)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onSubscribe(FluxMapFuseable.java:265)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onSubscribe(FluxFilterFuseable.java:305)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.onSubscribe(Operators.java:2050)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:96)
		at reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe(FluxPeekFuseable.java:178)
		at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
		at reactor.netty.channel.FluxReceive.startReceiver(FluxReceive.java:170)
		at reactor.netty.channel.FluxReceive.subscribe(FluxReceive.java:145)
		at reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:68)
		at reactor.netty.ByteBufFlux.subscribe(ByteBufFlux.java:340)
		at reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:68)
		at reactor.netty.ByteBufFlux.subscribe(ByteBufFlux.java:340)
		at reactor.core.publisher.Flux.subscribe(Flux.java:8891)
		at reactor.netty.channel.MonoSendMany.subscribe(MonoSendMany.java:102)
		at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
		at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
		at reactor.core.publisher.Operators.complete(Operators.java:137)
		at reactor.netty.FutureMono.doSubscribe(FutureMono.java:122)
		at reactor.netty.FutureMono$DeferredFutureMono.subscribe(FutureMono.java:114)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
		at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
		at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
		at reactor.netty.NettyOutbound.subscribe(NettyOutbound.java:336)
		at reactor.core.publisher.MonoSource.subscribe(MonoSource.java:68)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
		at reactor.netty.http.client.HttpClientConnect$HttpIOHandlerObserver.onStateChange(HttpClientConnect.java:459)
		at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
		at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onStateChange(DefaultPooledConnectionProvider.java:207)
		at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnection.onStateChange(DefaultPooledConnectionProvider.java:468)
		at reactor.netty.channel.ChannelOperationsHandler.channelActive(ChannelOperationsHandler.java:62)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:260)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:238)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:231)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelActive(CombinedChannelDuplexHandler.java:412)
		at io.netty.channel.ChannelInboundHandlerAdapter.channelActive(ChannelInboundHandlerAdapter.java:69)
		at io.netty.channel.CombinedChannelDuplexHandler.channelActive(CombinedChannelDuplexHandler.java:211)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:260)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:238)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:231)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelActive(DefaultChannelPipeline.java:1345)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:258)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:238)
		at io.netty.channel.DefaultChannelPipeline.fireChannelActive(DefaultChannelPipeline.java:844)
		at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:310)
		at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:340)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.lang.NullPointerException: Cannot invoke "String.hashCode()" because "key" is null
	at com.citi.tts.api.gateway.crypto.AES256Util.hastTime(AES256Util.java:33)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.MonoCallable] :
	reactor.core.publisher.Mono.fromCallable(Mono.java:524)
	com.citi.tts.api.gateway.crypto.ReactiveAESService.decrypt(ReactiveAESService.java:16)
Error has been observed at the following site(s):
	*__Mono.fromCallable ⇢ at com.citi.tts.api.gateway.crypto.ReactiveAESService.decrypt(ReactiveAESService.java:16)
	|_      Mono.timeout ⇢ at com.citi.tts.api.gateway.crypto.ReactiveAESService.decrypt(ReactiveAESService.java:17)
Original Stack Trace:
		at com.citi.tts.api.gateway.crypto.AES256Util.hastTime(AES256Util.java:33)
		at com.citi.tts.api.gateway.crypto.AES256Util.decrypt(AES256Util.java:50)
		at com.citi.tts.api.gateway.crypto.ReactiveAESService.lambda$decrypt$2(ReactiveAESService.java:16)
		at reactor.core.publisher.MonoCallable$MonoCallableSubscription.request(MonoCallable.java:137)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
		at reactor.core.publisher.SerializedSubscriber.request(SerializedSubscriber.java:151)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onSubscribe(FluxOnErrorResume.java:74)
		at reactor.core.publisher.SerializedSubscriber.onSubscribe(SerializedSubscriber.java:65)
		at reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.onSubscribe(FluxTimeout.java:155)
		at reactor.core.publisher.MonoCallable.subscribe(MonoCallable.java:48)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext(MonoFlatMapMany.java:196)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2096)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onComplete(FluxMapFuseable.java:152)
		at reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onComplete(FluxPeekFuseable.java:277)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.terminateReceiver(FluxReceive.java:481)
		at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:273)
		at reactor.netty.channel.FluxReceive.request(FluxReceive.java:131)
		at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:164)
		at reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request(FluxPeekFuseable.java:144)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.request(Operators.java:2066)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.request(FluxFilterFuseable.java:411)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.request(FluxMapFuseable.java:360)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onSubscribe(MonoFlatMapMany.java:141)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onSubscribe(FluxContextWrite.java:101)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onSubscribe(FluxMapFuseable.java:265)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onSubscribe(FluxFilterFuseable.java:305)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.onSubscribe(Operators.java:2050)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:96)
		at reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe(FluxPeekFuseable.java:178)
		at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
		at reactor.netty.channel.FluxReceive.startReceiver(FluxReceive.java:170)
		at reactor.netty.channel.FluxReceive.subscribe(FluxReceive.java:145)
		at reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:68)
		at reactor.netty.ByteBufFlux.subscribe(ByteBufFlux.java:340)
		at reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:68)
		at reactor.netty.ByteBufFlux.subscribe(ByteBufFlux.java:340)
		at reactor.core.publisher.Flux.subscribe(Flux.java:8891)
		at reactor.netty.channel.MonoSendMany.subscribe(MonoSendMany.java:102)
		at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
		at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
		at reactor.core.publisher.Operators.complete(Operators.java:137)
		at reactor.netty.FutureMono.doSubscribe(FutureMono.java:122)
		at reactor.netty.FutureMono$DeferredFutureMono.subscribe(FutureMono.java:114)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
		at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
		at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
		at reactor.netty.NettyOutbound.subscribe(NettyOutbound.java:336)
		at reactor.core.publisher.MonoSource.subscribe(MonoSource.java:68)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
		at reactor.netty.http.client.HttpClientConnect$HttpIOHandlerObserver.onStateChange(HttpClientConnect.java:459)
		at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
		at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onStateChange(DefaultPooledConnectionProvider.java:207)
		at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnection.onStateChange(DefaultPooledConnectionProvider.java:468)
		at reactor.netty.channel.ChannelOperationsHandler.channelActive(ChannelOperationsHandler.java:62)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:260)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:238)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:231)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelActive(CombinedChannelDuplexHandler.java:412)
		at io.netty.channel.ChannelInboundHandlerAdapter.channelActive(ChannelInboundHandlerAdapter.java:69)
		at io.netty.channel.CombinedChannelDuplexHandler.channelActive(CombinedChannelDuplexHandler.java:211)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:260)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:238)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:231)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelActive(DefaultChannelPipeline.java:1345)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:258)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:238)
		at io.netty.channel.DefaultChannelPipeline.fireChannelActive(DefaultChannelPipeline.java:844)
		at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:310)
		at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:340)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1583)
2025-06-30 22:32:42 [reactor-http-nio-2] WARN  r.n.http.client.HttpClientConnect - [4226917b-1, L:/127.0.0.1:61364 - R:localhost/127.0.0.1:8081] The connection observed an error
java.lang.RuntimeException: 解密失败: Cannot invoke "String.hashCode()" because "key" is null
	at com.citi.tts.api.gateway.crypto.ReactiveAESService.lambda$decrypt$3(ReactiveAESService.java:19)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.MonoError] :
	reactor.core.publisher.Mono.error(Mono.java:299)
	com.citi.tts.api.gateway.crypto.ReactiveAESService.lambda$decrypt$3(ReactiveAESService.java:19)
Error has been observed at the following site(s):
	*__________Mono.error ⇢ at com.citi.tts.api.gateway.crypto.ReactiveAESService.lambda$decrypt$3(ReactiveAESService.java:19)
	*__Mono.onErrorResume ⇢ at com.citi.tts.api.gateway.crypto.ReactiveAESService.decrypt(ReactiveAESService.java:18)
	|_           Mono.map ⇢ at com.citi.tts.api.gateway.filter.CryptoFilter$1.lambda$getBody$1(CryptoFilter.java:46)
	*____Mono.flatMapMany ⇢ at com.citi.tts.api.gateway.filter.CryptoFilter$1.getBody(CryptoFilter.java:40)
	|_           Flux.map ⇢ at org.springframework.cloud.gateway.filter.NettyRoutingFilter.lambda$filter$2(NettyRoutingFilter.java:147)
	*______Mono.thenEmpty ⇢ at reactor.netty.ReactorNetty$OutboundThen.<init>(ReactorNetty.java:757)
	*_____Mono.fromDirect ⇢ at reactor.netty.http.client.HttpClientConnect$HttpIOHandlerObserver.lambda$onStateChange$0(HttpClientConnect.java:458)
	*__________Mono.defer ⇢ at reactor.netty.http.client.HttpClientConnect$HttpIOHandlerObserver.onStateChange(HttpClientConnect.java:458)
Original Stack Trace:
		at com.citi.tts.api.gateway.crypto.ReactiveAESService.lambda$decrypt$3(ReactiveAESService.java:19)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:94)
		at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
		at reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.onError(FluxTimeout.java:220)
		at reactor.core.publisher.MonoCallable$MonoCallableSubscription.request(MonoCallable.java:145)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
		at reactor.core.publisher.SerializedSubscriber.request(SerializedSubscriber.java:151)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onSubscribe(FluxOnErrorResume.java:74)
		at reactor.core.publisher.SerializedSubscriber.onSubscribe(SerializedSubscriber.java:65)
		at reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.onSubscribe(FluxTimeout.java:155)
		at reactor.core.publisher.MonoCallable.subscribe(MonoCallable.java:48)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext(MonoFlatMapMany.java:196)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2096)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onComplete(FluxMapFuseable.java:152)
		at reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onComplete(FluxPeekFuseable.java:277)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.terminateReceiver(FluxReceive.java:481)
		at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:273)
		at reactor.netty.channel.FluxReceive.request(FluxReceive.java:131)
		at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:164)
		at reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request(FluxPeekFuseable.java:144)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.request(Operators.java:2066)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.request(FluxFilterFuseable.java:411)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.request(FluxMapFuseable.java:360)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onSubscribe(MonoFlatMapMany.java:141)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onSubscribe(FluxContextWrite.java:101)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onSubscribe(FluxMapFuseable.java:265)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onSubscribe(FluxFilterFuseable.java:305)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.onSubscribe(Operators.java:2050)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:96)
		at reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe(FluxPeekFuseable.java:178)
		at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
		at reactor.netty.channel.FluxReceive.startReceiver(FluxReceive.java:170)
		at reactor.netty.channel.FluxReceive.subscribe(FluxReceive.java:145)
		at reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:68)
		at reactor.netty.ByteBufFlux.subscribe(ByteBufFlux.java:340)
		at reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:68)
		at reactor.netty.ByteBufFlux.subscribe(ByteBufFlux.java:340)
		at reactor.core.publisher.Flux.subscribe(Flux.java:8891)
		at reactor.netty.channel.MonoSendMany.subscribe(MonoSendMany.java:102)
		at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
		at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
		at reactor.core.publisher.Operators.complete(Operators.java:137)
		at reactor.netty.FutureMono.doSubscribe(FutureMono.java:122)
		at reactor.netty.FutureMono$DeferredFutureMono.subscribe(FutureMono.java:114)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
		at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
		at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
		at reactor.netty.NettyOutbound.subscribe(NettyOutbound.java:336)
		at reactor.core.publisher.MonoSource.subscribe(MonoSource.java:68)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
		at reactor.netty.http.client.HttpClientConnect$HttpIOHandlerObserver.onStateChange(HttpClientConnect.java:459)
		at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
		at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onStateChange(DefaultPooledConnectionProvider.java:207)
		at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnection.onStateChange(DefaultPooledConnectionProvider.java:468)
		at reactor.netty.channel.ChannelOperationsHandler.channelActive(ChannelOperationsHandler.java:62)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:260)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:238)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:231)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelActive(CombinedChannelDuplexHandler.java:412)
		at io.netty.channel.ChannelInboundHandlerAdapter.channelActive(ChannelInboundHandlerAdapter.java:69)
		at io.netty.channel.CombinedChannelDuplexHandler.channelActive(CombinedChannelDuplexHandler.java:211)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:260)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:238)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:231)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelActive(DefaultChannelPipeline.java:1345)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:258)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:238)
		at io.netty.channel.DefaultChannelPipeline.fireChannelActive(DefaultChannelPipeline.java:844)
		at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:310)
		at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:340)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.lang.NullPointerException: Cannot invoke "String.hashCode()" because "key" is null
	at com.citi.tts.api.gateway.crypto.AES256Util.hastTime(AES256Util.java:33)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.MonoCallable] :
	reactor.core.publisher.Mono.fromCallable(Mono.java:524)
	com.citi.tts.api.gateway.crypto.ReactiveAESService.decrypt(ReactiveAESService.java:16)
Error has been observed at the following site(s):
	*__Mono.fromCallable ⇢ at com.citi.tts.api.gateway.crypto.ReactiveAESService.decrypt(ReactiveAESService.java:16)
	|_      Mono.timeout ⇢ at com.citi.tts.api.gateway.crypto.ReactiveAESService.decrypt(ReactiveAESService.java:17)
Original Stack Trace:
		at com.citi.tts.api.gateway.crypto.AES256Util.hastTime(AES256Util.java:33)
		at com.citi.tts.api.gateway.crypto.AES256Util.decrypt(AES256Util.java:50)
		at com.citi.tts.api.gateway.crypto.ReactiveAESService.lambda$decrypt$2(ReactiveAESService.java:16)
		at reactor.core.publisher.MonoCallable$MonoCallableSubscription.request(MonoCallable.java:137)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
		at reactor.core.publisher.SerializedSubscriber.request(SerializedSubscriber.java:151)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onSubscribe(FluxOnErrorResume.java:74)
		at reactor.core.publisher.SerializedSubscriber.onSubscribe(SerializedSubscriber.java:65)
		at reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.onSubscribe(FluxTimeout.java:155)
		at reactor.core.publisher.MonoCallable.subscribe(MonoCallable.java:48)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext(MonoFlatMapMany.java:196)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2096)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onComplete(FluxMapFuseable.java:152)
		at reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onComplete(FluxPeekFuseable.java:277)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.terminateReceiver(FluxReceive.java:481)
		at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:273)
		at reactor.netty.channel.FluxReceive.request(FluxReceive.java:131)
		at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:164)
		at reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request(FluxPeekFuseable.java:144)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.request(Operators.java:2066)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.request(FluxFilterFuseable.java:411)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.request(FluxMapFuseable.java:360)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onSubscribe(MonoFlatMapMany.java:141)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onSubscribe(FluxContextWrite.java:101)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onSubscribe(FluxMapFuseable.java:265)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onSubscribe(FluxFilterFuseable.java:305)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.onSubscribe(Operators.java:2050)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:96)
		at reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe(FluxPeekFuseable.java:178)
		at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
		at reactor.netty.channel.FluxReceive.startReceiver(FluxReceive.java:170)
		at reactor.netty.channel.FluxReceive.subscribe(FluxReceive.java:145)
		at reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:68)
		at reactor.netty.ByteBufFlux.subscribe(ByteBufFlux.java:340)
		at reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:68)
		at reactor.netty.ByteBufFlux.subscribe(ByteBufFlux.java:340)
		at reactor.core.publisher.Flux.subscribe(Flux.java:8891)
		at reactor.netty.channel.MonoSendMany.subscribe(MonoSendMany.java:102)
		at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
		at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
		at reactor.core.publisher.Operators.complete(Operators.java:137)
		at reactor.netty.FutureMono.doSubscribe(FutureMono.java:122)
		at reactor.netty.FutureMono$DeferredFutureMono.subscribe(FutureMono.java:114)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
		at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
		at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
		at reactor.netty.NettyOutbound.subscribe(NettyOutbound.java:336)
		at reactor.core.publisher.MonoSource.subscribe(MonoSource.java:68)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
		at reactor.netty.http.client.HttpClientConnect$HttpIOHandlerObserver.onStateChange(HttpClientConnect.java:459)
		at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
		at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onStateChange(DefaultPooledConnectionProvider.java:207)
		at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnection.onStateChange(DefaultPooledConnectionProvider.java:468)
		at reactor.netty.channel.ChannelOperationsHandler.channelActive(ChannelOperationsHandler.java:62)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:260)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:238)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:231)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelActive(CombinedChannelDuplexHandler.java:412)
		at io.netty.channel.ChannelInboundHandlerAdapter.channelActive(ChannelInboundHandlerAdapter.java:69)
		at io.netty.channel.CombinedChannelDuplexHandler.channelActive(CombinedChannelDuplexHandler.java:211)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:260)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:238)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:231)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelActive(DefaultChannelPipeline.java:1345)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:258)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:238)
		at io.netty.channel.DefaultChannelPipeline.fireChannelActive(DefaultChannelPipeline.java:844)
		at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:310)
		at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:340)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1583)
2025-06-30 22:32:42 [reactor-http-nio-2] ERROR c.c.t.a.g.f.ServiceDegradationFilter - Service error detected - Service: api, Path: /api/payment/process, Error: 解密失败: Cannot invoke "String.hashCode()" because "key" is null
2025-06-30 22:32:42 [reactor-http-nio-2] INFO  c.c.t.a.g.s.ServiceDegradationService - Service degradation triggered - Service: api, Level: CORE, Error: RuntimeException
2025-06-30 22:32:42 [reactor-http-nio-2] INFO  c.c.t.a.g.s.ServiceDegradationService - Handling CORE service degradation for: api
2025-06-30 22:32:42 [reactor-http-nio-2] INFO  c.c.t.a.g.s.i.CoreServiceFallbackHandlerImpl - Core service fallback triggered - Service: api, Path: /api/payment/process
2025-06-30 22:32:42 [reactor-http-nio-2] WARN  c.c.t.a.g.s.i.CoreServiceFallbackHandlerImpl - Failed to get Redis fallback data for key: fallback:core:api:/api/payment/process
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1858)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.FluxUsingWhen] :
	reactor.core.publisher.Flux.usingWhen(Flux.java:2226)
	org.springframework.data.redis.core.ReactiveRedisTemplate.doInConnection(ReactiveRedisTemplate.java:254)
Error has been observed at the following site(s):
	*____Flux.usingWhen ⇢ at org.springframework.data.redis.core.ReactiveRedisTemplate.doInConnection(ReactiveRedisTemplate.java:254)
	|_        Mono.from ⇢ at org.springframework.data.redis.core.ReactiveRedisTemplate.doCreateMono(ReactiveRedisTemplate.java:232)
	|_ Mono.doOnSuccess ⇢ at com.citi.tts.api.gateway.service.impl.CoreServiceFallbackHandlerImpl.getRedisFallbackData(CoreServiceFallbackHandlerImpl.java:106)
Original Stack Trace:
		at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1858)
		at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1789)
		at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1586)
		at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.lambda$getConnection$0(LettuceConnectionFactory.java:1566)
		at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.doInLock(LettuceConnectionFactory.java:1527)
		at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1563)
		at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedReactiveConnection(LettuceConnectionFactory.java:1274)
		at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getReactiveConnection(LettuceConnectionFactory.java:1149)
		at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getReactiveConnection(LettuceConnectionFactory.java:120)
		at org.springframework.data.redis.core.ReactiveRedisTemplate.lambda$getConnection$2(ReactiveRedisTemplate.java:273)
		at reactor.core.publisher.MonoSupplier.call(MonoSupplier.java:67)
		at reactor.core.publisher.FluxUsingWhen.subscribe(FluxUsingWhen.java:80)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onError(MonoIgnoreThen.java:280)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:205)
		at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:229)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:279)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.maybeOnError(FluxConcatMapNoPrefetch.java:327)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onNext(FluxConcatMapNoPrefetch.java:212)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.SinkManyEmitterProcessor.drain(SinkManyEmitterProcessor.java:476)
		at reactor.core.publisher.SinkManyEmitterProcessor$EmitterInner.drainParent(SinkManyEmitterProcessor.java:620)
		at reactor.core.publisher.FluxPublish$PubSubInner.request(FluxPublish.java:874)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.Operators$DeferredSubscription.request(Operators.java:1742)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:196)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:205)
		at reactor.netty.http.client.HttpClientConnect$HttpObserver.onUncaughtException(HttpClientConnect.java:417)
		at reactor.netty.ReactorNetty$CompositeConnectionObserver.onUncaughtException(ReactorNetty.java:715)
		at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onUncaughtException(DefaultPooledConnectionProvider.java:225)
		at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnection.onUncaughtException(DefaultPooledConnectionProvider.java:478)
		at reactor.netty.http.client.HttpClientOperations.onOutboundError(HttpClientOperations.java:693)
		at reactor.netty.channel.ChannelOperations.onError(ChannelOperations.java:272)
		at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onError(MonoIgnoreThen.java:280)
		at reactor.netty.channel.MonoSendMany$SendManyInner.run(MonoSendMany.java:352)
		at reactor.netty.channel.MonoSendMany$SendManyInner.trySchedule(MonoSendMany.java:434)
		at reactor.netty.channel.MonoSendMany$SendManyInner.onError(MonoSendMany.java:199)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onError(FluxMapFuseable.java:142)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onError(MonoFlatMapMany.java:256)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onError(FluxMapFuseable.java:142)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:106)
		at reactor.core.publisher.Operators.error(Operators.java:198)
		at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
		at reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.onError(FluxTimeout.java:220)
		at reactor.core.publisher.MonoCallable$MonoCallableSubscription.request(MonoCallable.java:145)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
		at reactor.core.publisher.SerializedSubscriber.request(SerializedSubscriber.java:151)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onSubscribe(FluxOnErrorResume.java:74)
		at reactor.core.publisher.SerializedSubscriber.onSubscribe(SerializedSubscriber.java:65)
		at reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.onSubscribe(FluxTimeout.java:155)
		at reactor.core.publisher.MonoCallable.subscribe(MonoCallable.java:48)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext(MonoFlatMapMany.java:196)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2096)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onComplete(FluxMapFuseable.java:152)
		at reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onComplete(FluxPeekFuseable.java:277)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.terminateReceiver(FluxReceive.java:481)
		at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:273)
		at reactor.netty.channel.FluxReceive.request(FluxReceive.java:131)
		at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:164)
		at reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request(FluxPeekFuseable.java:144)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.request(Operators.java:2066)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.request(FluxFilterFuseable.java:411)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.request(FluxMapFuseable.java:360)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onSubscribe(MonoFlatMapMany.java:141)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onSubscribe(FluxContextWrite.java:101)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onSubscribe(FluxMapFuseable.java:265)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onSubscribe(FluxFilterFuseable.java:305)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.onSubscribe(Operators.java:2050)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:96)
		at reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe(FluxPeekFuseable.java:178)
		at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
		at reactor.netty.channel.FluxReceive.startReceiver(FluxReceive.java:170)
		at reactor.netty.channel.FluxReceive.subscribe(FluxReceive.java:145)
		at reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:68)
		at reactor.netty.ByteBufFlux.subscribe(ByteBufFlux.java:340)
		at reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:68)
		at reactor.netty.ByteBufFlux.subscribe(ByteBufFlux.java:340)
		at reactor.core.publisher.Flux.subscribe(Flux.java:8891)
		at reactor.netty.channel.MonoSendMany.subscribe(MonoSendMany.java:102)
		at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
		at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
		at reactor.core.publisher.Operators.complete(Operators.java:137)
		at reactor.netty.FutureMono.doSubscribe(FutureMono.java:122)
		at reactor.netty.FutureMono$DeferredFutureMono.subscribe(FutureMono.java:114)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
		at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
		at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
		at reactor.netty.NettyOutbound.subscribe(NettyOutbound.java:336)
		at reactor.core.publisher.MonoSource.subscribe(MonoSource.java:68)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
		at reactor.netty.http.client.HttpClientConnect$HttpIOHandlerObserver.onStateChange(HttpClientConnect.java:459)
		at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
		at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onStateChange(DefaultPooledConnectionProvider.java:207)
		at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnection.onStateChange(DefaultPooledConnectionProvider.java:468)
		at reactor.netty.channel.ChannelOperationsHandler.channelActive(ChannelOperationsHandler.java:62)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:260)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:238)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:231)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelActive(CombinedChannelDuplexHandler.java:412)
		at io.netty.channel.ChannelInboundHandlerAdapter.channelActive(ChannelInboundHandlerAdapter.java:69)
		at io.netty.channel.CombinedChannelDuplexHandler.channelActive(CombinedChannelDuplexHandler.java:211)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:260)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:238)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:231)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelActive(DefaultChannelPipeline.java:1345)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:258)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:238)
		at io.netty.channel.DefaultChannelPipeline.fireChannelActive(DefaultChannelPipeline.java:844)
		at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:310)
		at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:340)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to localhost/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:63)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:41)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:354)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:220)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:112)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:112)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1787)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1586)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.lambda$getConnection$0(LettuceConnectionFactory.java:1566)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.doInLock(LettuceConnectionFactory.java:1527)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1563)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedReactiveConnection(LettuceConnectionFactory.java:1274)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getReactiveConnection(LettuceConnectionFactory.java:1149)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getReactiveConnection(LettuceConnectionFactory.java:120)
	at org.springframework.data.redis.core.ReactiveRedisTemplate.lambda$getConnection$2(ReactiveRedisTemplate.java:273)
	at reactor.core.publisher.MonoSupplier.call(MonoSupplier.java:67)
	at reactor.core.publisher.MonoCallableOnAssembly.call(MonoCallableOnAssembly.java:91)
	at reactor.core.publisher.FluxUsingWhen.subscribe(FluxUsingWhen.java:80)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:544)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:544)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:544)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onError(MonoIgnoreThen.java:280)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:544)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:544)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:205)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:544)
	at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
	at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:229)
	at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:279)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:544)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:544)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:544)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.maybeOnError(FluxConcatMapNoPrefetch.java:327)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onNext(FluxConcatMapNoPrefetch.java:212)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
	at reactor.core.publisher.SinkManyEmitterProcessor.drain(SinkManyEmitterProcessor.java:476)
	at reactor.core.publisher.SinkManyEmitterProcessor$EmitterInner.drainParent(SinkManyEmitterProcessor.java:620)
	at reactor.core.publisher.FluxPublish$PubSubInner.request(FluxPublish.java:874)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.Operators$DeferredSubscription.request(Operators.java:1742)
	at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:196)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:544)
	at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:205)
	at reactor.netty.http.client.HttpClientConnect$HttpObserver.onUncaughtException(HttpClientConnect.java:417)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onUncaughtException(ReactorNetty.java:715)
	at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onUncaughtException(DefaultPooledConnectionProvider.java:225)
	at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnection.onUncaughtException(DefaultPooledConnectionProvider.java:478)
	at reactor.netty.http.client.HttpClientOperations.onOutboundError(HttpClientOperations.java:693)
	at reactor.netty.channel.ChannelOperations.onError(ChannelOperations.java:272)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:544)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:544)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:544)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onError(MonoIgnoreThen.java:280)
	at reactor.netty.channel.MonoSendMany$SendManyInner.run(MonoSendMany.java:352)
	at reactor.netty.channel.MonoSendMany$SendManyInner.trySchedule(MonoSendMany.java:434)
	at reactor.netty.channel.MonoSendMany$SendManyInner.onError(MonoSendMany.java:199)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:544)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onError(FluxMapFuseable.java:142)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:544)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onError(MonoFlatMapMany.java:256)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:544)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onError(FluxMapFuseable.java:142)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:544)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:106)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:544)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:544)
	at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
	at reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.onError(FluxTimeout.java:220)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:544)
	at reactor.core.publisher.MonoCallable$MonoCallableSubscription.request(MonoCallable.java:145)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.SerializedSubscriber.request(SerializedSubscriber.java:151)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onSubscribe(FluxOnErrorResume.java:74)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:633)
	at reactor.core.publisher.SerializedSubscriber.onSubscribe(SerializedSubscriber.java:65)
	at reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.onSubscribe(FluxTimeout.java:155)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:633)
	at reactor.core.publisher.MonoCallable.subscribe(MonoCallable.java:48)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext(MonoFlatMapMany.java:196)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2096)
	at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onComplete(FluxMapFuseable.java:152)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onComplete(FluxPeekFuseable.java:277)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
	at reactor.netty.channel.FluxReceive.terminateReceiver(FluxReceive.java:481)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:273)
	at reactor.netty.channel.FluxReceive.request(FluxReceive.java:131)
	at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:164)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request(FluxPeekFuseable.java:144)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.Operators$BaseFluxToMonoOperator.request(Operators.java:2066)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.request(FluxFilterFuseable.java:411)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.request(FluxMapFuseable.java:360)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onSubscribe(MonoFlatMapMany.java:141)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:633)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onSubscribe(FluxContextWrite.java:101)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:633)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onSubscribe(FluxMapFuseable.java:265)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:633)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onSubscribe(FluxFilterFuseable.java:305)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:633)
	at reactor.core.publisher.Operators$BaseFluxToMonoOperator.onSubscribe(Operators.java:2050)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:633)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:96)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:633)
	at reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe(FluxPeekFuseable.java:178)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:633)
	at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
	at reactor.netty.channel.FluxReceive.startReceiver(FluxReceive.java:170)
	at reactor.netty.channel.FluxReceive.subscribe(FluxReceive.java:145)
	at reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:68)
	at reactor.netty.ByteBufFlux.subscribe(ByteBufFlux.java:340)
	at reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:68)
	at reactor.netty.ByteBufFlux.subscribe(ByteBufFlux.java:340)
	at reactor.core.publisher.Flux.subscribe(Flux.java:8891)
	at reactor.netty.channel.MonoSendMany.subscribe(MonoSendMany.java:102)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.netty.FutureMono.doSubscribe(FutureMono.java:122)
	at reactor.netty.FutureMono$DeferredFutureMono.subscribe(FutureMono.java:114)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.netty.NettyOutbound.subscribe(NettyOutbound.java:336)
	at reactor.core.publisher.MonoSource.subscribe(MonoSource.java:68)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.netty.http.client.HttpClientConnect$HttpIOHandlerObserver.onStateChange(HttpClientConnect.java:459)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onStateChange(DefaultPooledConnectionProvider.java:207)
	at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnection.onStateChange(DefaultPooledConnectionProvider.java:468)
	at reactor.netty.channel.ChannelOperationsHandler.channelActive(ChannelOperationsHandler.java:62)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:260)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:238)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:231)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelActive(CombinedChannelDuplexHandler.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelActive(ChannelInboundHandlerAdapter.java:69)
	at io.netty.channel.CombinedChannelDuplexHandler.channelActive(CombinedChannelDuplexHandler.java:211)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:260)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:238)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:231)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelActive(DefaultChannelPipeline.java:1345)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:258)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:238)
	at io.netty.channel.DefaultChannelPipeline.fireChannelActive(DefaultChannelPipeline.java:844)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:310)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:340)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: localhost/127.0.0.1:6379
Caused by: java.net.ConnectException: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:973)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:336)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:339)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-06-30 22:32:42 [reactor-http-nio-2] DEBUG i.g.r.c.i.CircuitBreakerStateMachine - CircuitBreaker 'nonCoreApiCircuitBreaker' succeeded:
2025-06-30 22:32:42 [reactor-http-nio-2] DEBUG c.c.t.a.gateway.tracing.TraceContext - Finished trace: 8e9fc70281a04364bf86f4500ad6eedc with status: 200
2025-06-30 22:32:42 [reactor-http-nio-2] ERROR reactor.core.publisher.Operators - Operator called default onErrorDropped
java.lang.UnsupportedOperationException: null
	at org.springframework.http.ReadOnlyHttpHeaders.add(ReadOnlyHttpHeaders.java:97)
	at com.citi.tts.api.gateway.tracing.TraceFilter.addTraceHeadersToResponse(TraceFilter.java:113)
	at com.citi.tts.api.gateway.tracing.TraceFilter.lambda$filter$0(TraceFilter.java:69)
	at reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.runFinally(FluxDoFinally.java:146)
	at reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete(FluxDoFinally.java:129)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at io.github.resilience4j.reactor.circuitbreaker.operator.CircuitBreakerSubscriber.hookOnComplete(CircuitBreakerSubscriber.java:69)
	at reactor.core.publisher.BaseSubscriber.onComplete(BaseSubscriber.java:197)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete(FluxDoFinally.java:128)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:210)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onComplete(MonoPeekTerminal.java:299)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onComplete(MonoPeekTerminal.java:299)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onComplete(FluxMapFuseable.java:152)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:544)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onError(MonoPeekTerminal.java:258)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:544)
	at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:544)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.FluxUsingWhen.subscribe(FluxUsingWhen.java:98)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:544)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:544)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:544)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onError(MonoIgnoreThen.java:280)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:544)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:544)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:205)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:544)
	at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
	at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:229)
	at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:279)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:544)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:544)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:544)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.maybeOnError(FluxConcatMapNoPrefetch.java:327)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onNext(FluxConcatMapNoPrefetch.java:212)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
	at reactor.core.publisher.SinkManyEmitterProcessor.drain(SinkManyEmitterProcessor.java:476)
	at reactor.core.publisher.SinkManyEmitterProcessor$EmitterInner.drainParent(SinkManyEmitterProcessor.java:620)
	at reactor.core.publisher.FluxPublish$PubSubInner.request(FluxPublish.java:874)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.Operators$DeferredSubscription.request(Operators.java:1742)
	at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:196)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:544)
	at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:205)
	at reactor.netty.http.client.HttpClientConnect$HttpObserver.onUncaughtException(HttpClientConnect.java:417)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onUncaughtException(ReactorNetty.java:715)
	at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onUncaughtException(DefaultPooledConnectionProvider.java:225)
	at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnection.onUncaughtException(DefaultPooledConnectionProvider.java:478)
	at reactor.netty.http.client.HttpClientOperations.onOutboundError(HttpClientOperations.java:693)
	at reactor.netty.channel.ChannelOperations.onError(ChannelOperations.java:272)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:544)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:544)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:544)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onError(MonoIgnoreThen.java:280)
	at reactor.netty.channel.MonoSendMany$SendManyInner.run(MonoSendMany.java:352)
	at reactor.netty.channel.MonoSendMany$SendManyInner.trySchedule(MonoSendMany.java:434)
	at reactor.netty.channel.MonoSendMany$SendManyInner.onError(MonoSendMany.java:199)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:544)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onError(FluxMapFuseable.java:142)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:544)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onError(MonoFlatMapMany.java:256)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:544)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onError(FluxMapFuseable.java:142)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:544)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:106)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:544)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:544)
	at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
	at reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.onError(FluxTimeout.java:220)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:544)
	at reactor.core.publisher.MonoCallable$MonoCallableSubscription.request(MonoCallable.java:145)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.SerializedSubscriber.request(SerializedSubscriber.java:151)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onSubscribe(FluxOnErrorResume.java:74)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:633)
	at reactor.core.publisher.SerializedSubscriber.onSubscribe(SerializedSubscriber.java:65)
	at reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.onSubscribe(FluxTimeout.java:155)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:633)
	at reactor.core.publisher.MonoCallable.subscribe(MonoCallable.java:48)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext(MonoFlatMapMany.java:196)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2096)
	at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onComplete(FluxMapFuseable.java:152)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onComplete(FluxPeekFuseable.java:277)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
	at reactor.netty.channel.FluxReceive.terminateReceiver(FluxReceive.java:481)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:273)
	at reactor.netty.channel.FluxReceive.request(FluxReceive.java:131)
	at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:164)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request(FluxPeekFuseable.java:144)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.Operators$BaseFluxToMonoOperator.request(Operators.java:2066)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.request(FluxFilterFuseable.java:411)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.request(FluxMapFuseable.java:360)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onSubscribe(MonoFlatMapMany.java:141)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:633)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onSubscribe(FluxContextWrite.java:101)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:633)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onSubscribe(FluxMapFuseable.java:265)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:633)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onSubscribe(FluxFilterFuseable.java:305)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:633)
	at reactor.core.publisher.Operators$BaseFluxToMonoOperator.onSubscribe(Operators.java:2050)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:633)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:96)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:633)
	at reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe(FluxPeekFuseable.java:178)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:633)
	at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
	at reactor.netty.channel.FluxReceive.startReceiver(FluxReceive.java:170)
	at reactor.netty.channel.FluxReceive.subscribe(FluxReceive.java:145)
	at reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:68)
	at reactor.netty.ByteBufFlux.subscribe(ByteBufFlux.java:340)
	at reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:68)
	at reactor.netty.ByteBufFlux.subscribe(ByteBufFlux.java:340)
	at reactor.core.publisher.Flux.subscribe(Flux.java:8891)
	at reactor.netty.channel.MonoSendMany.subscribe(MonoSendMany.java:102)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.netty.FutureMono.doSubscribe(FutureMono.java:122)
	at reactor.netty.FutureMono$DeferredFutureMono.subscribe(FutureMono.java:114)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.netty.NettyOutbound.subscribe(NettyOutbound.java:336)
	at reactor.core.publisher.MonoSource.subscribe(MonoSource.java:68)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.netty.http.client.HttpClientConnect$HttpIOHandlerObserver.onStateChange(HttpClientConnect.java:459)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onStateChange(DefaultPooledConnectionProvider.java:207)
	at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnection.onStateChange(DefaultPooledConnectionProvider.java:468)
	at reactor.netty.channel.ChannelOperationsHandler.channelActive(ChannelOperationsHandler.java:62)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:260)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:238)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:231)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelActive(CombinedChannelDuplexHandler.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelActive(ChannelInboundHandlerAdapter.java:69)
	at io.netty.channel.CombinedChannelDuplexHandler.channelActive(CombinedChannelDuplexHandler.java:211)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:260)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:238)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:231)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelActive(DefaultChannelPipeline.java:1345)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:258)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:238)
	at io.netty.channel.DefaultChannelPipeline.fireChannelActive(DefaultChannelPipeline.java:844)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:310)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:340)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-06-30 22:32:42 [reactor-http-nio-2] DEBUG r.n.r.DefaultPooledConnectionProvider - [4226917b, L:/127.0.0.1:61364 - R:localhost/127.0.0.1:8081] onStateChange(POST{uri=/api/payment/process, connection=PooledConnection{channel=[id: 0x4226917b, L:/127.0.0.1:61364 - R:localhost/127.0.0.1:8081]}}, [response_completed])
2025-06-30 22:32:42 [reactor-http-nio-2] DEBUG r.n.r.DefaultPooledConnectionProvider - [4226917b, L:/127.0.0.1:61364 - R:localhost/127.0.0.1:8081] onStateChange(POST{uri=/api/payment/process, connection=PooledConnection{channel=[id: 0x4226917b, L:/127.0.0.1:61364 - R:localhost/127.0.0.1:8081]}}, [disconnecting])
2025-06-30 22:32:42 [reactor-http-nio-2] DEBUG r.n.r.PooledConnectionProvider - [4226917b, L:/127.0.0.1:61364 ! R:localhost/127.0.0.1:8081] Channel closed, now: 0 active connections, 0 inactive connections 0 pending acquire requests.
2025-06-30 22:32:42 [reactor-http-nio-2] DEBUG r.netty.channel.ChannelOperations - [a01ae771-1, L:/127.0.0.1:8080 ! R:/127.0.0.1:61162] [HttpServer] Channel inbound receiver cancelled (channel disconnected).
2025-06-30 22:32:42 [reactor-http-nio-2] DEBUG r.n.r.DefaultPooledConnectionProvider - [4226917b, L:/127.0.0.1:61364 ! R:localhost/127.0.0.1:8081] onStateChange(PooledConnection{channel=[id: 0x4226917b, L:/127.0.0.1:61364 ! R:localhost/127.0.0.1:8081]}, [disconnecting])
2025-06-30 22:32:47 [scheduling-1] INFO  c.c.t.a.g.t.AdaptiveTraceScheduler - Adaptive Trace Statistics - Manager: Total=1, Sampled=1, Active=1, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0, Multiplier: 1.0
2025-06-30 22:32:49 [scheduling-1] INFO  c.c.t.a.g.tracing.TraceScheduler - Trace Statistics - Manager: Total=1, Sampled=1, Active=1, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0
2025-06-30 22:33:06 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Performing periodic health check
2025-06-30 22:33:34 [boundedElastic-1] INFO  c.c.t.a.g.t.ReactiveTraceScheduler - Reactive Trace Statistics - Manager: Total=1, Sampled=1, Active=1, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0
2025-06-30 22:33:36 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Cleaning up expired instances
2025-06-30 22:33:36 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Performing periodic health check
2025-06-30 22:33:36 [scheduling-1] DEBUG c.c.t.a.g.s.QPSCleanupScheduler - Starting scheduled QPS data cleanup...
2025-06-30 22:33:36 [scheduling-1] DEBUG c.c.t.api.gateway.metrics.QPSMetrics - Cleaned 1 expired API QPS entries
2025-06-30 22:33:36 [scheduling-1] DEBUG c.c.t.api.gateway.metrics.QPSMetrics - Cleaned 1 expired IP QPS entries
2025-06-30 22:33:36 [scheduling-1] DEBUG c.c.t.api.gateway.metrics.QPSMetrics - Cleaned 1 expired User QPS entries
2025-06-30 22:33:36 [scheduling-1] DEBUG c.c.t.api.gateway.metrics.QPSMetrics - Cleaned 1 expired Priority QPS entries
2025-06-30 22:33:36 [scheduling-1] INFO  c.c.t.api.gateway.metrics.QPSMetrics - Manual cleanup completed. Total cleaned: 4, Active entries: API=0, IP=0, User=0, Priority=0
2025-06-30 22:33:36 [scheduling-1] DEBUG c.c.t.a.g.s.QPSCleanupScheduler - Scheduled QPS data cleanup completed
2025-06-30 22:33:47 [scheduling-1] INFO  c.c.t.a.g.t.AdaptiveTraceScheduler - Adaptive Trace Statistics - Manager: Total=1, Sampled=1, Active=1, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0, Multiplier: 1.0
2025-06-30 22:33:49 [scheduling-1] INFO  c.c.t.a.g.tracing.TraceScheduler - Trace Statistics - Manager: Total=1, Sampled=1, Active=1, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0
2025-06-30 22:34:06 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Performing periodic health check
2025-06-30 22:34:26 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.netty.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-06-30 22:34:26 [netty-shutdown] DEBUG r.netty.transport.ServerTransport - [cd62d4c5, L:/[0:0:0:0:0:0:0:0]:8080] Server is about to be disposed with timeout: PT2562047H47M16.854775807S
2025-06-30 22:34:26 [netty-shutdown] INFO  o.s.b.w.e.netty.GracefulShutdown - Graceful shutdown complete
2025-06-30 22:34:26 [SpringApplicationShutdownHook] DEBUG r.netty.transport.ServerTransport - [cd62d4c5, L:/[0:0:0:0:0:0:0:0]:8080] Server has been disposed
2025-06-30 22:34:28 [SpringApplicationShutdownHook] INFO  c.c.t.a.g.t.ReactiveTraceScheduler - Stopping reactive trace scheduler
2025-06-30 22:34:28 [SpringApplicationShutdownHook] INFO  c.c.t.a.g.audit.AsyncAuditService - Shutting down async audit service...
2025-06-30 22:34:33 [SpringApplicationShutdownHook] INFO  c.c.t.a.g.audit.AsyncAuditService - Async audit service shutdown completed
2025-06-30 22:34:33 [async-audit-worker] INFO  c.c.t.a.g.audit.AsyncAuditService - Async audit log processor stopped
2025-06-30 22:34:43 [main] INFO  c.c.t.api.gateway.GatewayApplication - Starting GatewayApplication using Java 21.0.7 with PID 70005 (/Users/ouyangbaobao/gateway/build/classes/java/main started by ouyangbaobao in /Users/ouyangbaobao/gateway)
2025-06-30 22:34:43 [main] DEBUG c.c.t.api.gateway.GatewayApplication - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-06-30 22:34:43 [main] INFO  c.c.t.api.gateway.GatewayApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-30 22:34:45 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:34:45 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:34:45 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:34:45 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:34:45 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:34:45 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:34:45 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:34:45 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:34:45 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:34:45 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:34:45 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:34:45 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:34:45 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:34:45 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:34:45 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:34:45 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:34:45 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:34:45 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:34:45 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:34:45 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:34:45 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:34:45 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-30 22:34:45 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-30 22:34:45 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 35 ms. Found 0 Redis repository interfaces.
2025-06-30 22:34:46 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=f4b1e6f6-9484-3bc8-a690-d233cc88f213
2025-06-30 22:34:46 [main] INFO  c.c.t.a.g.audit.AsyncAuditService - Async audit service initialized - batchSize: 100, flushInterval: 5000ms, queueSize: 10000
2025-06-30 22:34:46 [async-audit-worker] INFO  c.c.t.a.g.audit.AsyncAuditService - Async audit log processor started
2025-06-30 22:34:46 [main] INFO  c.c.t.a.g.config.WebClientConfig - Created optimized WebClient: normal-service - maxConnections: 8, maxIdleConnections: 3, connectTimeout: 2500ms, readTimeout: 5000ms, writeTimeout: 3000ms
2025-06-30 22:34:46 [main] INFO  c.c.t.a.g.config.RateLimitConfig - === 限流配置验证 ===
2025-06-30 22:34:46 [main] INFO  c.c.t.a.g.config.RateLimitConfig - 全局默认QPS: 80, Burst: 120
2025-06-30 22:34:46 [main] INFO  c.c.t.a.g.config.RateLimitConfig - IP限流: 30 QPS, 50 Burst, 启用: true
2025-06-30 22:34:46 [main] INFO  c.c.t.a.g.config.RateLimitConfig - 用户限流: 20 QPS, 35 Burst, 启用: true
2025-06-30 22:34:46 [main] INFO  c.c.t.a.g.config.RateLimitConfig - URL限流: 40 QPS, 60 Burst, 启用: true
2025-06-30 22:34:46 [main] INFO  c.c.t.a.g.config.RateLimitConfig - API权重限流启用: true
2025-06-30 22:34:46 [main] INFO  c.c.t.a.g.config.RateLimitConfig - API权重总QPS: 110 (允许轻微超载)
2025-06-30 22:34:46 [main] INFO  c.c.t.a.g.config.RateLimitConfig - === 限流配置验证完成 ===
2025-06-30 22:34:46 [main] INFO  c.c.t.a.g.services.ApiRoutingService - API priority map initialized with 15 entries
2025-06-30 22:34:46 [main] INFO  c.c.t.a.g.config.RateLimitConfig - === 限流配置验证 ===
2025-06-30 22:34:46 [main] INFO  c.c.t.a.g.config.RateLimitConfig - 全局默认QPS: 80, Burst: 120
2025-06-30 22:34:46 [main] INFO  c.c.t.a.g.config.RateLimitConfig - IP限流: 30 QPS, 50 Burst, 启用: true
2025-06-30 22:34:46 [main] INFO  c.c.t.a.g.config.RateLimitConfig - 用户限流: 20 QPS, 35 Burst, 启用: true
2025-06-30 22:34:46 [main] INFO  c.c.t.a.g.config.RateLimitConfig - URL限流: 40 QPS, 60 Burst, 启用: true
2025-06-30 22:34:46 [main] INFO  c.c.t.a.g.config.RateLimitConfig - API权重限流启用: true
2025-06-30 22:34:46 [main] INFO  c.c.t.a.g.config.RateLimitConfig - API权重总QPS: 110 (允许轻微超载)
2025-06-30 22:34:46 [main] INFO  c.c.t.a.g.config.RateLimitConfig - === 限流配置验证完成 ===
2025-06-30 22:34:48 [main] INFO  c.c.t.a.g.config.WebClientConfig - Created optimized WebClient: default - maxConnections: 6, maxIdleConnections: 2, connectTimeout: 2000ms, readTimeout: 5000ms, writeTimeout: 3000ms
2025-06-30 22:34:48 [main] INFO  c.c.t.a.g.config.WebClientConfig - Created optimized WebClient: core-service - maxConnections: 25, maxIdleConnections: 8, connectTimeout: 1500ms, readTimeout: 3000ms, writeTimeout: 2000ms
2025-06-30 22:34:48 [main] INFO  c.c.t.a.g.config.WebClientConfig - Created optimized WebClient: important-service - maxConnections: 15, maxIdleConnections: 5, connectTimeout: 2000ms, readTimeout: 4000ms, writeTimeout: 2500ms
2025-06-30 22:34:48 [main] INFO  c.c.t.a.g.config.WebClientConfig - Created optimized WebClient: non-core-service - maxConnections: 4, maxIdleConnections: 2, connectTimeout: 3000ms, readTimeout: 8000ms, writeTimeout: 4000ms
2025-06-30 22:34:48 [main] INFO  c.c.t.a.g.t.ReactiveTraceScheduler - Starting reactive trace scheduler
2025-06-30 22:34:48 [main] DEBUG o.s.c.g.f.f.c.LocalResponseCacheProperties - No TTL configuration found. Default TTL will be applied for cache entries: PT5M minutes
2025-06-30 22:34:48 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [After]
2025-06-30 22:34:48 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Before]
2025-06-30 22:34:48 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Between]
2025-06-30 22:34:48 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Cookie]
2025-06-30 22:34:48 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Header]
2025-06-30 22:34:48 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Host]
2025-06-30 22:34:48 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Method]
2025-06-30 22:34:48 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Path]
2025-06-30 22:34:48 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Query]
2025-06-30 22:34:48 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [ReadBody]
2025-06-30 22:34:48 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [RemoteAddr]
2025-06-30 22:34:48 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [XForwardedRemoteAddr]
2025-06-30 22:34:48 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Weight]
2025-06-30 22:34:48 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [CloudFoundryRouteService]
2025-06-30 22:34:49 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 5 endpoints beneath base path '/actuator'
2025-06-30 22:34:50 [main] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default LoopResources: DefaultLoopResources {prefix=reactor-http, daemon=true, selectCount=8, workerCount=8}
2025-06-30 22:34:50 [main] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default ConnectionProvider: reactor.netty.resources.DefaultPooledConnectionProvider@5bb90b89
2025-06-30 22:34:50 [main] DEBUG r.netty.resources.DefaultLoopIOUring - Default io_uring support : false
2025-06-30 22:34:50 [main] DEBUG r.netty.resources.DefaultLoopEpoll - Default Epoll support : false
2025-06-30 22:34:50 [main] DEBUG r.netty.resources.DefaultLoopKQueue - Default KQueue support : false
2025-06-30 22:34:50 [reactor-http-nio-1] DEBUG r.netty.transport.ServerTransport - [dd200b13, L:/[0:0:0:0:0:0:0:0]:8080] Bound new server
2025-06-30 22:34:50 [main] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port 8080 (http)
2025-06-30 22:34:50 [scheduling-1] DEBUG c.c.t.a.g.c.ReleaseValidationConfig - Executing auto step traffic scheduler
2025-06-30 22:34:50 [scheduling-1] DEBUG c.c.t.a.g.c.ReleaseValidationConfig - Executing release strategy health check
2025-06-30 22:34:50 [scheduling-1] DEBUG c.c.t.a.g.c.ReleaseValidationConfig - Executing cleanup completed strategies
2025-06-30 22:34:50 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Cleaning up expired instances
2025-06-30 22:34:50 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Performing periodic health check
2025-06-30 22:34:50 [main] DEBUG o.s.c.g.filter.GatewayMetricsFilter - New routes count: 0
2025-06-30 22:34:50 [scheduling-1] INFO  c.c.t.a.g.s.QPSCleanupScheduler - === QPS Summary Report ===
2025-06-30 22:34:50 [scheduling-1] INFO  c.c.t.a.g.s.QPSCleanupScheduler - Global QPS: 0
2025-06-30 22:34:50 [scheduling-1] INFO  c.c.t.a.g.s.QPSCleanupScheduler - Active APIs: 0
2025-06-30 22:34:50 [scheduling-1] INFO  c.c.t.a.g.s.QPSCleanupScheduler - Active IPs: 0
2025-06-30 22:34:50 [scheduling-1] INFO  c.c.t.a.g.s.QPSCleanupScheduler - Active Users: 0
2025-06-30 22:34:50 [scheduling-1] INFO  c.c.t.a.g.s.QPSCleanupScheduler - Active Priorities: 0
2025-06-30 22:34:50 [scheduling-1] INFO  c.c.t.a.g.s.QPSCleanupScheduler - === End QPS Summary Report ===
2025-06-30 22:34:50 [scheduling-1] DEBUG c.c.t.a.g.s.QPSCleanupScheduler - Starting scheduled QPS data cleanup...
2025-06-30 22:34:50 [main] INFO  c.c.t.api.gateway.GatewayApplication - Started GatewayApplication in 7.453 seconds (process running for 9.328)
2025-06-30 22:34:50 [scheduling-1] INFO  c.c.t.api.gateway.metrics.QPSMetrics - Manual cleanup completed. Total cleaned: 0, Active entries: API=0, IP=0, User=0, Priority=0
2025-06-30 22:34:50 [scheduling-1] DEBUG c.c.t.a.g.s.QPSCleanupScheduler - Scheduled QPS data cleanup completed
2025-06-30 22:34:50 [scheduling-1] INFO  c.c.t.a.g.t.AdaptiveTraceScheduler - Adaptive Trace Statistics - Manager: Total=0, Sampled=0, Active=0, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0, Multiplier: 1.0
2025-06-30 22:34:50 [scheduling-1] DEBUG c.c.t.a.g.t.AdaptiveTraceScheduler - Adaptive trace cleanup completed - No traces cleaned, Duration: 1ms, Multiplier: 1.0
2025-06-30 22:34:50 [scheduling-1] INFO  c.c.t.a.g.tracing.TraceScheduler - Trace Statistics - Manager: Total=0, Sampled=0, Active=0, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0
2025-06-30 22:34:50 [scheduling-1] DEBUG c.c.t.a.g.tracing.TraceScheduler - Scheduled trace cleanup completed - No traces cleaned, Duration: 0ms
2025-06-30 22:34:53 [reactor-http-nio-2] DEBUG r.n.http.server.HttpServerOperations - [ee9dbf74, L:/127.0.0.1:8080 - R:/127.0.0.1:61569] New http connection, requesting read
2025-06-30 22:34:53 [reactor-http-nio-2] DEBUG r.netty.transport.TransportConfig - [ee9dbf74, L:/127.0.0.1:8080 - R:/127.0.0.1:61569] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpServerCodec), (reactor.left.httpTrafficHandler = reactor.netty.http.server.HttpTrafficHandler), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-06-30 22:34:53 [reactor-http-nio-2] DEBUG r.n.http.server.HttpServerOperations - [ee9dbf74, L:/127.0.0.1:8080 - R:/127.0.0.1:61569] Increasing pending responses count: 1
2025-06-30 22:34:53 [reactor-http-nio-2] DEBUG r.netty.http.server.HttpServer - [ee9dbf74-1, L:/127.0.0.1:8080 - R:/127.0.0.1:61569] Handler is being applied: org.springframework.http.server.reactive.ReactorHttpHandlerAdapter@241dfa99
2025-06-30 22:34:53 [reactor-http-nio-2] DEBUG o.s.c.g.h.RoutePredicateHandlerMapping - Route matched: payment-route
2025-06-30 22:34:53 [reactor-http-nio-2] DEBUG o.s.c.g.h.RoutePredicateHandlerMapping - Mapping [Exchange: POST http://localhost:8080/api/gateway/payment/process] to Route{id='payment-route', uri=http://localhost:8081, order=0, predicate=Paths: [/api/gateway/payment/**], match trailing slash: true, gatewayFilters=[[[RewritePath /api/gateway/payment/(?<segment>.*) = '/api/payment/${segment}'], order = 0], com.citi.tts.api.gateway.filter.AdvancedRateLimitFilter@2c02a007, [com.citi.tts.api.gateway.filter.ServiceDegradationGatewayFilter$1@71df96e6, order = 0], com.citi.tts.api.gateway.filter.CircuitBreakerFilter@6b576ff8, [com.citi.tts.api.gateway.filter.CryptoFilter@212c0aff, order = 0]], metadata={}}
2025-06-30 22:34:53 [reactor-http-nio-2] DEBUG o.s.c.g.h.RoutePredicateHandlerMapping - [ee9dbf74-1] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@18adc20a
2025-06-30 22:34:53 [reactor-http-nio-2] DEBUG o.s.c.g.handler.FilteringWebHandler - Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@49c947f7}, order = -2147483648], [GatewayFilterAdapter{delegate=com.citi.tts.api.gateway.tracing.TraceFilter@32a074ed}, order = -2147483598], com.citi.tts.api.gateway.filter.AdvancedRateLimitFilter@2c02a007, [GatewayFilterAdapter{delegate=com.citi.tts.api.gateway.filter.QPSMetricsFilter@73baf7f0}, order = -2147483548], com.citi.tts.api.gateway.filter.CircuitBreakerFilter@6b576ff8, [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@585672dd}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@4c6eaa65}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@3b764e66}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@75d95b67}, order = 0], [[RewritePath /api/gateway/payment/(?<segment>.*) = '/api/payment/${segment}'], order = 0], [com.citi.tts.api.gateway.filter.ServiceDegradationGatewayFilter$1@71df96e6, order = 0], [com.citi.tts.api.gateway.filter.CryptoFilter@212c0aff, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@47b494ce}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ReactiveLoadBalancerClientFilter@4d9bccfe}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.LoadBalancerServiceInstanceCookieFilter@36c45149}, order = 10151], [GatewayFilterAdapter{delegate=com.citi.tts.api.gateway.filter.ServiceDegradationFilter@2e1e7bc6}, order = 2147483547], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@3d1c8f35}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@a72925}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@50dd1e3a}, order = 2147483647]]
2025-06-30 22:34:53 [reactor-http-nio-2] DEBUG c.c.t.a.gateway.tracing.TraceContext - Created root trace context: c35e5185d1b84912a9e8d6455534e017
2025-06-30 22:34:53 [reactor-http-nio-2] DEBUG c.c.t.a.gateway.tracing.TraceManager - Created new sampled trace context: c35e5185d1b84912a9e8d6455534e017
2025-06-30 22:34:58 [reactor-http-nio-2] DEBUG c.c.t.a.g.f.AdvancedRateLimitFilter - Processing rate limit for: POST /api/gateway/payment/process from IP: 127.0.0.1, User: null
2025-06-30 22:34:58 [reactor-http-nio-2] DEBUG c.c.t.a.g.l.AdvancedRateLimiter - Token acquired for api_weight:NON_CORE: 1 tokens consumed, 14 remaining
2025-06-30 22:34:58 [reactor-http-nio-2] WARN  c.c.t.a.g.f.AdvancedRateLimitFilter - Rate limit processing took 12ms for path: /api/gateway/payment/process
2025-06-30 22:34:58 [reactor-http-nio-2] DEBUG c.c.t.a.g.filter.QPSMetricsFilter - QPS recorded - Path: /api/gateway/payment/process, IP: 127.0.0.1, User: anonymous, Priority: default
2025-06-30 22:34:58 [reactor-http-nio-2] DEBUG c.c.t.a.g.f.CircuitBreakerFilter - Using circuit breaker for API: /api/gateway/payment/process with priority: NON_CORE
2025-06-30 22:34:58 [reactor-http-nio-2] DEBUG c.c.t.a.g.f.ServiceDegradationGatewayFilter - Service degradation filter - Service: payment-service, Path: /api/payment/process, Level: CORE
2025-06-30 22:34:58 [reactor-http-nio-2] ERROR c.c.t.a.g.f.ServiceDegradationGatewayFilter - Service error detected - Service: payment-service, Path: /api/payment/process, Error: null
2025-06-30 22:34:58 [reactor-http-nio-2] DEBUG c.c.t.a.g.f.ServiceDegradationGatewayFilter - Error type NullPointerException is in non-degradation list
2025-06-30 22:34:58 [reactor-http-nio-2] INFO  c.c.t.a.g.f.ServiceDegradationGatewayFilter - Not triggering degradation for error type - Service: payment-service, Error: NullPointerException
2025-06-30 22:34:58 [reactor-http-nio-2] DEBUG r.n.http.server.HttpServerOperations - [ee9dbf74-1, L:/127.0.0.1:8080 - R:/127.0.0.1:61569] Last HTTP response frame
2025-06-30 22:34:58 [reactor-http-nio-2] DEBUG r.n.http.server.HttpServerOperations - [ee9dbf74-1, L:/127.0.0.1:8080 - R:/127.0.0.1:61569] Headers are not sent before onComplete().
2025-06-30 22:34:58 [reactor-http-nio-2] DEBUG r.n.http.server.HttpServerOperations - [ee9dbf74-1, L:/127.0.0.1:8080 - R:/127.0.0.1:61569] Decreasing pending responses count: 0
2025-06-30 22:34:58 [reactor-http-nio-2] DEBUG r.n.http.server.HttpServerOperations - [ee9dbf74-1, L:/127.0.0.1:8080 - R:/127.0.0.1:61569] Last HTTP packet was sent, terminating the channel
2025-06-30 22:34:58 [reactor-http-nio-2] DEBUG r.netty.channel.ChannelOperations - [ee9dbf74-1, L:/127.0.0.1:8080 - R:/127.0.0.1:61569] [HttpServer] Channel inbound receiver cancelled (subscription disposed).
2025-06-30 22:34:58 [reactor-http-nio-2] DEBUG i.g.r.c.i.CircuitBreakerStateMachine - CircuitBreaker 'nonCoreApiCircuitBreaker' succeeded:
2025-06-30 22:34:58 [reactor-http-nio-2] DEBUG c.c.t.a.gateway.tracing.TraceContext - Finished trace: c35e5185d1b84912a9e8d6455534e017 with status: 500
2025-06-30 22:34:58 [reactor-http-nio-2] ERROR reactor.core.publisher.Operators - Operator called default onErrorDropped
java.lang.UnsupportedOperationException: null
	at org.springframework.http.ReadOnlyHttpHeaders.add(ReadOnlyHttpHeaders.java:97)
	at com.citi.tts.api.gateway.tracing.TraceFilter.addTraceHeadersToResponse(TraceFilter.java:113)
	at com.citi.tts.api.gateway.tracing.TraceFilter.lambda$filter$0(TraceFilter.java:69)
	at reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.runFinally(FluxDoFinally.java:146)
	at reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete(FluxDoFinally.java:129)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at io.github.resilience4j.reactor.circuitbreaker.operator.CircuitBreakerSubscriber.hookOnComplete(CircuitBreakerSubscriber.java:69)
	at reactor.core.publisher.BaseSubscriber.onComplete(BaseSubscriber.java:197)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete(FluxDoFinally.java:128)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:210)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onComplete(MonoPeekTerminal.java:299)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onComplete(MonoPeekTerminal.java:299)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onComplete(FluxContextWrite.java:126)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onComplete(MonoPeekTerminal.java:299)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxPeekFuseable$PeekFuseableConditionalSubscriber.onComplete(FluxPeekFuseable.java:595)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onComplete(MonoPeekTerminal.java:299)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:89)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxConcatArray$ConcatArraySubscriber.onComplete(FluxConcatArray.java:209)
	at reactor.core.publisher.FluxConcatArray.subscribe(FluxConcatArray.java:79)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxFlatMap.trySubscribeScalarMap(FluxFlatMap.java:202)
	at reactor.core.publisher.MonoFlatMap.subscribeOrReturn(MonoFlatMap.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4560)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:544)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:49)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:38)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxFlatMap.trySubscribeScalarMap(FluxFlatMap.java:202)
	at reactor.core.publisher.MonoFlatMap.subscribeOrReturn(MonoFlatMap.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:63)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.drain(FluxFilterWhen.java:272)
	at reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.request(FluxFilterWhen.java:160)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:633)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:633)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:633)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:864)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:790)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:333)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:455)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-06-30 22:34:58 [reactor-http-nio-2] DEBUG r.n.channel.ChannelOperationsHandler - [ee9dbf74, L:/127.0.0.1:8080 - R:/127.0.0.1:61569] No ChannelOperation attached.
2025-06-30 22:35:20 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Performing periodic health check
2025-06-30 22:35:48 [boundedElastic-2] INFO  c.c.t.a.g.t.ReactiveTraceScheduler - Reactive Trace Statistics - Manager: Total=1, Sampled=1, Active=1, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0
2025-06-30 22:35:50 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Cleaning up expired instances
2025-06-30 22:35:50 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Performing periodic health check
2025-06-30 22:35:50 [scheduling-1] DEBUG c.c.t.a.g.s.QPSCleanupScheduler - Starting scheduled QPS data cleanup...
2025-06-30 22:35:50 [scheduling-1] INFO  c.c.t.api.gateway.metrics.QPSMetrics - Manual cleanup completed. Total cleaned: 0, Active entries: API=1, IP=1, User=1, Priority=1
2025-06-30 22:35:50 [scheduling-1] DEBUG c.c.t.a.g.s.QPSCleanupScheduler - Scheduled QPS data cleanup completed
2025-06-30 22:35:50 [scheduling-1] INFO  c.c.t.a.g.t.AdaptiveTraceScheduler - Adaptive Trace Statistics - Manager: Total=1, Sampled=1, Active=1, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0, Multiplier: 1.0
2025-06-30 22:35:50 [scheduling-1] INFO  c.c.t.a.g.tracing.TraceScheduler - Trace Statistics - Manager: Total=1, Sampled=1, Active=1, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0
2025-06-30 22:35:59 [reactor-http-nio-3] DEBUG r.n.http.server.HttpServerOperations - [94bd9b16, L:/127.0.0.1:8080 - R:/127.0.0.1:62225] New http connection, requesting read
2025-06-30 22:35:59 [reactor-http-nio-3] DEBUG r.netty.transport.TransportConfig - [94bd9b16, L:/127.0.0.1:8080 - R:/127.0.0.1:62225] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpServerCodec), (reactor.left.httpTrafficHandler = reactor.netty.http.server.HttpTrafficHandler), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-06-30 22:35:59 [reactor-http-nio-3] DEBUG r.n.http.server.HttpServerOperations - [94bd9b16, L:/127.0.0.1:8080 - R:/127.0.0.1:62225] Increasing pending responses count: 1
2025-06-30 22:35:59 [reactor-http-nio-3] DEBUG r.netty.http.server.HttpServer - [94bd9b16-1, L:/127.0.0.1:8080 - R:/127.0.0.1:62225] Handler is being applied: org.springframework.http.server.reactive.ReactorHttpHandlerAdapter@241dfa99
2025-06-30 22:35:59 [reactor-http-nio-3] DEBUG o.s.c.g.h.RoutePredicateHandlerMapping - Route matched: payment-route
2025-06-30 22:35:59 [reactor-http-nio-3] DEBUG o.s.c.g.h.RoutePredicateHandlerMapping - Mapping [Exchange: POST http://localhost:8080/api/gateway/payment/process] to Route{id='payment-route', uri=http://localhost:8081, order=0, predicate=Paths: [/api/gateway/payment/**], match trailing slash: true, gatewayFilters=[[[RewritePath /api/gateway/payment/(?<segment>.*) = '/api/payment/${segment}'], order = 0], com.citi.tts.api.gateway.filter.AdvancedRateLimitFilter@2c02a007, [com.citi.tts.api.gateway.filter.ServiceDegradationGatewayFilter$1@71df96e6, order = 0], com.citi.tts.api.gateway.filter.CircuitBreakerFilter@6b576ff8, [com.citi.tts.api.gateway.filter.CryptoFilter@212c0aff, order = 0]], metadata={}}
2025-06-30 22:35:59 [reactor-http-nio-3] DEBUG o.s.c.g.h.RoutePredicateHandlerMapping - [94bd9b16-2] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@18adc20a
2025-06-30 22:35:59 [reactor-http-nio-3] DEBUG o.s.c.g.handler.FilteringWebHandler - Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@49c947f7}, order = -2147483648], [GatewayFilterAdapter{delegate=com.citi.tts.api.gateway.tracing.TraceFilter@32a074ed}, order = -2147483598], com.citi.tts.api.gateway.filter.AdvancedRateLimitFilter@2c02a007, [GatewayFilterAdapter{delegate=com.citi.tts.api.gateway.filter.QPSMetricsFilter@73baf7f0}, order = -2147483548], com.citi.tts.api.gateway.filter.CircuitBreakerFilter@6b576ff8, [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@585672dd}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@4c6eaa65}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@3b764e66}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@75d95b67}, order = 0], [[RewritePath /api/gateway/payment/(?<segment>.*) = '/api/payment/${segment}'], order = 0], [com.citi.tts.api.gateway.filter.ServiceDegradationGatewayFilter$1@71df96e6, order = 0], [com.citi.tts.api.gateway.filter.CryptoFilter@212c0aff, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@47b494ce}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ReactiveLoadBalancerClientFilter@4d9bccfe}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.LoadBalancerServiceInstanceCookieFilter@36c45149}, order = 10151], [GatewayFilterAdapter{delegate=com.citi.tts.api.gateway.filter.ServiceDegradationFilter@2e1e7bc6}, order = 2147483547], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@3d1c8f35}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@a72925}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@50dd1e3a}, order = 2147483647]]
2025-06-30 22:35:59 [reactor-http-nio-3] DEBUG c.c.t.a.gateway.tracing.TraceContext - Created root trace context: e87ba9e015fe45e4bf41667d6b3fae72
2025-06-30 22:35:59 [reactor-http-nio-3] DEBUG c.c.t.a.gateway.tracing.TraceManager - Created new sampled trace context: e87ba9e015fe45e4bf41667d6b3fae72
2025-06-30 22:36:02 [reactor-http-nio-3] DEBUG c.c.t.a.g.f.AdvancedRateLimitFilter - Processing rate limit for: POST /api/gateway/payment/process from IP: 127.0.0.1, User: null
2025-06-30 22:36:02 [reactor-http-nio-3] DEBUG c.c.t.a.g.l.AdvancedRateLimiter - Tokens refilled for api_weight:NON_CORE: +640 tokens, total: 15
2025-06-30 22:36:02 [reactor-http-nio-3] DEBUG c.c.t.a.g.l.AdvancedRateLimiter - Token acquired for api_weight:NON_CORE: 1 tokens consumed, 14 remaining
2025-06-30 22:36:02 [reactor-http-nio-3] DEBUG c.c.t.a.g.filter.QPSMetricsFilter - QPS recorded - Path: /api/gateway/payment/process, IP: 127.0.0.1, User: anonymous, Priority: default
2025-06-30 22:36:02 [reactor-http-nio-3] DEBUG c.c.t.a.g.f.CircuitBreakerFilter - Using circuit breaker for API: /api/gateway/payment/process with priority: NON_CORE
2025-06-30 22:36:02 [reactor-http-nio-3] DEBUG c.c.t.a.g.f.ServiceDegradationGatewayFilter - Service degradation filter - Service: payment-service, Path: /api/payment/process, Level: CORE
2025-06-30 22:36:02 [reactor-http-nio-3] ERROR c.c.t.a.g.f.ServiceDegradationGatewayFilter - Service error detected - Service: payment-service, Path: /api/payment/process, Error: null
2025-06-30 22:36:02 [reactor-http-nio-3] DEBUG c.c.t.a.g.f.ServiceDegradationGatewayFilter - Error type NullPointerException is in non-degradation list
2025-06-30 22:36:02 [reactor-http-nio-3] INFO  c.c.t.a.g.f.ServiceDegradationGatewayFilter - Not triggering degradation for error type - Service: payment-service, Error: NullPointerException
2025-06-30 22:36:02 [reactor-http-nio-3] DEBUG r.n.http.server.HttpServerOperations - [94bd9b16-1, L:/127.0.0.1:8080 - R:/127.0.0.1:62225] Last HTTP response frame
2025-06-30 22:36:02 [reactor-http-nio-3] DEBUG r.n.http.server.HttpServerOperations - [94bd9b16-1, L:/127.0.0.1:8080 - R:/127.0.0.1:62225] Headers are not sent before onComplete().
2025-06-30 22:36:02 [reactor-http-nio-3] DEBUG r.n.http.server.HttpServerOperations - [94bd9b16-1, L:/127.0.0.1:8080 - R:/127.0.0.1:62225] Decreasing pending responses count: 0
2025-06-30 22:36:02 [reactor-http-nio-3] DEBUG r.n.http.server.HttpServerOperations - [94bd9b16-1, L:/127.0.0.1:8080 - R:/127.0.0.1:62225] Last HTTP packet was sent, terminating the channel
2025-06-30 22:36:02 [reactor-http-nio-3] DEBUG r.netty.channel.ChannelOperations - [94bd9b16-1, L:/127.0.0.1:8080 - R:/127.0.0.1:62225] [HttpServer] Channel inbound receiver cancelled (subscription disposed).
2025-06-30 22:36:02 [reactor-http-nio-3] DEBUG i.g.r.c.i.CircuitBreakerStateMachine - CircuitBreaker 'nonCoreApiCircuitBreaker' succeeded:
2025-06-30 22:36:02 [reactor-http-nio-3] DEBUG c.c.t.a.gateway.tracing.TraceContext - Finished trace: e87ba9e015fe45e4bf41667d6b3fae72 with status: 500
2025-06-30 22:37:27 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Performing periodic health check
2025-06-30 22:37:27 [boundedElastic-3] INFO  c.c.t.a.g.t.ReactiveTraceScheduler - Reactive Trace Statistics - Manager: Total=2, Sampled=2, Active=2, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0
2025-06-30 22:41:25 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Cleaning up expired instances
2025-06-30 22:41:25 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Performing periodic health check
2025-06-30 22:41:25 [scheduling-1] DEBUG c.c.t.a.g.s.QPSCleanupScheduler - Starting scheduled QPS data cleanup...
2025-06-30 22:41:25 [scheduling-1] DEBUG c.c.t.api.gateway.metrics.QPSMetrics - Cleaned 1 expired API QPS entries
2025-06-30 22:41:25 [scheduling-1] DEBUG c.c.t.api.gateway.metrics.QPSMetrics - Cleaned 1 expired IP QPS entries
2025-06-30 22:41:25 [scheduling-1] DEBUG c.c.t.api.gateway.metrics.QPSMetrics - Cleaned 1 expired User QPS entries
2025-06-30 22:41:25 [scheduling-1] DEBUG c.c.t.api.gateway.metrics.QPSMetrics - Cleaned 1 expired Priority QPS entries
2025-06-30 22:41:25 [scheduling-1] INFO  c.c.t.api.gateway.metrics.QPSMetrics - Manual cleanup completed. Total cleaned: 4, Active entries: API=0, IP=0, User=0, Priority=0
2025-06-30 22:41:25 [scheduling-1] DEBUG c.c.t.a.g.s.QPSCleanupScheduler - Scheduled QPS data cleanup completed
2025-06-30 22:41:25 [scheduling-1] INFO  c.c.t.a.g.t.AdaptiveTraceScheduler - Adaptive Trace Statistics - Manager: Total=2, Sampled=2, Active=2, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0, Multiplier: 1.0
2025-06-30 22:41:25 [boundedElastic-8] INFO  c.c.t.a.g.t.ReactiveTraceScheduler - Reactive Trace Statistics - Manager: Total=2, Sampled=2, Active=2, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0
2025-06-30 22:41:25 [boundedElastic-12] INFO  c.c.t.a.g.t.ReactiveTraceScheduler - Reactive Trace Statistics - Manager: Total=2, Sampled=2, Active=2, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0
2025-06-30 22:41:25 [boundedElastic-10] INFO  c.c.t.a.g.t.ReactiveTraceScheduler - Reactive Trace Statistics - Manager: Total=2, Sampled=2, Active=2, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0
2025-06-30 22:41:25 [scheduling-1] INFO  c.c.t.a.g.tracing.TraceScheduler - Trace Statistics - Manager: Total=2, Sampled=2, Active=2, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0
2025-06-30 22:41:25 [reactor-http-nio-3] ERROR reactor.core.publisher.Operators - Operator called default onErrorDropped
java.lang.UnsupportedOperationException: null
	at org.springframework.http.ReadOnlyHttpHeaders.add(ReadOnlyHttpHeaders.java:97)
	at com.citi.tts.api.gateway.tracing.TraceFilter.addTraceHeadersToResponse(TraceFilter.java:113)
	at com.citi.tts.api.gateway.tracing.TraceFilter.lambda$filter$0(TraceFilter.java:69)
	at reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.runFinally(FluxDoFinally.java:146)
	at reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete(FluxDoFinally.java:129)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at io.github.resilience4j.reactor.circuitbreaker.operator.CircuitBreakerSubscriber.hookOnComplete(CircuitBreakerSubscriber.java:69)
	at reactor.core.publisher.BaseSubscriber.onComplete(BaseSubscriber.java:197)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete(FluxDoFinally.java:128)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:210)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onComplete(MonoPeekTerminal.java:299)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onComplete(MonoPeekTerminal.java:299)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onComplete(FluxContextWrite.java:126)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onComplete(MonoPeekTerminal.java:299)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxPeekFuseable$PeekFuseableConditionalSubscriber.onComplete(FluxPeekFuseable.java:595)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onComplete(MonoPeekTerminal.java:299)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:89)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxConcatArray$ConcatArraySubscriber.onComplete(FluxConcatArray.java:209)
	at reactor.core.publisher.FluxConcatArray.subscribe(FluxConcatArray.java:79)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxFlatMap.trySubscribeScalarMap(FluxFlatMap.java:202)
	at reactor.core.publisher.MonoFlatMap.subscribeOrReturn(MonoFlatMap.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4560)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:544)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:49)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:38)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxFlatMap.trySubscribeScalarMap(FluxFlatMap.java:202)
	at reactor.core.publisher.MonoFlatMap.subscribeOrReturn(MonoFlatMap.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:63)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.drain(FluxFilterWhen.java:272)
	at reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.request(FluxFilterWhen.java:160)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:633)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:633)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:633)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:864)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:790)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:333)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:455)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-06-30 22:41:25 [boundedElastic-12] INFO  c.c.t.a.g.t.ReactiveTraceScheduler - Reactive Trace Statistics - Manager: Total=2, Sampled=2, Active=2, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0
2025-06-30 22:41:25 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Performing periodic health check
2025-06-30 22:41:25 [boundedElastic-13] DEBUG c.c.t.a.g.t.ReactiveTraceScheduler - Reactive trace cleanup completed - No traces cleaned, Duration: 1ms
2025-06-30 22:41:25 [reactor-http-nio-3] DEBUG r.n.channel.ChannelOperationsHandler - [94bd9b16, L:/127.0.0.1:8080 - R:/127.0.0.1:62225] No ChannelOperation attached.
2025-06-30 22:41:25 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Cleaning up expired instances
2025-06-30 22:41:25 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Performing periodic health check
2025-06-30 22:41:25 [scheduling-1] DEBUG c.c.t.a.g.s.QPSCleanupScheduler - Starting scheduled QPS data cleanup...
2025-06-30 22:41:25 [scheduling-1] INFO  c.c.t.api.gateway.metrics.QPSMetrics - Manual cleanup completed. Total cleaned: 0, Active entries: API=0, IP=0, User=0, Priority=0
2025-06-30 22:41:25 [scheduling-1] DEBUG c.c.t.a.g.s.QPSCleanupScheduler - Scheduled QPS data cleanup completed
2025-06-30 22:41:25 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Performing periodic health check
2025-06-30 22:41:25 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Cleaning up expired instances
2025-06-30 22:41:25 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Performing periodic health check
2025-06-30 22:41:25 [scheduling-1] DEBUG c.c.t.a.g.s.QPSCleanupScheduler - Starting scheduled QPS data cleanup...
2025-06-30 22:41:25 [scheduling-1] INFO  c.c.t.api.gateway.metrics.QPSMetrics - Manual cleanup completed. Total cleaned: 0, Active entries: API=0, IP=0, User=0, Priority=0
2025-06-30 22:41:25 [scheduling-1] DEBUG c.c.t.a.g.s.QPSCleanupScheduler - Scheduled QPS data cleanup completed
2025-06-30 22:41:25 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Performing periodic health check
2025-06-30 22:41:25 [scheduling-1] DEBUG c.c.t.a.g.c.ReleaseValidationConfig - Executing auto step traffic scheduler
2025-06-30 22:41:25 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Cleaning up expired instances
2025-06-30 22:41:25 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.netty.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-06-30 22:41:25 [netty-shutdown] DEBUG r.netty.transport.ServerTransport - [dd200b13, L:/[0:0:0:0:0:0:0:0]:8080] Server is about to be disposed with timeout: PT2562047H47M16.854775807S
2025-06-30 22:41:25 [netty-shutdown] INFO  o.s.b.w.e.netty.GracefulShutdown - Graceful shutdown complete
2025-06-30 22:41:25 [SpringApplicationShutdownHook] DEBUG r.netty.transport.ServerTransport - [dd200b13, L:/[0:0:0:0:0:0:0:0]:8080] Server has been disposed
2025-06-30 22:41:27 [SpringApplicationShutdownHook] INFO  c.c.t.a.g.t.ReactiveTraceScheduler - Stopping reactive trace scheduler
2025-06-30 22:41:27 [SpringApplicationShutdownHook] INFO  c.c.t.a.g.audit.AsyncAuditService - Shutting down async audit service...
2025-06-30 22:41:32 [SpringApplicationShutdownHook] INFO  c.c.t.a.g.audit.AsyncAuditService - Async audit service shutdown completed
2025-06-30 22:41:32 [async-audit-worker] INFO  c.c.t.a.g.audit.AsyncAuditService - Async audit log processor stopped
2025-06-30 22:41:42 [main] INFO  c.c.t.api.gateway.GatewayApplication - Starting GatewayApplication using Java 21.0.7 with PID 70424 (/Users/ouyangbaobao/gateway/build/classes/java/main started by ouyangbaobao in /Users/ouyangbaobao/gateway)
2025-06-30 22:41:42 [main] DEBUG c.c.t.api.gateway.GatewayApplication - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-06-30 22:41:42 [main] INFO  c.c.t.api.gateway.GatewayApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-30 22:41:43 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:41:43 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:41:43 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:41:43 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:41:43 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:41:43 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:41:43 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:41:43 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:41:43 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:41:43 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:41:43 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:41:43 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:41:43 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:41:43 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:41:43 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:41:43 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:41:43 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:41:43 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:41:43 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:41:43 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:41:43 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:41:44 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-30 22:41:44 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-30 22:41:44 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 56 ms. Found 0 Redis repository interfaces.
2025-06-30 22:41:44 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=f4b1e6f6-9484-3bc8-a690-d233cc88f213
2025-06-30 22:41:45 [async-audit-worker] INFO  c.c.t.a.g.audit.AsyncAuditService - Async audit log processor started
2025-06-30 22:41:45 [main] INFO  c.c.t.a.g.audit.AsyncAuditService - Async audit service initialized - batchSize: 100, flushInterval: 5000ms, queueSize: 10000
2025-06-30 22:41:45 [main] INFO  c.c.t.a.g.config.WebClientConfig - Created optimized WebClient: normal-service - maxConnections: 8, maxIdleConnections: 3, connectTimeout: 2500ms, readTimeout: 5000ms, writeTimeout: 3000ms
2025-06-30 22:41:45 [main] INFO  c.c.t.a.g.config.RateLimitConfig - === 限流配置验证 ===
2025-06-30 22:41:45 [main] INFO  c.c.t.a.g.config.RateLimitConfig - 全局默认QPS: 80, Burst: 120
2025-06-30 22:41:45 [main] INFO  c.c.t.a.g.config.RateLimitConfig - IP限流: 30 QPS, 50 Burst, 启用: true
2025-06-30 22:41:45 [main] INFO  c.c.t.a.g.config.RateLimitConfig - 用户限流: 20 QPS, 35 Burst, 启用: true
2025-06-30 22:41:45 [main] INFO  c.c.t.a.g.config.RateLimitConfig - URL限流: 40 QPS, 60 Burst, 启用: true
2025-06-30 22:41:45 [main] INFO  c.c.t.a.g.config.RateLimitConfig - API权重限流启用: true
2025-06-30 22:41:45 [main] INFO  c.c.t.a.g.config.RateLimitConfig - API权重总QPS: 110 (允许轻微超载)
2025-06-30 22:41:45 [main] INFO  c.c.t.a.g.config.RateLimitConfig - === 限流配置验证完成 ===
2025-06-30 22:41:45 [main] INFO  c.c.t.a.g.services.ApiRoutingService - API priority map initialized with 15 entries
2025-06-30 22:41:45 [main] INFO  c.c.t.a.g.config.RateLimitConfig - === 限流配置验证 ===
2025-06-30 22:41:45 [main] INFO  c.c.t.a.g.config.RateLimitConfig - 全局默认QPS: 80, Burst: 120
2025-06-30 22:41:45 [main] INFO  c.c.t.a.g.config.RateLimitConfig - IP限流: 30 QPS, 50 Burst, 启用: true
2025-06-30 22:41:45 [main] INFO  c.c.t.a.g.config.RateLimitConfig - 用户限流: 20 QPS, 35 Burst, 启用: true
2025-06-30 22:41:45 [main] INFO  c.c.t.a.g.config.RateLimitConfig - URL限流: 40 QPS, 60 Burst, 启用: true
2025-06-30 22:41:45 [main] INFO  c.c.t.a.g.config.RateLimitConfig - API权重限流启用: true
2025-06-30 22:41:45 [main] INFO  c.c.t.a.g.config.RateLimitConfig - API权重总QPS: 110 (允许轻微超载)
2025-06-30 22:41:45 [main] INFO  c.c.t.a.g.config.RateLimitConfig - === 限流配置验证完成 ===
2025-06-30 22:41:46 [main] INFO  c.c.t.a.g.config.WebClientConfig - Created optimized WebClient: default - maxConnections: 6, maxIdleConnections: 2, connectTimeout: 2000ms, readTimeout: 5000ms, writeTimeout: 3000ms
2025-06-30 22:41:46 [main] INFO  c.c.t.a.g.config.WebClientConfig - Created optimized WebClient: core-service - maxConnections: 25, maxIdleConnections: 8, connectTimeout: 1500ms, readTimeout: 3000ms, writeTimeout: 2000ms
2025-06-30 22:41:46 [main] INFO  c.c.t.a.g.config.WebClientConfig - Created optimized WebClient: important-service - maxConnections: 15, maxIdleConnections: 5, connectTimeout: 2000ms, readTimeout: 4000ms, writeTimeout: 2500ms
2025-06-30 22:41:46 [main] INFO  c.c.t.a.g.config.WebClientConfig - Created optimized WebClient: non-core-service - maxConnections: 4, maxIdleConnections: 2, connectTimeout: 3000ms, readTimeout: 8000ms, writeTimeout: 4000ms
2025-06-30 22:41:46 [main] INFO  c.c.t.a.g.t.ReactiveTraceScheduler - Starting reactive trace scheduler
2025-06-30 22:41:47 [main] DEBUG o.s.c.g.f.f.c.LocalResponseCacheProperties - No TTL configuration found. Default TTL will be applied for cache entries: PT5M minutes
2025-06-30 22:41:47 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [After]
2025-06-30 22:41:47 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Before]
2025-06-30 22:41:47 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Between]
2025-06-30 22:41:47 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Cookie]
2025-06-30 22:41:47 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Header]
2025-06-30 22:41:47 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Host]
2025-06-30 22:41:47 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Method]
2025-06-30 22:41:47 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Path]
2025-06-30 22:41:47 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Query]
2025-06-30 22:41:47 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [ReadBody]
2025-06-30 22:41:47 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [RemoteAddr]
2025-06-30 22:41:47 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [XForwardedRemoteAddr]
2025-06-30 22:41:47 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Weight]
2025-06-30 22:41:47 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [CloudFoundryRouteService]
2025-06-30 22:41:47 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 5 endpoints beneath base path '/actuator'
2025-06-30 22:41:48 [main] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default LoopResources: DefaultLoopResources {prefix=reactor-http, daemon=true, selectCount=8, workerCount=8}
2025-06-30 22:41:48 [main] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default ConnectionProvider: reactor.netty.resources.DefaultPooledConnectionProvider@978475b
2025-06-30 22:41:48 [main] DEBUG r.netty.resources.DefaultLoopIOUring - Default io_uring support : false
2025-06-30 22:41:48 [main] DEBUG r.netty.resources.DefaultLoopEpoll - Default Epoll support : false
2025-06-30 22:41:48 [main] DEBUG r.netty.resources.DefaultLoopKQueue - Default KQueue support : false
2025-06-30 22:41:48 [reactor-http-nio-1] DEBUG r.netty.transport.ServerTransport - [9b5556de, L:/[0:0:0:0:0:0:0:0]:8080] Bound new server
2025-06-30 22:41:48 [main] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port 8080 (http)
2025-06-30 22:41:48 [scheduling-1] DEBUG c.c.t.a.g.c.ReleaseValidationConfig - Executing auto step traffic scheduler
2025-06-30 22:41:48 [scheduling-1] DEBUG c.c.t.a.g.c.ReleaseValidationConfig - Executing release strategy health check
2025-06-30 22:41:48 [scheduling-1] DEBUG c.c.t.a.g.c.ReleaseValidationConfig - Executing cleanup completed strategies
2025-06-30 22:41:48 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Cleaning up expired instances
2025-06-30 22:41:48 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Performing periodic health check
2025-06-30 22:41:48 [scheduling-1] DEBUG c.c.t.a.g.s.QPSCleanupScheduler - Starting scheduled QPS data cleanup...
2025-06-30 22:41:48 [scheduling-1] INFO  c.c.t.api.gateway.metrics.QPSMetrics - Manual cleanup completed. Total cleaned: 0, Active entries: API=0, IP=0, User=0, Priority=0
2025-06-30 22:41:48 [scheduling-1] DEBUG c.c.t.a.g.s.QPSCleanupScheduler - Scheduled QPS data cleanup completed
2025-06-30 22:41:48 [main] DEBUG o.s.c.g.filter.GatewayMetricsFilter - New routes count: 0
2025-06-30 22:41:48 [scheduling-1] INFO  c.c.t.a.g.s.QPSCleanupScheduler - === QPS Summary Report ===
2025-06-30 22:41:48 [scheduling-1] INFO  c.c.t.a.g.s.QPSCleanupScheduler - Global QPS: 0
2025-06-30 22:41:48 [scheduling-1] INFO  c.c.t.a.g.s.QPSCleanupScheduler - Active APIs: 0
2025-06-30 22:41:48 [scheduling-1] INFO  c.c.t.a.g.s.QPSCleanupScheduler - Active IPs: 0
2025-06-30 22:41:48 [scheduling-1] INFO  c.c.t.a.g.s.QPSCleanupScheduler - Active Users: 0
2025-06-30 22:41:48 [scheduling-1] INFO  c.c.t.a.g.s.QPSCleanupScheduler - Active Priorities: 0
2025-06-30 22:41:48 [scheduling-1] INFO  c.c.t.a.g.s.QPSCleanupScheduler - === End QPS Summary Report ===
2025-06-30 22:41:48 [main] INFO  c.c.t.api.gateway.GatewayApplication - Started GatewayApplication in 7.262 seconds (process running for 9.348)
2025-06-30 22:41:48 [scheduling-1] INFO  c.c.t.a.g.t.AdaptiveTraceScheduler - Adaptive Trace Statistics - Manager: Total=0, Sampled=0, Active=0, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0, Multiplier: 1.0
2025-06-30 22:41:48 [scheduling-1] DEBUG c.c.t.a.g.t.AdaptiveTraceScheduler - Adaptive trace cleanup completed - No traces cleaned, Duration: 1ms, Multiplier: 1.0
2025-06-30 22:41:48 [scheduling-1] INFO  c.c.t.a.g.tracing.TraceScheduler - Trace Statistics - Manager: Total=0, Sampled=0, Active=0, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0
2025-06-30 22:41:48 [scheduling-1] DEBUG c.c.t.a.g.tracing.TraceScheduler - Scheduled trace cleanup completed - No traces cleaned, Duration: 0ms
2025-06-30 22:41:50 [reactor-http-nio-2] DEBUG r.n.http.server.HttpServerOperations - [839568b3, L:/127.0.0.1:8080 - R:/127.0.0.1:62864] New http connection, requesting read
2025-06-30 22:41:50 [reactor-http-nio-2] DEBUG r.netty.transport.TransportConfig - [839568b3, L:/127.0.0.1:8080 - R:/127.0.0.1:62864] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpServerCodec), (reactor.left.httpTrafficHandler = reactor.netty.http.server.HttpTrafficHandler), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-06-30 22:41:50 [reactor-http-nio-2] DEBUG r.n.http.server.HttpServerOperations - [839568b3, L:/127.0.0.1:8080 - R:/127.0.0.1:62864] Increasing pending responses count: 1
2025-06-30 22:41:50 [reactor-http-nio-2] DEBUG r.netty.http.server.HttpServer - [839568b3-1, L:/127.0.0.1:8080 - R:/127.0.0.1:62864] Handler is being applied: org.springframework.http.server.reactive.ReactorHttpHandlerAdapter@2f19f9cf
2025-06-30 22:41:50 [reactor-http-nio-2] DEBUG o.s.c.g.h.RoutePredicateHandlerMapping - Route matched: payment-route
2025-06-30 22:41:50 [reactor-http-nio-2] DEBUG o.s.c.g.h.RoutePredicateHandlerMapping - Mapping [Exchange: POST http://localhost:8080/api/gateway/payment/process] to Route{id='payment-route', uri=http://localhost:8081, order=0, predicate=Paths: [/api/gateway/payment/**], match trailing slash: true, gatewayFilters=[[[RewritePath /api/gateway/payment/(?<segment>.*) = '/api/payment/${segment}'], order = 0], com.citi.tts.api.gateway.filter.AdvancedRateLimitFilter@3c62be3c, [com.citi.tts.api.gateway.filter.ServiceDegradationGatewayFilter$1@65817c63, order = 0], com.citi.tts.api.gateway.filter.CircuitBreakerFilter@2dbcee03, [com.citi.tts.api.gateway.filter.CryptoFilter@44dcc0e4, order = 0]], metadata={}}
2025-06-30 22:41:50 [reactor-http-nio-2] DEBUG o.s.c.g.h.RoutePredicateHandlerMapping - [839568b3-1] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@1e0c898c
2025-06-30 22:41:50 [reactor-http-nio-2] DEBUG o.s.c.g.handler.FilteringWebHandler - Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@6ca30886}, order = -2147483648], [GatewayFilterAdapter{delegate=com.citi.tts.api.gateway.tracing.TraceFilter@147097ad}, order = -2147483598], com.citi.tts.api.gateway.filter.AdvancedRateLimitFilter@3c62be3c, [GatewayFilterAdapter{delegate=com.citi.tts.api.gateway.filter.QPSMetricsFilter@1f365a26}, order = -2147483548], com.citi.tts.api.gateway.filter.CircuitBreakerFilter@2dbcee03, [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@578c99ac}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@87f1201}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@3d1c8f35}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@49f9758}, order = 0], [[RewritePath /api/gateway/payment/(?<segment>.*) = '/api/payment/${segment}'], order = 0], [com.citi.tts.api.gateway.filter.ServiceDegradationGatewayFilter$1@65817c63, order = 0], [com.citi.tts.api.gateway.filter.CryptoFilter@44dcc0e4, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@7bf16972}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ReactiveLoadBalancerClientFilter@351d726c}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.LoadBalancerServiceInstanceCookieFilter@1791396b}, order = 10151], [GatewayFilterAdapter{delegate=com.citi.tts.api.gateway.filter.ServiceDegradationFilter@319058ce}, order = 2147483547], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@2dd46693}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@539bb233}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@eee26bd}, order = 2147483647]]
2025-06-30 22:41:51 [reactor-http-nio-2] DEBUG c.c.t.a.gateway.tracing.TraceContext - Created root trace context: b1d58a743ec8404098130aa24a24dcdd
2025-06-30 22:41:51 [reactor-http-nio-2] DEBUG c.c.t.a.gateway.tracing.TraceManager - Created new sampled trace context: b1d58a743ec8404098130aa24a24dcdd
2025-06-30 22:41:54 [reactor-http-nio-2] DEBUG c.c.t.a.g.f.AdvancedRateLimitFilter - Processing rate limit for: POST /api/gateway/payment/process from IP: 127.0.0.1, User: null
2025-06-30 22:41:54 [reactor-http-nio-2] DEBUG c.c.t.a.g.l.AdvancedRateLimiter - Token acquired for api_weight:NON_CORE: 1 tokens consumed, 14 remaining
2025-06-30 22:41:54 [reactor-http-nio-2] DEBUG c.c.t.a.g.filter.QPSMetricsFilter - QPS recorded - Path: /api/gateway/payment/process, IP: 127.0.0.1, User: anonymous, Priority: default
2025-06-30 22:41:54 [reactor-http-nio-2] DEBUG c.c.t.a.g.f.CircuitBreakerFilter - Using circuit breaker for API: /api/gateway/payment/process with priority: NON_CORE
2025-06-30 22:41:54 [reactor-http-nio-2] DEBUG c.c.t.a.g.f.ServiceDegradationGatewayFilter - Service degradation filter - Service: payment-service, Path: /api/payment/process, Level: CORE
2025-06-30 22:41:54 [reactor-http-nio-2] ERROR c.c.t.a.g.f.ServiceDegradationGatewayFilter - Service error detected - Service: payment-service, Path: /api/payment/process, Error: null
2025-06-30 22:41:54 [reactor-http-nio-2] DEBUG c.c.t.a.g.f.ServiceDegradationGatewayFilter - Error type NullPointerException is in non-degradation list
2025-06-30 22:41:54 [reactor-http-nio-2] INFO  c.c.t.a.g.f.ServiceDegradationGatewayFilter - Not triggering degradation for error type - Service: payment-service, Error: NullPointerException
2025-06-30 22:41:54 [reactor-http-nio-2] DEBUG r.n.http.server.HttpServerOperations - [839568b3-1, L:/127.0.0.1:8080 - R:/127.0.0.1:62864] Last HTTP response frame
2025-06-30 22:41:54 [reactor-http-nio-2] DEBUG r.n.http.server.HttpServerOperations - [839568b3-1, L:/127.0.0.1:8080 - R:/127.0.0.1:62864] Headers are not sent before onComplete().
2025-06-30 22:41:54 [reactor-http-nio-2] DEBUG r.n.http.server.HttpServerOperations - [839568b3-1, L:/127.0.0.1:8080 - R:/127.0.0.1:62864] Decreasing pending responses count: 0
2025-06-30 22:41:54 [reactor-http-nio-2] DEBUG r.n.http.server.HttpServerOperations - [839568b3-1, L:/127.0.0.1:8080 - R:/127.0.0.1:62864] Last HTTP packet was sent, terminating the channel
2025-06-30 22:41:54 [reactor-http-nio-2] DEBUG r.netty.channel.ChannelOperations - [839568b3-1, L:/127.0.0.1:8080 - R:/127.0.0.1:62864] [HttpServer] Channel inbound receiver cancelled (subscription disposed).
2025-06-30 22:41:54 [reactor-http-nio-2] DEBUG i.g.r.c.i.CircuitBreakerStateMachine - CircuitBreaker 'nonCoreApiCircuitBreaker' succeeded:
2025-06-30 22:41:54 [reactor-http-nio-2] DEBUG c.c.t.a.gateway.tracing.TraceContext - Finished trace: b1d58a743ec8404098130aa24a24dcdd with status: 500
2025-06-30 22:41:54 [reactor-http-nio-2] ERROR reactor.core.publisher.Operators - Operator called default onErrorDropped
java.lang.RuntimeException: com.fasterxml.jackson.databind.exc.InvalidDefinitionException: Java 8 date/time type `java.time.Instant` not supported by default: add Module "com.fasterxml.jackson.datatype:jackson-datatype-jsr310" to enable handling (or disable `MapperFeature.REQUIRE_HANDLERS_FOR_JAVA8_TIMES`) (through reference chain: com.citi.tts.api.gateway.tracing.TraceContext["startTime"])
	at com.citi.tts.api.gateway.tracing.TraceFilter.addTraceHeadersToResponse(TraceFilter.java:122)
	at com.citi.tts.api.gateway.tracing.TraceFilter.lambda$filter$0(TraceFilter.java:76)
	at reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.runFinally(FluxDoFinally.java:146)
	at reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete(FluxDoFinally.java:129)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at io.github.resilience4j.reactor.circuitbreaker.operator.CircuitBreakerSubscriber.hookOnComplete(CircuitBreakerSubscriber.java:69)
	at reactor.core.publisher.BaseSubscriber.onComplete(BaseSubscriber.java:197)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete(FluxDoFinally.java:128)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:210)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onComplete(MonoPeekTerminal.java:299)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onComplete(MonoPeekTerminal.java:299)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onComplete(FluxContextWrite.java:126)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onComplete(MonoPeekTerminal.java:299)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxPeekFuseable$PeekFuseableConditionalSubscriber.onComplete(FluxPeekFuseable.java:595)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onComplete(MonoPeekTerminal.java:299)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:89)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxConcatArray$ConcatArraySubscriber.onComplete(FluxConcatArray.java:209)
	at reactor.core.publisher.FluxConcatArray.subscribe(FluxConcatArray.java:79)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxFlatMap.trySubscribeScalarMap(FluxFlatMap.java:202)
	at reactor.core.publisher.MonoFlatMap.subscribeOrReturn(MonoFlatMap.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4560)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:544)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:49)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:38)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxFlatMap.trySubscribeScalarMap(FluxFlatMap.java:202)
	at reactor.core.publisher.MonoFlatMap.subscribeOrReturn(MonoFlatMap.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:63)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.drain(FluxFilterWhen.java:272)
	at reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.request(FluxFilterWhen.java:160)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:633)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:633)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:633)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:864)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:790)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:333)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:455)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: com.fasterxml.jackson.databind.exc.InvalidDefinitionException: Java 8 date/time type `java.time.Instant` not supported by default: add Module "com.fasterxml.jackson.datatype:jackson-datatype-jsr310" to enable handling (or disable `MapperFeature.REQUIRE_HANDLERS_FOR_JAVA8_TIMES`) (through reference chain: com.citi.tts.api.gateway.tracing.TraceContext["startTime"])
	at com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:77)
	at com.fasterxml.jackson.databind.SerializerProvider.reportBadDefinition(SerializerProvider.java:1359)
	at com.fasterxml.jackson.databind.ser.impl.UnsupportedTypeSerializer.serialize(UnsupportedTypeSerializer.java:34)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:760)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._serialize(DefaultSerializerProvider.java:503)
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(DefaultSerializerProvider.java:342)
	at com.fasterxml.jackson.databind.ObjectMapper._writeValueAndClose(ObjectMapper.java:4859)
	at com.fasterxml.jackson.databind.ObjectMapper.writeValueAsString(ObjectMapper.java:4079)
	at com.citi.tts.api.gateway.tracing.TraceFilter.addTraceHeadersToResponse(TraceFilter.java:120)
	... 190 common frames omitted
2025-06-30 22:41:54 [reactor-http-nio-2] DEBUG r.n.channel.ChannelOperationsHandler - [839568b3, L:/127.0.0.1:8080 - R:/127.0.0.1:62864] No ChannelOperation attached.
2025-06-30 22:42:18 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Performing periodic health check
2025-06-30 22:42:46 [boundedElastic-2] INFO  c.c.t.a.g.t.ReactiveTraceScheduler - Reactive Trace Statistics - Manager: Total=1, Sampled=1, Active=1, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0
2025-06-30 22:42:48 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Cleaning up expired instances
2025-06-30 22:42:48 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Performing periodic health check
2025-06-30 22:42:48 [scheduling-1] DEBUG c.c.t.a.g.s.QPSCleanupScheduler - Starting scheduled QPS data cleanup...
2025-06-30 22:42:48 [scheduling-1] INFO  c.c.t.api.gateway.metrics.QPSMetrics - Manual cleanup completed. Total cleaned: 0, Active entries: API=1, IP=1, User=1, Priority=1
2025-06-30 22:42:48 [scheduling-1] DEBUG c.c.t.a.g.s.QPSCleanupScheduler - Scheduled QPS data cleanup completed
2025-06-30 22:42:48 [scheduling-1] INFO  c.c.t.a.g.t.AdaptiveTraceScheduler - Adaptive Trace Statistics - Manager: Total=1, Sampled=1, Active=1, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0, Multiplier: 1.0
2025-06-30 22:42:48 [scheduling-1] INFO  c.c.t.a.g.tracing.TraceScheduler - Trace Statistics - Manager: Total=1, Sampled=1, Active=1, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0
2025-06-30 22:43:18 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Performing periodic health check
2025-06-30 22:43:46 [boundedElastic-1] INFO  c.c.t.a.g.t.ReactiveTraceScheduler - Reactive Trace Statistics - Manager: Total=1, Sampled=1, Active=1, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0
2025-06-30 22:43:48 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Cleaning up expired instances
2025-06-30 22:43:48 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Performing periodic health check
2025-06-30 22:43:48 [scheduling-1] DEBUG c.c.t.a.g.s.QPSCleanupScheduler - Starting scheduled QPS data cleanup...
2025-06-30 22:43:48 [scheduling-1] DEBUG c.c.t.api.gateway.metrics.QPSMetrics - Cleaned 1 expired API QPS entries
2025-06-30 22:43:48 [scheduling-1] DEBUG c.c.t.api.gateway.metrics.QPSMetrics - Cleaned 1 expired IP QPS entries
2025-06-30 22:43:48 [scheduling-1] DEBUG c.c.t.api.gateway.metrics.QPSMetrics - Cleaned 1 expired User QPS entries
2025-06-30 22:43:48 [scheduling-1] DEBUG c.c.t.api.gateway.metrics.QPSMetrics - Cleaned 1 expired Priority QPS entries
2025-06-30 22:43:48 [scheduling-1] INFO  c.c.t.api.gateway.metrics.QPSMetrics - Manual cleanup completed. Total cleaned: 4, Active entries: API=0, IP=0, User=0, Priority=0
2025-06-30 22:43:48 [scheduling-1] DEBUG c.c.t.a.g.s.QPSCleanupScheduler - Scheduled QPS data cleanup completed
2025-06-30 22:43:48 [scheduling-1] INFO  c.c.t.a.g.t.AdaptiveTraceScheduler - Adaptive Trace Statistics - Manager: Total=1, Sampled=1, Active=1, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0, Multiplier: 1.0
2025-06-30 22:43:48 [scheduling-1] INFO  c.c.t.a.g.tracing.TraceScheduler - Trace Statistics - Manager: Total=1, Sampled=1, Active=1, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0
2025-06-30 22:43:57 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.netty.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-06-30 22:43:57 [netty-shutdown] DEBUG r.netty.transport.ServerTransport - [9b5556de, L:/[0:0:0:0:0:0:0:0]:8080] Server is about to be disposed with timeout: PT2562047H47M16.854775807S
2025-06-30 22:43:57 [netty-shutdown] INFO  o.s.b.w.e.netty.GracefulShutdown - Graceful shutdown complete
2025-06-30 22:43:57 [SpringApplicationShutdownHook] DEBUG r.netty.transport.ServerTransport - [9b5556de, L:/[0:0:0:0:0:0:0:0]:8080] Server has been disposed
2025-06-30 22:43:59 [SpringApplicationShutdownHook] INFO  c.c.t.a.g.t.ReactiveTraceScheduler - Stopping reactive trace scheduler
2025-06-30 22:43:59 [SpringApplicationShutdownHook] INFO  c.c.t.a.g.audit.AsyncAuditService - Shutting down async audit service...
2025-06-30 22:44:04 [SpringApplicationShutdownHook] INFO  c.c.t.a.g.audit.AsyncAuditService - Async audit service shutdown completed
2025-06-30 22:44:04 [async-audit-worker] INFO  c.c.t.a.g.audit.AsyncAuditService - Async audit log processor stopped
2025-06-30 22:44:59 [main] INFO  c.c.t.api.gateway.GatewayApplication - Starting GatewayApplication using Java 21.0.7 with PID 70687 (/Users/ouyangbaobao/gateway/build/classes/java/main started by ouyangbaobao in /Users/ouyangbaobao/gateway)
2025-06-30 22:44:59 [main] DEBUG c.c.t.api.gateway.GatewayApplication - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-06-30 22:44:59 [main] INFO  c.c.t.api.gateway.GatewayApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-30 22:45:01 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:45:01 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:45:01 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:45:01 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:45:01 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:45:01 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:45:01 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:45:01 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:45:01 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:45:01 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:45:01 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:45:01 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:45:01 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:45:01 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:45:01 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:45:01 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:45:01 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:45:01 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:45:01 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:45:01 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:45:01 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:45:01 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-30 22:45:01 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-30 22:45:01 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 37 ms. Found 0 Redis repository interfaces.
2025-06-30 22:45:01 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=f4b1e6f6-9484-3bc8-a690-d233cc88f213
2025-06-30 22:45:02 [async-audit-worker] INFO  c.c.t.a.g.audit.AsyncAuditService - Async audit log processor started
2025-06-30 22:45:02 [main] INFO  c.c.t.a.g.audit.AsyncAuditService - Async audit service initialized - batchSize: 100, flushInterval: 5000ms, queueSize: 10000
2025-06-30 22:45:02 [main] INFO  c.c.t.a.g.config.WebClientConfig - Created optimized WebClient: normal-service - maxConnections: 8, maxIdleConnections: 3, connectTimeout: 2500ms, readTimeout: 5000ms, writeTimeout: 3000ms
2025-06-30 22:45:02 [main] INFO  c.c.t.a.g.config.RateLimitConfig - === 限流配置验证 ===
2025-06-30 22:45:02 [main] INFO  c.c.t.a.g.config.RateLimitConfig - 全局默认QPS: 80, Burst: 120
2025-06-30 22:45:02 [main] INFO  c.c.t.a.g.config.RateLimitConfig - IP限流: 30 QPS, 50 Burst, 启用: true
2025-06-30 22:45:02 [main] INFO  c.c.t.a.g.config.RateLimitConfig - 用户限流: 20 QPS, 35 Burst, 启用: true
2025-06-30 22:45:02 [main] INFO  c.c.t.a.g.config.RateLimitConfig - URL限流: 40 QPS, 60 Burst, 启用: true
2025-06-30 22:45:02 [main] INFO  c.c.t.a.g.config.RateLimitConfig - API权重限流启用: true
2025-06-30 22:45:02 [main] INFO  c.c.t.a.g.config.RateLimitConfig - API权重总QPS: 110 (允许轻微超载)
2025-06-30 22:45:02 [main] INFO  c.c.t.a.g.config.RateLimitConfig - === 限流配置验证完成 ===
2025-06-30 22:45:02 [main] INFO  c.c.t.a.g.services.ApiRoutingService - API priority map initialized with 15 entries
2025-06-30 22:45:02 [main] INFO  c.c.t.a.g.config.RateLimitConfig - === 限流配置验证 ===
2025-06-30 22:45:02 [main] INFO  c.c.t.a.g.config.RateLimitConfig - 全局默认QPS: 80, Burst: 120
2025-06-30 22:45:02 [main] INFO  c.c.t.a.g.config.RateLimitConfig - IP限流: 30 QPS, 50 Burst, 启用: true
2025-06-30 22:45:02 [main] INFO  c.c.t.a.g.config.RateLimitConfig - 用户限流: 20 QPS, 35 Burst, 启用: true
2025-06-30 22:45:02 [main] INFO  c.c.t.a.g.config.RateLimitConfig - URL限流: 40 QPS, 60 Burst, 启用: true
2025-06-30 22:45:02 [main] INFO  c.c.t.a.g.config.RateLimitConfig - API权重限流启用: true
2025-06-30 22:45:02 [main] INFO  c.c.t.a.g.config.RateLimitConfig - API权重总QPS: 110 (允许轻微超载)
2025-06-30 22:45:02 [main] INFO  c.c.t.a.g.config.RateLimitConfig - === 限流配置验证完成 ===
2025-06-30 22:45:03 [main] INFO  c.c.t.a.g.config.WebClientConfig - Created optimized WebClient: default - maxConnections: 6, maxIdleConnections: 2, connectTimeout: 2000ms, readTimeout: 5000ms, writeTimeout: 3000ms
2025-06-30 22:45:03 [main] INFO  c.c.t.a.g.config.WebClientConfig - Created optimized WebClient: core-service - maxConnections: 25, maxIdleConnections: 8, connectTimeout: 1500ms, readTimeout: 3000ms, writeTimeout: 2000ms
2025-06-30 22:45:03 [main] INFO  c.c.t.a.g.config.WebClientConfig - Created optimized WebClient: important-service - maxConnections: 15, maxIdleConnections: 5, connectTimeout: 2000ms, readTimeout: 4000ms, writeTimeout: 2500ms
2025-06-30 22:45:03 [main] INFO  c.c.t.a.g.config.WebClientConfig - Created optimized WebClient: non-core-service - maxConnections: 4, maxIdleConnections: 2, connectTimeout: 3000ms, readTimeout: 8000ms, writeTimeout: 4000ms
2025-06-30 22:45:03 [main] INFO  c.c.t.a.g.t.ReactiveTraceScheduler - Starting reactive trace scheduler
2025-06-30 22:45:03 [main] DEBUG o.s.c.g.f.f.c.LocalResponseCacheProperties - No TTL configuration found. Default TTL will be applied for cache entries: PT5M minutes
2025-06-30 22:45:03 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [After]
2025-06-30 22:45:03 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Before]
2025-06-30 22:45:03 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Between]
2025-06-30 22:45:03 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Cookie]
2025-06-30 22:45:03 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Header]
2025-06-30 22:45:03 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Host]
2025-06-30 22:45:03 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Method]
2025-06-30 22:45:03 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Path]
2025-06-30 22:45:03 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Query]
2025-06-30 22:45:03 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [ReadBody]
2025-06-30 22:45:03 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [RemoteAddr]
2025-06-30 22:45:03 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [XForwardedRemoteAddr]
2025-06-30 22:45:03 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Weight]
2025-06-30 22:45:03 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [CloudFoundryRouteService]
2025-06-30 22:45:04 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 5 endpoints beneath base path '/actuator'
2025-06-30 22:45:05 [main] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default LoopResources: DefaultLoopResources {prefix=reactor-http, daemon=true, selectCount=8, workerCount=8}
2025-06-30 22:45:05 [main] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default ConnectionProvider: reactor.netty.resources.DefaultPooledConnectionProvider@7f33ad20
2025-06-30 22:45:05 [main] DEBUG r.netty.resources.DefaultLoopIOUring - Default io_uring support : false
2025-06-30 22:45:05 [main] DEBUG r.netty.resources.DefaultLoopEpoll - Default Epoll support : false
2025-06-30 22:45:05 [main] DEBUG r.netty.resources.DefaultLoopKQueue - Default KQueue support : false
2025-06-30 22:45:05 [reactor-http-nio-1] DEBUG r.netty.transport.ServerTransport - [ee910d37, L:/[0:0:0:0:0:0:0:0]:8080] Bound new server
2025-06-30 22:45:05 [main] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port 8080 (http)
2025-06-30 22:45:05 [scheduling-1] DEBUG c.c.t.a.g.c.ReleaseValidationConfig - Executing auto step traffic scheduler
2025-06-30 22:45:05 [scheduling-1] DEBUG c.c.t.a.g.c.ReleaseValidationConfig - Executing release strategy health check
2025-06-30 22:45:05 [scheduling-1] DEBUG c.c.t.a.g.c.ReleaseValidationConfig - Executing cleanup completed strategies
2025-06-30 22:45:05 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Performing periodic health check
2025-06-30 22:45:05 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Cleaning up expired instances
2025-06-30 22:45:05 [scheduling-1] INFO  c.c.t.a.g.s.QPSCleanupScheduler - === QPS Summary Report ===
2025-06-30 22:45:05 [scheduling-1] INFO  c.c.t.a.g.s.QPSCleanupScheduler - Global QPS: 0
2025-06-30 22:45:05 [scheduling-1] INFO  c.c.t.a.g.s.QPSCleanupScheduler - Active APIs: 0
2025-06-30 22:45:05 [scheduling-1] INFO  c.c.t.a.g.s.QPSCleanupScheduler - Active IPs: 0
2025-06-30 22:45:05 [scheduling-1] INFO  c.c.t.a.g.s.QPSCleanupScheduler - Active Users: 0
2025-06-30 22:45:05 [scheduling-1] INFO  c.c.t.a.g.s.QPSCleanupScheduler - Active Priorities: 0
2025-06-30 22:45:05 [main] DEBUG o.s.c.g.filter.GatewayMetricsFilter - New routes count: 0
2025-06-30 22:45:05 [scheduling-1] INFO  c.c.t.a.g.s.QPSCleanupScheduler - === End QPS Summary Report ===
2025-06-30 22:45:05 [scheduling-1] DEBUG c.c.t.a.g.s.QPSCleanupScheduler - Starting scheduled QPS data cleanup...
2025-06-30 22:45:05 [scheduling-1] INFO  c.c.t.api.gateway.metrics.QPSMetrics - Manual cleanup completed. Total cleaned: 0, Active entries: API=0, IP=0, User=0, Priority=0
2025-06-30 22:45:05 [scheduling-1] DEBUG c.c.t.a.g.s.QPSCleanupScheduler - Scheduled QPS data cleanup completed
2025-06-30 22:45:05 [main] INFO  c.c.t.api.gateway.GatewayApplication - Started GatewayApplication in 6.691 seconds (process running for 8.985)
2025-06-30 22:45:05 [scheduling-1] DEBUG c.c.t.a.g.t.AdaptiveTraceScheduler - Adaptive trace cleanup completed - No traces cleaned, Duration: 2ms, Multiplier: 1.0
2025-06-30 22:45:05 [scheduling-1] INFO  c.c.t.a.g.t.AdaptiveTraceScheduler - Adaptive Trace Statistics - Manager: Total=0, Sampled=0, Active=0, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0, Multiplier: 1.0
2025-06-30 22:45:05 [scheduling-1] DEBUG c.c.t.a.g.tracing.TraceScheduler - Scheduled trace cleanup completed - No traces cleaned, Duration: 0ms
2025-06-30 22:45:05 [scheduling-1] INFO  c.c.t.a.g.tracing.TraceScheduler - Trace Statistics - Manager: Total=0, Sampled=0, Active=0, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0
2025-06-30 22:45:14 [reactor-http-nio-2] DEBUG r.n.http.server.HttpServerOperations - [5dcfc43d, L:/127.0.0.1:8080 - R:/127.0.0.1:63211] New http connection, requesting read
2025-06-30 22:45:14 [reactor-http-nio-2] DEBUG r.netty.transport.TransportConfig - [5dcfc43d, L:/127.0.0.1:8080 - R:/127.0.0.1:63211] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpServerCodec), (reactor.left.httpTrafficHandler = reactor.netty.http.server.HttpTrafficHandler), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-06-30 22:45:14 [reactor-http-nio-2] DEBUG r.n.http.server.HttpServerOperations - [5dcfc43d, L:/127.0.0.1:8080 - R:/127.0.0.1:63211] Increasing pending responses count: 1
2025-06-30 22:45:14 [reactor-http-nio-2] DEBUG r.netty.http.server.HttpServer - [5dcfc43d-1, L:/127.0.0.1:8080 - R:/127.0.0.1:63211] Handler is being applied: org.springframework.http.server.reactive.ReactorHttpHandlerAdapter@5bac073
2025-06-30 22:45:14 [reactor-http-nio-2] DEBUG o.s.c.g.h.RoutePredicateHandlerMapping - Route matched: payment-route
2025-06-30 22:45:14 [reactor-http-nio-2] DEBUG o.s.c.g.h.RoutePredicateHandlerMapping - Mapping [Exchange: POST http://localhost:8080/api/gateway/payment/process] to Route{id='payment-route', uri=http://localhost:8081, order=0, predicate=Paths: [/api/gateway/payment/**], match trailing slash: true, gatewayFilters=[[[RewritePath /api/gateway/payment/(?<segment>.*) = '/api/payment/${segment}'], order = 0], com.citi.tts.api.gateway.filter.AdvancedRateLimitFilter@35d4035f, [com.citi.tts.api.gateway.filter.ServiceDegradationGatewayFilter$1@3818cbf2, order = 0], com.citi.tts.api.gateway.filter.CircuitBreakerFilter@353422fd, [com.citi.tts.api.gateway.filter.CryptoFilter@2dbcee03, order = 0]], metadata={}}
2025-06-30 22:45:14 [reactor-http-nio-2] DEBUG o.s.c.g.h.RoutePredicateHandlerMapping - [5dcfc43d-1] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@6f6c6c70
2025-06-30 22:45:14 [reactor-http-nio-2] DEBUG o.s.c.g.handler.FilteringWebHandler - Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@53c9541c}, order = -2147483648], [GatewayFilterAdapter{delegate=com.citi.tts.api.gateway.tracing.TraceFilter@5dac6bc3}, order = -2147483598], com.citi.tts.api.gateway.filter.AdvancedRateLimitFilter@35d4035f, [GatewayFilterAdapter{delegate=com.citi.tts.api.gateway.filter.QPSMetricsFilter@abf1816}, order = -2147483548], com.citi.tts.api.gateway.filter.CircuitBreakerFilter@353422fd, [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@5ec06e97}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@421d7900}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@600e2000}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@3fd21272}, order = 0], [[RewritePath /api/gateway/payment/(?<segment>.*) = '/api/payment/${segment}'], order = 0], [com.citi.tts.api.gateway.filter.ServiceDegradationGatewayFilter$1@3818cbf2, order = 0], [com.citi.tts.api.gateway.filter.CryptoFilter@2dbcee03, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@591febcb}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ReactiveLoadBalancerClientFilter@1b82f62a}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.LoadBalancerServiceInstanceCookieFilter@2184962c}, order = 10151], [GatewayFilterAdapter{delegate=com.citi.tts.api.gateway.filter.ServiceDegradationFilter@6a562255}, order = 2147483547], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@6a6a3fc4}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@1db9c2cf}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@3d6745ed}, order = 2147483647]]
2025-06-30 22:45:14 [reactor-http-nio-2] DEBUG c.c.t.a.gateway.tracing.TraceContext - Created root trace context: 44f6bc15c9e14629b6ca3517104e1313
2025-06-30 22:45:14 [reactor-http-nio-2] DEBUG c.c.t.a.gateway.tracing.TraceManager - Created new sampled trace context: 44f6bc15c9e14629b6ca3517104e1313
2025-06-30 22:45:18 [reactor-http-nio-2] DEBUG c.c.t.a.g.f.AdvancedRateLimitFilter - Processing rate limit for: POST /api/gateway/payment/process from IP: 127.0.0.1, User: null
2025-06-30 22:45:18 [reactor-http-nio-2] DEBUG c.c.t.a.g.l.AdvancedRateLimiter - Token acquired for api_weight:NON_CORE: 1 tokens consumed, 14 remaining
2025-06-30 22:45:18 [reactor-http-nio-2] WARN  c.c.t.a.g.f.AdvancedRateLimitFilter - Rate limit processing took 13ms for path: /api/gateway/payment/process
2025-06-30 22:45:18 [reactor-http-nio-2] DEBUG c.c.t.a.g.filter.QPSMetricsFilter - QPS recorded - Path: /api/gateway/payment/process, IP: 127.0.0.1, User: anonymous, Priority: default
2025-06-30 22:45:18 [reactor-http-nio-2] DEBUG c.c.t.a.g.f.CircuitBreakerFilter - Using circuit breaker for API: /api/gateway/payment/process with priority: NON_CORE
2025-06-30 22:45:18 [reactor-http-nio-2] DEBUG c.c.t.a.g.f.ServiceDegradationGatewayFilter - Service degradation filter - Service: payment-service, Path: /api/payment/process, Level: CORE
2025-06-30 22:45:18 [reactor-http-nio-2] ERROR c.c.t.a.g.f.ServiceDegradationGatewayFilter - Service error detected - Service: payment-service, Path: /api/payment/process, Error: null
2025-06-30 22:45:18 [reactor-http-nio-2] DEBUG c.c.t.a.g.f.ServiceDegradationGatewayFilter - Error type NullPointerException is in non-degradation list
2025-06-30 22:45:18 [reactor-http-nio-2] INFO  c.c.t.a.g.f.ServiceDegradationGatewayFilter - Not triggering degradation for error type - Service: payment-service, Error: NullPointerException
2025-06-30 22:45:18 [reactor-http-nio-2] DEBUG r.n.http.server.HttpServerOperations - [5dcfc43d-1, L:/127.0.0.1:8080 - R:/127.0.0.1:63211] Last HTTP response frame
2025-06-30 22:45:18 [reactor-http-nio-2] DEBUG r.n.http.server.HttpServerOperations - [5dcfc43d-1, L:/127.0.0.1:8080 - R:/127.0.0.1:63211] Headers are not sent before onComplete().
2025-06-30 22:45:18 [reactor-http-nio-2] DEBUG r.n.http.server.HttpServerOperations - [5dcfc43d-1, L:/127.0.0.1:8080 - R:/127.0.0.1:63211] Decreasing pending responses count: 0
2025-06-30 22:45:18 [reactor-http-nio-2] DEBUG r.n.http.server.HttpServerOperations - [5dcfc43d-1, L:/127.0.0.1:8080 - R:/127.0.0.1:63211] Last HTTP packet was sent, terminating the channel
2025-06-30 22:45:18 [reactor-http-nio-2] DEBUG r.netty.channel.ChannelOperations - [5dcfc43d-1, L:/127.0.0.1:8080 - R:/127.0.0.1:63211] [HttpServer] Channel inbound receiver cancelled (subscription disposed).
2025-06-30 22:45:18 [reactor-http-nio-2] DEBUG i.g.r.c.i.CircuitBreakerStateMachine - CircuitBreaker 'nonCoreApiCircuitBreaker' succeeded:
2025-06-30 22:45:18 [reactor-http-nio-2] DEBUG c.c.t.a.gateway.tracing.TraceContext - Finished trace: 44f6bc15c9e14629b6ca3517104e1313 with status: 500
2025-06-30 22:45:18 [reactor-http-nio-2] ERROR reactor.core.publisher.Operators - Operator called default onErrorDropped
java.lang.RuntimeException: com.fasterxml.jackson.databind.exc.InvalidDefinitionException: Java 8 date/time type `java.time.Instant` not supported by default: add Module "com.fasterxml.jackson.datatype:jackson-datatype-jsr310" to enable handling (or disable `MapperFeature.REQUIRE_HANDLERS_FOR_JAVA8_TIMES`) (through reference chain: com.citi.tts.api.gateway.tracing.TraceContext["events"]->java.util.ArrayList[0]->com.citi.tts.api.gateway.tracing.TraceContext$TraceEvent["timestamp"])
	at com.citi.tts.api.gateway.tracing.TraceFilter.addTraceHeadersToResponse(TraceFilter.java:122)
	at com.citi.tts.api.gateway.tracing.TraceFilter.lambda$filter$0(TraceFilter.java:76)
	at reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.runFinally(FluxDoFinally.java:146)
	at reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete(FluxDoFinally.java:129)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at io.github.resilience4j.reactor.circuitbreaker.operator.CircuitBreakerSubscriber.hookOnComplete(CircuitBreakerSubscriber.java:69)
	at reactor.core.publisher.BaseSubscriber.onComplete(BaseSubscriber.java:197)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete(FluxDoFinally.java:128)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:210)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onComplete(MonoPeekTerminal.java:299)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onComplete(MonoPeekTerminal.java:299)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onComplete(FluxContextWrite.java:126)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onComplete(MonoPeekTerminal.java:299)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxPeekFuseable$PeekFuseableConditionalSubscriber.onComplete(FluxPeekFuseable.java:595)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onComplete(MonoPeekTerminal.java:299)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:89)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxConcatArray$ConcatArraySubscriber.onComplete(FluxConcatArray.java:209)
	at reactor.core.publisher.FluxConcatArray.subscribe(FluxConcatArray.java:79)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxFlatMap.trySubscribeScalarMap(FluxFlatMap.java:202)
	at reactor.core.publisher.MonoFlatMap.subscribeOrReturn(MonoFlatMap.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4560)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:544)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:49)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:38)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxFlatMap.trySubscribeScalarMap(FluxFlatMap.java:202)
	at reactor.core.publisher.MonoFlatMap.subscribeOrReturn(MonoFlatMap.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:63)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.drain(FluxFilterWhen.java:272)
	at reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.request(FluxFilterWhen.java:160)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:633)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:633)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:633)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:864)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:790)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:333)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:455)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: com.fasterxml.jackson.databind.exc.InvalidDefinitionException: Java 8 date/time type `java.time.Instant` not supported by default: add Module "com.fasterxml.jackson.datatype:jackson-datatype-jsr310" to enable handling (or disable `MapperFeature.REQUIRE_HANDLERS_FOR_JAVA8_TIMES`) (through reference chain: com.citi.tts.api.gateway.tracing.TraceContext["events"]->java.util.ArrayList[0]->com.citi.tts.api.gateway.tracing.TraceContext$TraceEvent["timestamp"])
	at com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:77)
	at com.fasterxml.jackson.databind.SerializerProvider.reportBadDefinition(SerializerProvider.java:1359)
	at com.fasterxml.jackson.databind.ser.impl.UnsupportedTypeSerializer.serialize(UnsupportedTypeSerializer.java:34)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:760)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serializeContents(IndexedListSerializer.java:119)
	at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serialize(IndexedListSerializer.java:79)
	at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serialize(IndexedListSerializer.java:18)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:760)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._serialize(DefaultSerializerProvider.java:503)
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(DefaultSerializerProvider.java:342)
	at com.fasterxml.jackson.databind.ObjectMapper._writeValueAndClose(ObjectMapper.java:4859)
	at com.fasterxml.jackson.databind.ObjectMapper.writeValueAsString(ObjectMapper.java:4079)
	at com.citi.tts.api.gateway.tracing.TraceFilter.addTraceHeadersToResponse(TraceFilter.java:120)
	... 190 common frames omitted
2025-06-30 22:45:18 [reactor-http-nio-2] DEBUG r.n.channel.ChannelOperationsHandler - [5dcfc43d, L:/127.0.0.1:8080 - R:/127.0.0.1:63211] No ChannelOperation attached.
2025-06-30 22:45:35 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Performing periodic health check
2025-06-30 22:46:03 [boundedElastic-1] INFO  c.c.t.a.g.t.ReactiveTraceScheduler - Reactive Trace Statistics - Manager: Total=1, Sampled=1, Active=1, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0
2025-06-30 22:46:05 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Performing periodic health check
2025-06-30 22:46:05 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Cleaning up expired instances
2025-06-30 22:46:05 [scheduling-1] DEBUG c.c.t.a.g.s.QPSCleanupScheduler - Starting scheduled QPS data cleanup...
2025-06-30 22:46:05 [scheduling-1] INFO  c.c.t.api.gateway.metrics.QPSMetrics - Manual cleanup completed. Total cleaned: 0, Active entries: API=1, IP=1, User=1, Priority=1
2025-06-30 22:46:05 [scheduling-1] DEBUG c.c.t.a.g.s.QPSCleanupScheduler - Scheduled QPS data cleanup completed
2025-06-30 22:46:05 [scheduling-1] INFO  c.c.t.a.g.t.AdaptiveTraceScheduler - Adaptive Trace Statistics - Manager: Total=1, Sampled=1, Active=1, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0, Multiplier: 1.0
2025-06-30 22:46:05 [scheduling-1] INFO  c.c.t.a.g.tracing.TraceScheduler - Trace Statistics - Manager: Total=1, Sampled=1, Active=1, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0
2025-06-30 22:46:35 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Performing periodic health check
2025-06-30 22:46:58 [reactor-http-nio-3] DEBUG r.n.http.server.HttpServerOperations - [390ea3b2, L:/127.0.0.1:8080 - R:/127.0.0.1:63515] New http connection, requesting read
2025-06-30 22:46:58 [reactor-http-nio-3] DEBUG r.netty.transport.TransportConfig - [390ea3b2, L:/127.0.0.1:8080 - R:/127.0.0.1:63515] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpServerCodec), (reactor.left.httpTrafficHandler = reactor.netty.http.server.HttpTrafficHandler), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-06-30 22:46:58 [reactor-http-nio-3] DEBUG r.n.http.server.HttpServerOperations - [390ea3b2, L:/127.0.0.1:8080 - R:/127.0.0.1:63515] Increasing pending responses count: 1
2025-06-30 22:46:58 [reactor-http-nio-3] DEBUG r.netty.http.server.HttpServer - [390ea3b2-1, L:/127.0.0.1:8080 - R:/127.0.0.1:63515] Handler is being applied: org.springframework.http.server.reactive.ReactorHttpHandlerAdapter@5bac073
2025-06-30 22:46:58 [reactor-http-nio-3] DEBUG o.s.c.g.h.RoutePredicateHandlerMapping - Route matched: payment-route
2025-06-30 22:46:58 [reactor-http-nio-3] DEBUG o.s.c.g.h.RoutePredicateHandlerMapping - Mapping [Exchange: POST http://localhost:8080/api/gateway/payment/process] to Route{id='payment-route', uri=http://localhost:8081, order=0, predicate=Paths: [/api/gateway/payment/**], match trailing slash: true, gatewayFilters=[[[RewritePath /api/gateway/payment/(?<segment>.*) = '/api/payment/${segment}'], order = 0], com.citi.tts.api.gateway.filter.AdvancedRateLimitFilter@35d4035f, [com.citi.tts.api.gateway.filter.ServiceDegradationGatewayFilter$1@3818cbf2, order = 0], com.citi.tts.api.gateway.filter.CircuitBreakerFilter@353422fd, [com.citi.tts.api.gateway.filter.CryptoFilter@2dbcee03, order = 0]], metadata={}}
2025-06-30 22:46:58 [reactor-http-nio-3] DEBUG o.s.c.g.h.RoutePredicateHandlerMapping - [390ea3b2-2] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@6f6c6c70
2025-06-30 22:46:58 [reactor-http-nio-3] DEBUG o.s.c.g.handler.FilteringWebHandler - Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@53c9541c}, order = -2147483648], [GatewayFilterAdapter{delegate=com.citi.tts.api.gateway.tracing.TraceFilter@5dac6bc3}, order = -2147483598], com.citi.tts.api.gateway.filter.AdvancedRateLimitFilter@35d4035f, [GatewayFilterAdapter{delegate=com.citi.tts.api.gateway.filter.QPSMetricsFilter@abf1816}, order = -2147483548], com.citi.tts.api.gateway.filter.CircuitBreakerFilter@353422fd, [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@5ec06e97}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@421d7900}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@600e2000}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@3fd21272}, order = 0], [[RewritePath /api/gateway/payment/(?<segment>.*) = '/api/payment/${segment}'], order = 0], [com.citi.tts.api.gateway.filter.ServiceDegradationGatewayFilter$1@3818cbf2, order = 0], [com.citi.tts.api.gateway.filter.CryptoFilter@2dbcee03, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@591febcb}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ReactiveLoadBalancerClientFilter@1b82f62a}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.LoadBalancerServiceInstanceCookieFilter@2184962c}, order = 10151], [GatewayFilterAdapter{delegate=com.citi.tts.api.gateway.filter.ServiceDegradationFilter@6a562255}, order = 2147483547], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@6a6a3fc4}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@1db9c2cf}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@3d6745ed}, order = 2147483647]]
2025-06-30 22:46:58 [reactor-http-nio-3] DEBUG c.c.t.a.gateway.tracing.TraceContext - Created root trace context: 7ac3530c147e48b4a19232ff5630e597
2025-06-30 22:46:58 [reactor-http-nio-3] DEBUG c.c.t.a.gateway.tracing.TraceManager - Created new sampled trace context: 7ac3530c147e48b4a19232ff5630e597
2025-06-30 22:47:01 [reactor-http-nio-3] DEBUG c.c.t.a.g.f.AdvancedRateLimitFilter - Processing rate limit for: POST /api/gateway/payment/process from IP: 127.0.0.1, User: null
2025-06-30 22:47:01 [reactor-http-nio-3] DEBUG c.c.t.a.g.l.AdvancedRateLimiter - Tokens refilled for api_weight:NON_CORE: +1020 tokens, total: 15
2025-06-30 22:47:01 [reactor-http-nio-3] DEBUG c.c.t.a.g.l.AdvancedRateLimiter - Token acquired for api_weight:NON_CORE: 1 tokens consumed, 14 remaining
2025-06-30 22:47:01 [reactor-http-nio-3] DEBUG c.c.t.a.g.filter.QPSMetricsFilter - QPS recorded - Path: /api/gateway/payment/process, IP: 127.0.0.1, User: anonymous, Priority: default
2025-06-30 22:47:01 [reactor-http-nio-3] DEBUG c.c.t.a.g.f.CircuitBreakerFilter - Using circuit breaker for API: /api/gateway/payment/process with priority: NON_CORE
2025-06-30 22:47:01 [reactor-http-nio-3] DEBUG c.c.t.a.g.f.ServiceDegradationGatewayFilter - Service degradation filter - Service: payment-service, Path: /api/payment/process, Level: CORE
2025-06-30 22:47:01 [reactor-http-nio-3] ERROR c.c.t.a.g.f.ServiceDegradationGatewayFilter - Service error detected - Service: payment-service, Path: /api/payment/process, Error: null
2025-06-30 22:47:01 [reactor-http-nio-3] DEBUG c.c.t.a.g.f.ServiceDegradationGatewayFilter - Error type NullPointerException is in non-degradation list
2025-06-30 22:47:01 [reactor-http-nio-3] INFO  c.c.t.a.g.f.ServiceDegradationGatewayFilter - Not triggering degradation for error type - Service: payment-service, Error: NullPointerException
2025-06-30 22:47:01 [reactor-http-nio-3] DEBUG r.n.http.server.HttpServerOperations - [390ea3b2-1, L:/127.0.0.1:8080 - R:/127.0.0.1:63515] Last HTTP response frame
2025-06-30 22:47:01 [reactor-http-nio-3] DEBUG r.n.http.server.HttpServerOperations - [390ea3b2-1, L:/127.0.0.1:8080 - R:/127.0.0.1:63515] Headers are not sent before onComplete().
2025-06-30 22:47:01 [reactor-http-nio-3] DEBUG r.n.http.server.HttpServerOperations - [390ea3b2-1, L:/127.0.0.1:8080 - R:/127.0.0.1:63515] Decreasing pending responses count: 0
2025-06-30 22:47:01 [reactor-http-nio-3] DEBUG r.n.http.server.HttpServerOperations - [390ea3b2-1, L:/127.0.0.1:8080 - R:/127.0.0.1:63515] Last HTTP packet was sent, terminating the channel
2025-06-30 22:47:01 [reactor-http-nio-3] DEBUG r.netty.channel.ChannelOperations - [390ea3b2-1, L:/127.0.0.1:8080 - R:/127.0.0.1:63515] [HttpServer] Channel inbound receiver cancelled (subscription disposed).
2025-06-30 22:47:01 [reactor-http-nio-3] DEBUG i.g.r.c.i.CircuitBreakerStateMachine - CircuitBreaker 'nonCoreApiCircuitBreaker' succeeded:
2025-06-30 22:47:01 [reactor-http-nio-3] DEBUG c.c.t.a.gateway.tracing.TraceContext - Finished trace: 7ac3530c147e48b4a19232ff5630e597 with status: 500
2025-06-30 22:47:01 [reactor-http-nio-3] ERROR reactor.core.publisher.Operators - Operator called default onErrorDropped
java.lang.RuntimeException: com.fasterxml.jackson.databind.exc.InvalidDefinitionException: Java 8 date/time type `java.time.Instant` not supported by default: add Module "com.fasterxml.jackson.datatype:jackson-datatype-jsr310" to enable handling (or disable `MapperFeature.REQUIRE_HANDLERS_FOR_JAVA8_TIMES`) (through reference chain: com.citi.tts.api.gateway.tracing.TraceContext["events"]->java.util.ArrayList[0]->com.citi.tts.api.gateway.tracing.TraceContext$TraceEvent["timestamp"])
	at com.citi.tts.api.gateway.tracing.TraceFilter.addTraceHeadersToResponse(TraceFilter.java:122)
	at com.citi.tts.api.gateway.tracing.TraceFilter.lambda$filter$0(TraceFilter.java:76)
	at reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.runFinally(FluxDoFinally.java:146)
	at reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete(FluxDoFinally.java:129)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at io.github.resilience4j.reactor.circuitbreaker.operator.CircuitBreakerSubscriber.hookOnComplete(CircuitBreakerSubscriber.java:69)
	at reactor.core.publisher.BaseSubscriber.onComplete(BaseSubscriber.java:197)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete(FluxDoFinally.java:128)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:210)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onComplete(MonoPeekTerminal.java:299)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onComplete(MonoPeekTerminal.java:299)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onComplete(FluxContextWrite.java:126)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onComplete(MonoPeekTerminal.java:299)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxPeekFuseable$PeekFuseableConditionalSubscriber.onComplete(FluxPeekFuseable.java:595)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onComplete(MonoPeekTerminal.java:299)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:89)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxConcatArray$ConcatArraySubscriber.onComplete(FluxConcatArray.java:209)
	at reactor.core.publisher.FluxConcatArray.subscribe(FluxConcatArray.java:79)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxFlatMap.trySubscribeScalarMap(FluxFlatMap.java:202)
	at reactor.core.publisher.MonoFlatMap.subscribeOrReturn(MonoFlatMap.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4560)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:544)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:49)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:38)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxFlatMap.trySubscribeScalarMap(FluxFlatMap.java:202)
	at reactor.core.publisher.MonoFlatMap.subscribeOrReturn(MonoFlatMap.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:63)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.drain(FluxFilterWhen.java:272)
	at reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.request(FluxFilterWhen.java:160)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:633)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:633)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:633)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:864)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:790)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:333)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:455)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: com.fasterxml.jackson.databind.exc.InvalidDefinitionException: Java 8 date/time type `java.time.Instant` not supported by default: add Module "com.fasterxml.jackson.datatype:jackson-datatype-jsr310" to enable handling (or disable `MapperFeature.REQUIRE_HANDLERS_FOR_JAVA8_TIMES`) (through reference chain: com.citi.tts.api.gateway.tracing.TraceContext["events"]->java.util.ArrayList[0]->com.citi.tts.api.gateway.tracing.TraceContext$TraceEvent["timestamp"])
	at com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:77)
	at com.fasterxml.jackson.databind.SerializerProvider.reportBadDefinition(SerializerProvider.java:1359)
	at com.fasterxml.jackson.databind.ser.impl.UnsupportedTypeSerializer.serialize(UnsupportedTypeSerializer.java:34)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:760)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serializeContents(IndexedListSerializer.java:119)
	at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serialize(IndexedListSerializer.java:79)
	at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serialize(IndexedListSerializer.java:18)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:760)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._serialize(DefaultSerializerProvider.java:503)
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(DefaultSerializerProvider.java:342)
	at com.fasterxml.jackson.databind.ObjectMapper._writeValueAndClose(ObjectMapper.java:4859)
	at com.fasterxml.jackson.databind.ObjectMapper.writeValueAsString(ObjectMapper.java:4079)
	at com.citi.tts.api.gateway.tracing.TraceFilter.addTraceHeadersToResponse(TraceFilter.java:120)
	... 190 common frames omitted
2025-06-30 22:47:01 [reactor-http-nio-3] DEBUG r.n.channel.ChannelOperationsHandler - [390ea3b2, L:/127.0.0.1:8080 - R:/127.0.0.1:63515] No ChannelOperation attached.
2025-06-30 22:47:03 [boundedElastic-2] INFO  c.c.t.a.g.t.ReactiveTraceScheduler - Reactive Trace Statistics - Manager: Total=2, Sampled=2, Active=2, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0
2025-06-30 22:47:05 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Performing periodic health check
2025-06-30 22:47:05 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Cleaning up expired instances
2025-06-30 22:47:05 [scheduling-1] DEBUG c.c.t.a.g.s.QPSCleanupScheduler - Starting scheduled QPS data cleanup...
2025-06-30 22:47:05 [scheduling-1] INFO  c.c.t.api.gateway.metrics.QPSMetrics - Manual cleanup completed. Total cleaned: 0, Active entries: API=1, IP=1, User=1, Priority=1
2025-06-30 22:47:05 [scheduling-1] DEBUG c.c.t.a.g.s.QPSCleanupScheduler - Scheduled QPS data cleanup completed
2025-06-30 22:47:05 [scheduling-1] INFO  c.c.t.a.g.t.AdaptiveTraceScheduler - Adaptive Trace Statistics - Manager: Total=2, Sampled=2, Active=2, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0, Multiplier: 1.0
2025-06-30 22:47:05 [scheduling-1] INFO  c.c.t.a.g.tracing.TraceScheduler - Trace Statistics - Manager: Total=2, Sampled=2, Active=2, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0
2025-06-30 22:47:35 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Performing periodic health check
2025-06-30 22:47:37 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.netty.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-06-30 22:47:37 [netty-shutdown] DEBUG r.netty.transport.ServerTransport - [ee910d37, L:/[0:0:0:0:0:0:0:0]:8080] Server is about to be disposed with timeout: PT2562047H47M16.854775807S
2025-06-30 22:47:37 [netty-shutdown] INFO  o.s.b.w.e.netty.GracefulShutdown - Graceful shutdown complete
2025-06-30 22:47:37 [SpringApplicationShutdownHook] DEBUG r.netty.transport.ServerTransport - [ee910d37, L:/[0:0:0:0:0:0:0:0]:8080] Server has been disposed
2025-06-30 22:47:40 [SpringApplicationShutdownHook] INFO  c.c.t.a.g.t.ReactiveTraceScheduler - Stopping reactive trace scheduler
2025-06-30 22:47:40 [SpringApplicationShutdownHook] INFO  c.c.t.a.g.audit.AsyncAuditService - Shutting down async audit service...
2025-06-30 22:47:45 [async-audit-worker] INFO  c.c.t.a.g.audit.AsyncAuditService - Async audit log processor stopped
2025-06-30 22:47:45 [SpringApplicationShutdownHook] INFO  c.c.t.a.g.audit.AsyncAuditService - Async audit service shutdown completed
2025-06-30 22:48:05 [main] INFO  c.c.t.api.gateway.GatewayApplication - Starting GatewayApplication using Java 21.0.7 with PID 71060 (/Users/ouyangbaobao/gateway/build/classes/java/main started by ouyangbaobao in /Users/ouyangbaobao/gateway)
2025-06-30 22:48:05 [main] DEBUG c.c.t.api.gateway.GatewayApplication - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-06-30 22:48:05 [main] INFO  c.c.t.api.gateway.GatewayApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-30 22:48:06 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:48:06 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:48:06 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:48:06 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:48:06 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:48:06 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:48:06 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:48:06 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:48:06 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:48:06 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:48:06 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:48:06 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:48:06 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:48:06 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:48:06 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:48:06 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:48:06 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:48:06 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:48:06 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:48:06 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:48:06 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:48:07 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-30 22:48:07 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-30 22:48:07 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 36 ms. Found 0 Redis repository interfaces.
2025-06-30 22:48:08 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=f4b1e6f6-9484-3bc8-a690-d233cc88f213
2025-06-30 22:48:08 [async-audit-worker] INFO  c.c.t.a.g.audit.AsyncAuditService - Async audit log processor started
2025-06-30 22:48:08 [main] INFO  c.c.t.a.g.audit.AsyncAuditService - Async audit service initialized - batchSize: 100, flushInterval: 5000ms, queueSize: 10000
2025-06-30 22:48:08 [main] INFO  c.c.t.a.g.config.WebClientConfig - Created optimized WebClient: normal-service - maxConnections: 8, maxIdleConnections: 3, connectTimeout: 2500ms, readTimeout: 5000ms, writeTimeout: 3000ms
2025-06-30 22:48:08 [main] INFO  c.c.t.a.g.config.RateLimitConfig - === 限流配置验证 ===
2025-06-30 22:48:08 [main] INFO  c.c.t.a.g.config.RateLimitConfig - 全局默认QPS: 80, Burst: 120
2025-06-30 22:48:08 [main] INFO  c.c.t.a.g.config.RateLimitConfig - IP限流: 30 QPS, 50 Burst, 启用: true
2025-06-30 22:48:08 [main] INFO  c.c.t.a.g.config.RateLimitConfig - 用户限流: 20 QPS, 35 Burst, 启用: true
2025-06-30 22:48:08 [main] INFO  c.c.t.a.g.config.RateLimitConfig - URL限流: 40 QPS, 60 Burst, 启用: true
2025-06-30 22:48:08 [main] INFO  c.c.t.a.g.config.RateLimitConfig - API权重限流启用: true
2025-06-30 22:48:08 [main] INFO  c.c.t.a.g.config.RateLimitConfig - API权重总QPS: 110 (允许轻微超载)
2025-06-30 22:48:08 [main] INFO  c.c.t.a.g.config.RateLimitConfig - === 限流配置验证完成 ===
2025-06-30 22:48:09 [main] INFO  c.c.t.a.g.services.ApiRoutingService - API priority map initialized with 15 entries
2025-06-30 22:48:09 [main] INFO  c.c.t.a.g.config.RateLimitConfig - === 限流配置验证 ===
2025-06-30 22:48:09 [main] INFO  c.c.t.a.g.config.RateLimitConfig - 全局默认QPS: 80, Burst: 120
2025-06-30 22:48:09 [main] INFO  c.c.t.a.g.config.RateLimitConfig - IP限流: 30 QPS, 50 Burst, 启用: true
2025-06-30 22:48:09 [main] INFO  c.c.t.a.g.config.RateLimitConfig - 用户限流: 20 QPS, 35 Burst, 启用: true
2025-06-30 22:48:09 [main] INFO  c.c.t.a.g.config.RateLimitConfig - URL限流: 40 QPS, 60 Burst, 启用: true
2025-06-30 22:48:09 [main] INFO  c.c.t.a.g.config.RateLimitConfig - API权重限流启用: true
2025-06-30 22:48:09 [main] INFO  c.c.t.a.g.config.RateLimitConfig - API权重总QPS: 110 (允许轻微超载)
2025-06-30 22:48:09 [main] INFO  c.c.t.a.g.config.RateLimitConfig - === 限流配置验证完成 ===
2025-06-30 22:48:10 [main] INFO  c.c.t.a.g.config.WebClientConfig - Created optimized WebClient: default - maxConnections: 6, maxIdleConnections: 2, connectTimeout: 2000ms, readTimeout: 5000ms, writeTimeout: 3000ms
2025-06-30 22:48:10 [main] INFO  c.c.t.a.g.config.WebClientConfig - Created optimized WebClient: core-service - maxConnections: 25, maxIdleConnections: 8, connectTimeout: 1500ms, readTimeout: 3000ms, writeTimeout: 2000ms
2025-06-30 22:48:10 [main] INFO  c.c.t.a.g.config.WebClientConfig - Created optimized WebClient: important-service - maxConnections: 15, maxIdleConnections: 5, connectTimeout: 2000ms, readTimeout: 4000ms, writeTimeout: 2500ms
2025-06-30 22:48:10 [main] INFO  c.c.t.a.g.config.WebClientConfig - Created optimized WebClient: non-core-service - maxConnections: 4, maxIdleConnections: 2, connectTimeout: 3000ms, readTimeout: 8000ms, writeTimeout: 4000ms
2025-06-30 22:48:10 [main] INFO  c.c.t.a.g.t.ReactiveTraceScheduler - Starting reactive trace scheduler
2025-06-30 22:48:10 [main] DEBUG o.s.c.g.f.f.c.LocalResponseCacheProperties - No TTL configuration found. Default TTL will be applied for cache entries: PT5M minutes
2025-06-30 22:48:10 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [After]
2025-06-30 22:48:10 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Before]
2025-06-30 22:48:10 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Between]
2025-06-30 22:48:10 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Cookie]
2025-06-30 22:48:10 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Header]
2025-06-30 22:48:10 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Host]
2025-06-30 22:48:10 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Method]
2025-06-30 22:48:10 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Path]
2025-06-30 22:48:10 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Query]
2025-06-30 22:48:10 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [ReadBody]
2025-06-30 22:48:10 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [RemoteAddr]
2025-06-30 22:48:10 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [XForwardedRemoteAddr]
2025-06-30 22:48:10 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Weight]
2025-06-30 22:48:10 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [CloudFoundryRouteService]
2025-06-30 22:48:11 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 5 endpoints beneath base path '/actuator'
2025-06-30 22:48:11 [main] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default LoopResources: DefaultLoopResources {prefix=reactor-http, daemon=true, selectCount=8, workerCount=8}
2025-06-30 22:48:12 [main] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default ConnectionProvider: reactor.netty.resources.DefaultPooledConnectionProvider@969c2f9
2025-06-30 22:48:12 [main] DEBUG r.netty.resources.DefaultLoopIOUring - Default io_uring support : false
2025-06-30 22:48:12 [main] DEBUG r.netty.resources.DefaultLoopEpoll - Default Epoll support : false
2025-06-30 22:48:12 [main] DEBUG r.netty.resources.DefaultLoopKQueue - Default KQueue support : false
2025-06-30 22:48:12 [reactor-http-nio-1] DEBUG r.netty.transport.ServerTransport - [e88d4399, L:/[0:0:0:0:0:0:0:0]:8080] Bound new server
2025-06-30 22:48:12 [main] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port 8080 (http)
2025-06-30 22:48:12 [scheduling-1] DEBUG c.c.t.a.g.c.ReleaseValidationConfig - Executing auto step traffic scheduler
2025-06-30 22:48:12 [main] DEBUG o.s.c.g.filter.GatewayMetricsFilter - New routes count: 0
2025-06-30 22:48:12 [scheduling-1] DEBUG c.c.t.a.g.c.ReleaseValidationConfig - Executing release strategy health check
2025-06-30 22:48:12 [scheduling-1] DEBUG c.c.t.a.g.c.ReleaseValidationConfig - Executing cleanup completed strategies
2025-06-30 22:48:12 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Performing periodic health check
2025-06-30 22:48:12 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Cleaning up expired instances
2025-06-30 22:48:12 [main] INFO  c.c.t.api.gateway.GatewayApplication - Started GatewayApplication in 7.719 seconds (process running for 9.239)
2025-06-30 22:48:12 [scheduling-1] DEBUG c.c.t.a.g.s.QPSCleanupScheduler - Starting scheduled QPS data cleanup...
2025-06-30 22:48:12 [scheduling-1] INFO  c.c.t.api.gateway.metrics.QPSMetrics - Manual cleanup completed. Total cleaned: 0, Active entries: API=0, IP=0, User=0, Priority=0
2025-06-30 22:48:12 [scheduling-1] DEBUG c.c.t.a.g.s.QPSCleanupScheduler - Scheduled QPS data cleanup completed
2025-06-30 22:48:12 [scheduling-1] INFO  c.c.t.a.g.s.QPSCleanupScheduler - === QPS Summary Report ===
2025-06-30 22:48:12 [scheduling-1] INFO  c.c.t.a.g.s.QPSCleanupScheduler - Global QPS: 0
2025-06-30 22:48:12 [scheduling-1] INFO  c.c.t.a.g.s.QPSCleanupScheduler - Active APIs: 0
2025-06-30 22:48:12 [scheduling-1] INFO  c.c.t.a.g.s.QPSCleanupScheduler - Active IPs: 0
2025-06-30 22:48:12 [scheduling-1] INFO  c.c.t.a.g.s.QPSCleanupScheduler - Active Users: 0
2025-06-30 22:48:12 [scheduling-1] INFO  c.c.t.a.g.s.QPSCleanupScheduler - Active Priorities: 0
2025-06-30 22:48:12 [scheduling-1] INFO  c.c.t.a.g.s.QPSCleanupScheduler - === End QPS Summary Report ===
2025-06-30 22:48:12 [scheduling-1] DEBUG c.c.t.a.g.t.AdaptiveTraceScheduler - Adaptive trace cleanup completed - No traces cleaned, Duration: 3ms, Multiplier: 1.0
2025-06-30 22:48:12 [scheduling-1] INFO  c.c.t.a.g.t.AdaptiveTraceScheduler - Adaptive Trace Statistics - Manager: Total=0, Sampled=0, Active=0, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0, Multiplier: 1.0
2025-06-30 22:48:12 [scheduling-1] DEBUG c.c.t.a.g.tracing.TraceScheduler - Scheduled trace cleanup completed - No traces cleaned, Duration: 0ms
2025-06-30 22:48:12 [scheduling-1] INFO  c.c.t.a.g.tracing.TraceScheduler - Trace Statistics - Manager: Total=0, Sampled=0, Active=0, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0
2025-06-30 22:48:13 [boundedElastic-1] WARN  o.s.b.a.d.r.RedisReactiveHealthIndicator - Redis health check failed
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1858)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.MonoSubscribeOnCallable] :
	reactor.core.publisher.Mono.subscribeOn(Mono.java:4625)
	org.springframework.boot.actuate.data.redis.RedisReactiveHealthIndicator.getConnection(RedisReactiveHealthIndicator.java:57)
Error has been observed at the following site(s):
	*__Mono.subscribeOn ⇢ at org.springframework.boot.actuate.data.redis.RedisReactiveHealthIndicator.getConnection(RedisReactiveHealthIndicator.java:57)
	|_     Mono.flatMap ⇢ at org.springframework.boot.actuate.data.redis.RedisReactiveHealthIndicator.doHealthCheck(RedisReactiveHealthIndicator.java:52)
Original Stack Trace:
		at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1858)
		at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1789)
		at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1586)
		at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.lambda$getConnection$0(LettuceConnectionFactory.java:1566)
		at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.doInLock(LettuceConnectionFactory.java:1527)
		at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1563)
		at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedReactiveConnection(LettuceConnectionFactory.java:1274)
		at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getReactiveConnection(LettuceConnectionFactory.java:1149)
		at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getReactiveConnection(LettuceConnectionFactory.java:120)
		at reactor.core.publisher.MonoSupplier.call(MonoSupplier.java:67)
		at reactor.core.publisher.FluxSubscribeOnCallable$CallableSubscribeOnSubscription.run(FluxSubscribeOnCallable.java:228)
		at reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)
		at reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)
		at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:317)
		at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
		at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
		at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
		at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
		at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to localhost/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:63)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:41)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:354)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:220)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:112)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:112)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1787)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1586)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.lambda$getConnection$0(LettuceConnectionFactory.java:1566)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.doInLock(LettuceConnectionFactory.java:1527)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1563)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedReactiveConnection(LettuceConnectionFactory.java:1274)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getReactiveConnection(LettuceConnectionFactory.java:1149)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getReactiveConnection(LettuceConnectionFactory.java:120)
	at reactor.core.publisher.MonoSupplier.call(MonoSupplier.java:67)
	at reactor.core.publisher.MonoCallableOnAssembly.call(MonoCallableOnAssembly.java:91)
	at reactor.core.publisher.FluxSubscribeOnCallable$CallableSubscribeOnSubscription.run(FluxSubscribeOnCallable.java:228)
	at reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)
	at reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:317)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: localhost/127.0.0.1:6379
Caused by: java.net.ConnectException: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:973)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:336)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:339)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-06-30 22:48:31 [reactor-http-nio-2] DEBUG r.n.http.server.HttpServerOperations - [8fa207dc, L:/127.0.0.1:8080 - R:/127.0.0.1:63623] New http connection, requesting read
2025-06-30 22:48:31 [reactor-http-nio-2] DEBUG r.netty.transport.TransportConfig - [8fa207dc, L:/127.0.0.1:8080 - R:/127.0.0.1:63623] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpServerCodec), (reactor.left.httpTrafficHandler = reactor.netty.http.server.HttpTrafficHandler), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-06-30 22:48:31 [reactor-http-nio-2] DEBUG r.n.http.server.HttpServerOperations - [8fa207dc, L:/127.0.0.1:8080 - R:/127.0.0.1:63623] Increasing pending responses count: 1
2025-06-30 22:48:31 [reactor-http-nio-2] DEBUG r.netty.http.server.HttpServer - [8fa207dc-1, L:/127.0.0.1:8080 - R:/127.0.0.1:63623] Handler is being applied: org.springframework.http.server.reactive.ReactorHttpHandlerAdapter@69de3e7c
2025-06-30 22:48:31 [reactor-http-nio-2] DEBUG o.s.c.g.h.RoutePredicateHandlerMapping - Route matched: payment-route
2025-06-30 22:48:31 [reactor-http-nio-2] DEBUG o.s.c.g.h.RoutePredicateHandlerMapping - Mapping [Exchange: POST http://localhost:8080/api/gateway/payment/process] to Route{id='payment-route', uri=http://localhost:8081, order=0, predicate=Paths: [/api/gateway/payment/**], match trailing slash: true, gatewayFilters=[[[RewritePath /api/gateway/payment/(?<segment>.*) = '/api/payment/${segment}'], order = 0], com.citi.tts.api.gateway.filter.AdvancedRateLimitFilter@5e05a706, [com.citi.tts.api.gateway.filter.ServiceDegradationGatewayFilter$1@39886de9, order = 0], com.citi.tts.api.gateway.filter.CircuitBreakerFilter@1dd9a3ae, [com.citi.tts.api.gateway.filter.CryptoFilter@48bab2c6, order = 0]], metadata={}}
2025-06-30 22:48:31 [reactor-http-nio-2] DEBUG o.s.c.g.h.RoutePredicateHandlerMapping - [8fa207dc-1] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@6870a76f
2025-06-30 22:48:31 [reactor-http-nio-2] DEBUG o.s.c.g.handler.FilteringWebHandler - Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@3fc14dc0}, order = -2147483648], [GatewayFilterAdapter{delegate=com.citi.tts.api.gateway.tracing.TraceFilter@66e218d8}, order = -2147483598], com.citi.tts.api.gateway.filter.AdvancedRateLimitFilter@5e05a706, [GatewayFilterAdapter{delegate=com.citi.tts.api.gateway.filter.QPSMetricsFilter@750c23a3}, order = -2147483548], com.citi.tts.api.gateway.filter.CircuitBreakerFilter@1dd9a3ae, [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@15d2ea6b}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@5ec3689b}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@7ac1161f}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@123e9094}, order = 0], [[RewritePath /api/gateway/payment/(?<segment>.*) = '/api/payment/${segment}'], order = 0], [com.citi.tts.api.gateway.filter.ServiceDegradationGatewayFilter$1@39886de9, order = 0], [com.citi.tts.api.gateway.filter.CryptoFilter@48bab2c6, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@3c04ddda}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ReactiveLoadBalancerClientFilter@4b74a67a}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.LoadBalancerServiceInstanceCookieFilter@3b29d36c}, order = 10151], [GatewayFilterAdapter{delegate=com.citi.tts.api.gateway.filter.ServiceDegradationFilter@49c4118b}, order = 2147483547], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@797ee1a9}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@4ef277ef}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@78c23ade}, order = 2147483647]]
2025-06-30 22:48:31 [reactor-http-nio-2] DEBUG c.c.t.a.gateway.tracing.TraceContext - Created root trace context: 92e8d555efc7485e8eb0b79e151f8692
2025-06-30 22:48:31 [reactor-http-nio-2] DEBUG c.c.t.a.gateway.tracing.TraceManager - Created new sampled trace context: 92e8d555efc7485e8eb0b79e151f8692
2025-06-30 22:48:36 [reactor-http-nio-2] DEBUG c.c.t.a.g.f.AdvancedRateLimitFilter - Processing rate limit for: POST /api/gateway/payment/process from IP: 127.0.0.1, User: null
2025-06-30 22:48:36 [reactor-http-nio-2] DEBUG c.c.t.a.g.l.AdvancedRateLimiter - Token acquired for api_weight:NON_CORE: 1 tokens consumed, 14 remaining
2025-06-30 22:48:36 [reactor-http-nio-2] DEBUG c.c.t.a.g.filter.QPSMetricsFilter - QPS recorded - Path: /api/gateway/payment/process, IP: 127.0.0.1, User: anonymous, Priority: default
2025-06-30 22:48:36 [reactor-http-nio-2] DEBUG c.c.t.a.g.f.CircuitBreakerFilter - Using circuit breaker for API: /api/gateway/payment/process with priority: NON_CORE
2025-06-30 22:48:36 [reactor-http-nio-2] DEBUG c.c.t.a.g.f.ServiceDegradationGatewayFilter - Service degradation filter - Service: payment-service, Path: /api/payment/process, Level: CORE
2025-06-30 22:48:36 [reactor-http-nio-2] ERROR c.c.t.a.g.f.ServiceDegradationGatewayFilter - Service error detected - Service: payment-service, Path: /api/payment/process, Error: null
2025-06-30 22:48:36 [reactor-http-nio-2] DEBUG c.c.t.a.g.f.ServiceDegradationGatewayFilter - Error type NullPointerException is in non-degradation list
2025-06-30 22:48:36 [reactor-http-nio-2] INFO  c.c.t.a.g.f.ServiceDegradationGatewayFilter - Not triggering degradation for error type - Service: payment-service, Error: NullPointerException
2025-06-30 22:48:36 [reactor-http-nio-2] DEBUG r.n.http.server.HttpServerOperations - [8fa207dc-1, L:/127.0.0.1:8080 - R:/127.0.0.1:63623] Last HTTP response frame
2025-06-30 22:48:36 [reactor-http-nio-2] DEBUG r.n.http.server.HttpServerOperations - [8fa207dc-1, L:/127.0.0.1:8080 - R:/127.0.0.1:63623] Headers are not sent before onComplete().
2025-06-30 22:48:36 [reactor-http-nio-2] DEBUG r.n.http.server.HttpServerOperations - [8fa207dc-1, L:/127.0.0.1:8080 - R:/127.0.0.1:63623] Decreasing pending responses count: 0
2025-06-30 22:48:36 [reactor-http-nio-2] DEBUG r.n.http.server.HttpServerOperations - [8fa207dc-1, L:/127.0.0.1:8080 - R:/127.0.0.1:63623] Last HTTP packet was sent, terminating the channel
2025-06-30 22:48:36 [reactor-http-nio-2] DEBUG r.netty.channel.ChannelOperations - [8fa207dc-1, L:/127.0.0.1:8080 - R:/127.0.0.1:63623] [HttpServer] Channel inbound receiver cancelled (subscription disposed).
2025-06-30 22:48:36 [reactor-http-nio-2] DEBUG i.g.r.c.i.CircuitBreakerStateMachine - CircuitBreaker 'nonCoreApiCircuitBreaker' succeeded:
2025-06-30 22:48:36 [reactor-http-nio-2] DEBUG c.c.t.a.gateway.tracing.TraceContext - Finished trace: 92e8d555efc7485e8eb0b79e151f8692 with status: 500
2025-06-30 22:48:37 [reactor-http-nio-2] ERROR reactor.core.publisher.Operators - Operator called default onErrorDropped
java.lang.RuntimeException: com.fasterxml.jackson.databind.exc.InvalidDefinitionException: Java 8 date/time type `java.time.Instant` not supported by default: add Module "com.fasterxml.jackson.datatype:jackson-datatype-jsr310" to enable handling (or disable `MapperFeature.REQUIRE_HANDLERS_FOR_JAVA8_TIMES`) (through reference chain: com.citi.tts.api.gateway.tracing.TraceContext["events"]->java.util.ArrayList[0]->com.citi.tts.api.gateway.tracing.TraceContext$TraceEvent["timestamp"])
	at com.citi.tts.api.gateway.tracing.TraceFilter.addTraceHeadersToResponse(TraceFilter.java:122)
	at com.citi.tts.api.gateway.tracing.TraceFilter.lambda$filter$0(TraceFilter.java:76)
	at reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.runFinally(FluxDoFinally.java:146)
	at reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete(FluxDoFinally.java:129)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at io.github.resilience4j.reactor.circuitbreaker.operator.CircuitBreakerSubscriber.hookOnComplete(CircuitBreakerSubscriber.java:69)
	at reactor.core.publisher.BaseSubscriber.onComplete(BaseSubscriber.java:197)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete(FluxDoFinally.java:128)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:210)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onComplete(MonoPeekTerminal.java:299)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onComplete(MonoPeekTerminal.java:299)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onComplete(FluxContextWrite.java:126)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onComplete(MonoPeekTerminal.java:299)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxPeekFuseable$PeekFuseableConditionalSubscriber.onComplete(FluxPeekFuseable.java:595)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onComplete(MonoPeekTerminal.java:299)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:89)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxConcatArray$ConcatArraySubscriber.onComplete(FluxConcatArray.java:209)
	at reactor.core.publisher.FluxConcatArray.subscribe(FluxConcatArray.java:79)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxFlatMap.trySubscribeScalarMap(FluxFlatMap.java:202)
	at reactor.core.publisher.MonoFlatMap.subscribeOrReturn(MonoFlatMap.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4560)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:544)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:49)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:38)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxFlatMap.trySubscribeScalarMap(FluxFlatMap.java:202)
	at reactor.core.publisher.MonoFlatMap.subscribeOrReturn(MonoFlatMap.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:63)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.drain(FluxFilterWhen.java:272)
	at reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.request(FluxFilterWhen.java:160)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:633)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:633)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:633)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:864)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:790)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:333)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:455)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: com.fasterxml.jackson.databind.exc.InvalidDefinitionException: Java 8 date/time type `java.time.Instant` not supported by default: add Module "com.fasterxml.jackson.datatype:jackson-datatype-jsr310" to enable handling (or disable `MapperFeature.REQUIRE_HANDLERS_FOR_JAVA8_TIMES`) (through reference chain: com.citi.tts.api.gateway.tracing.TraceContext["events"]->java.util.ArrayList[0]->com.citi.tts.api.gateway.tracing.TraceContext$TraceEvent["timestamp"])
	at com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:77)
	at com.fasterxml.jackson.databind.SerializerProvider.reportBadDefinition(SerializerProvider.java:1359)
	at com.fasterxml.jackson.databind.ser.impl.UnsupportedTypeSerializer.serialize(UnsupportedTypeSerializer.java:34)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:760)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serializeContents(IndexedListSerializer.java:119)
	at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serialize(IndexedListSerializer.java:79)
	at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serialize(IndexedListSerializer.java:18)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:760)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._serialize(DefaultSerializerProvider.java:503)
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(DefaultSerializerProvider.java:342)
	at com.fasterxml.jackson.databind.ObjectMapper._writeValueAndClose(ObjectMapper.java:4859)
	at com.fasterxml.jackson.databind.ObjectMapper.writeValueAsString(ObjectMapper.java:4079)
	at com.citi.tts.api.gateway.tracing.TraceFilter.addTraceHeadersToResponse(TraceFilter.java:120)
	... 190 common frames omitted
2025-06-30 22:48:37 [reactor-http-nio-2] DEBUG r.n.channel.ChannelOperationsHandler - [8fa207dc, L:/127.0.0.1:8080 - R:/127.0.0.1:63623] No ChannelOperation attached.
2025-06-30 22:48:42 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Performing periodic health check
2025-06-30 22:49:10 [boundedElastic-1] INFO  c.c.t.a.g.t.ReactiveTraceScheduler - Reactive Trace Statistics - Manager: Total=1, Sampled=1, Active=1, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0
2025-06-30 22:49:12 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Performing periodic health check
2025-06-30 22:49:12 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Cleaning up expired instances
2025-06-30 22:49:12 [scheduling-1] DEBUG c.c.t.a.g.s.QPSCleanupScheduler - Starting scheduled QPS data cleanup...
2025-06-30 22:49:12 [scheduling-1] INFO  c.c.t.api.gateway.metrics.QPSMetrics - Manual cleanup completed. Total cleaned: 0, Active entries: API=1, IP=1, User=1, Priority=1
2025-06-30 22:49:12 [scheduling-1] DEBUG c.c.t.a.g.s.QPSCleanupScheduler - Scheduled QPS data cleanup completed
2025-06-30 22:49:12 [scheduling-1] INFO  c.c.t.a.g.t.AdaptiveTraceScheduler - Adaptive Trace Statistics - Manager: Total=1, Sampled=1, Active=1, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0, Multiplier: 1.0
2025-06-30 22:49:12 [scheduling-1] INFO  c.c.t.a.g.tracing.TraceScheduler - Trace Statistics - Manager: Total=1, Sampled=1, Active=1, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0
2025-06-30 22:49:42 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Performing periodic health check
2025-06-30 22:50:10 [boundedElastic-3] INFO  c.c.t.a.g.t.ReactiveTraceScheduler - Reactive Trace Statistics - Manager: Total=1, Sampled=1, Active=1, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0
2025-06-30 22:50:12 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Performing periodic health check
2025-06-30 22:50:12 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Cleaning up expired instances
2025-06-30 22:50:12 [scheduling-1] DEBUG c.c.t.a.g.s.QPSCleanupScheduler - Starting scheduled QPS data cleanup...
2025-06-30 22:50:12 [scheduling-1] DEBUG c.c.t.api.gateway.metrics.QPSMetrics - Cleaned 1 expired API QPS entries
2025-06-30 22:50:12 [scheduling-1] DEBUG c.c.t.api.gateway.metrics.QPSMetrics - Cleaned 1 expired IP QPS entries
2025-06-30 22:50:12 [scheduling-1] DEBUG c.c.t.api.gateway.metrics.QPSMetrics - Cleaned 1 expired User QPS entries
2025-06-30 22:50:12 [scheduling-1] DEBUG c.c.t.api.gateway.metrics.QPSMetrics - Cleaned 1 expired Priority QPS entries
2025-06-30 22:50:12 [scheduling-1] INFO  c.c.t.api.gateway.metrics.QPSMetrics - Manual cleanup completed. Total cleaned: 4, Active entries: API=0, IP=0, User=0, Priority=0
2025-06-30 22:50:12 [scheduling-1] DEBUG c.c.t.a.g.s.QPSCleanupScheduler - Scheduled QPS data cleanup completed
2025-06-30 22:50:12 [scheduling-1] INFO  c.c.t.a.g.t.AdaptiveTraceScheduler - Adaptive Trace Statistics - Manager: Total=1, Sampled=1, Active=1, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0, Multiplier: 1.0
2025-06-30 22:50:12 [scheduling-1] INFO  c.c.t.a.g.tracing.TraceScheduler - Trace Statistics - Manager: Total=1, Sampled=1, Active=1, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0
2025-06-30 22:50:42 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Performing periodic health check
2025-06-30 22:51:10 [boundedElastic-1] INFO  c.c.t.a.g.t.ReactiveTraceScheduler - Reactive Trace Statistics - Manager: Total=1, Sampled=1, Active=1, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0
2025-06-30 22:51:12 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Performing periodic health check
2025-06-30 22:51:12 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Cleaning up expired instances
2025-06-30 22:51:12 [scheduling-1] DEBUG c.c.t.a.g.s.QPSCleanupScheduler - Starting scheduled QPS data cleanup...
2025-06-30 22:51:12 [scheduling-1] INFO  c.c.t.api.gateway.metrics.QPSMetrics - Manual cleanup completed. Total cleaned: 0, Active entries: API=0, IP=0, User=0, Priority=0
2025-06-30 22:51:12 [scheduling-1] DEBUG c.c.t.a.g.s.QPSCleanupScheduler - Scheduled QPS data cleanup completed
2025-06-30 22:51:12 [scheduling-1] INFO  c.c.t.a.g.t.AdaptiveTraceScheduler - Adaptive Trace Statistics - Manager: Total=1, Sampled=1, Active=1, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0, Multiplier: 1.0
2025-06-30 22:51:12 [scheduling-1] INFO  c.c.t.a.g.tracing.TraceScheduler - Trace Statistics - Manager: Total=1, Sampled=1, Active=1, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0
2025-06-30 22:51:42 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Performing periodic health check
2025-06-30 22:52:10 [boundedElastic-3] INFO  c.c.t.a.g.t.ReactiveTraceScheduler - Reactive Trace Statistics - Manager: Total=1, Sampled=1, Active=1, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0
2025-06-30 22:52:12 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Performing periodic health check
2025-06-30 22:52:12 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Cleaning up expired instances
2025-06-30 22:52:12 [scheduling-1] DEBUG c.c.t.a.g.s.QPSCleanupScheduler - Starting scheduled QPS data cleanup...
2025-06-30 22:52:12 [scheduling-1] INFO  c.c.t.api.gateway.metrics.QPSMetrics - Manual cleanup completed. Total cleaned: 0, Active entries: API=0, IP=0, User=0, Priority=0
2025-06-30 22:52:12 [scheduling-1] DEBUG c.c.t.a.g.s.QPSCleanupScheduler - Scheduled QPS data cleanup completed
2025-06-30 22:52:12 [scheduling-1] INFO  c.c.t.a.g.t.AdaptiveTraceScheduler - Adaptive Trace Statistics - Manager: Total=1, Sampled=1, Active=1, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0, Multiplier: 1.0
2025-06-30 22:52:12 [scheduling-1] INFO  c.c.t.a.g.tracing.TraceScheduler - Trace Statistics - Manager: Total=1, Sampled=1, Active=1, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0
2025-06-30 22:52:37 [reactor-http-nio-3] DEBUG r.n.http.server.HttpServerOperations - [484d9871, L:/127.0.0.1:8080 - R:/127.0.0.1:64727] New http connection, requesting read
2025-06-30 22:52:37 [reactor-http-nio-3] DEBUG r.netty.transport.TransportConfig - [484d9871, L:/127.0.0.1:8080 - R:/127.0.0.1:64727] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpServerCodec), (reactor.left.httpTrafficHandler = reactor.netty.http.server.HttpTrafficHandler), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-06-30 22:52:37 [reactor-http-nio-3] DEBUG r.n.http.server.HttpServerOperations - [484d9871, L:/127.0.0.1:8080 - R:/127.0.0.1:64727] Increasing pending responses count: 1
2025-06-30 22:52:37 [reactor-http-nio-3] DEBUG r.netty.http.server.HttpServer - [484d9871-1, L:/127.0.0.1:8080 - R:/127.0.0.1:64727] Handler is being applied: org.springframework.http.server.reactive.ReactorHttpHandlerAdapter@69de3e7c
2025-06-30 22:52:37 [reactor-http-nio-3] DEBUG o.s.c.g.h.RoutePredicateHandlerMapping - Route matched: payment-route
2025-06-30 22:52:37 [reactor-http-nio-3] DEBUG o.s.c.g.h.RoutePredicateHandlerMapping - Mapping [Exchange: POST http://localhost:8080/api/gateway/payment/process] to Route{id='payment-route', uri=http://localhost:8081, order=0, predicate=Paths: [/api/gateway/payment/**], match trailing slash: true, gatewayFilters=[[[RewritePath /api/gateway/payment/(?<segment>.*) = '/api/payment/${segment}'], order = 0], com.citi.tts.api.gateway.filter.AdvancedRateLimitFilter@5e05a706, [com.citi.tts.api.gateway.filter.ServiceDegradationGatewayFilter$1@39886de9, order = 0], com.citi.tts.api.gateway.filter.CircuitBreakerFilter@1dd9a3ae, [com.citi.tts.api.gateway.filter.CryptoFilter@48bab2c6, order = 0]], metadata={}}
2025-06-30 22:52:37 [reactor-http-nio-3] DEBUG o.s.c.g.h.RoutePredicateHandlerMapping - [484d9871-2] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@6870a76f
2025-06-30 22:52:37 [reactor-http-nio-3] DEBUG o.s.c.g.handler.FilteringWebHandler - Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@3fc14dc0}, order = -2147483648], [GatewayFilterAdapter{delegate=com.citi.tts.api.gateway.tracing.TraceFilter@66e218d8}, order = -2147483598], com.citi.tts.api.gateway.filter.AdvancedRateLimitFilter@5e05a706, [GatewayFilterAdapter{delegate=com.citi.tts.api.gateway.filter.QPSMetricsFilter@750c23a3}, order = -2147483548], com.citi.tts.api.gateway.filter.CircuitBreakerFilter@1dd9a3ae, [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@15d2ea6b}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@5ec3689b}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@7ac1161f}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@123e9094}, order = 0], [[RewritePath /api/gateway/payment/(?<segment>.*) = '/api/payment/${segment}'], order = 0], [com.citi.tts.api.gateway.filter.ServiceDegradationGatewayFilter$1@39886de9, order = 0], [com.citi.tts.api.gateway.filter.CryptoFilter@48bab2c6, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@3c04ddda}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ReactiveLoadBalancerClientFilter@4b74a67a}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.LoadBalancerServiceInstanceCookieFilter@3b29d36c}, order = 10151], [GatewayFilterAdapter{delegate=com.citi.tts.api.gateway.filter.ServiceDegradationFilter@49c4118b}, order = 2147483547], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@797ee1a9}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@4ef277ef}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@78c23ade}, order = 2147483647]]
2025-06-30 22:52:37 [reactor-http-nio-3] DEBUG c.c.t.a.gateway.tracing.TraceContext - Created root trace context: 1717f62aeead4f89875c6f380ca108b4
2025-06-30 22:52:37 [reactor-http-nio-3] DEBUG c.c.t.a.gateway.tracing.TraceManager - Created new sampled trace context: 1717f62aeead4f89875c6f380ca108b4
2025-06-30 22:52:40 [reactor-http-nio-3] DEBUG c.c.t.a.g.f.AdvancedRateLimitFilter - Processing rate limit for: POST /api/gateway/payment/process from IP: 127.0.0.1, User: null
2025-06-30 22:52:40 [reactor-http-nio-3] DEBUG c.c.t.a.g.l.AdvancedRateLimiter - Tokens refilled for api_weight:NON_CORE: +2430 tokens, total: 15
2025-06-30 22:52:40 [reactor-http-nio-3] DEBUG c.c.t.a.g.l.AdvancedRateLimiter - Token acquired for api_weight:NON_CORE: 1 tokens consumed, 14 remaining
2025-06-30 22:52:40 [reactor-http-nio-3] DEBUG c.c.t.a.g.filter.QPSMetricsFilter - QPS recorded - Path: /api/gateway/payment/process, IP: 127.0.0.1, User: anonymous, Priority: default
2025-06-30 22:52:40 [reactor-http-nio-3] DEBUG c.c.t.a.g.f.CircuitBreakerFilter - Using circuit breaker for API: /api/gateway/payment/process with priority: NON_CORE
2025-06-30 22:52:40 [reactor-http-nio-3] DEBUG c.c.t.a.g.f.ServiceDegradationGatewayFilter - Service degradation filter - Service: payment-service, Path: /api/payment/process, Level: CORE
2025-06-30 22:52:40 [reactor-http-nio-3] ERROR c.c.t.a.g.f.ServiceDegradationGatewayFilter - Service error detected - Service: payment-service, Path: /api/payment/process, Error: null
2025-06-30 22:52:40 [reactor-http-nio-3] DEBUG c.c.t.a.g.f.ServiceDegradationGatewayFilter - Error type NullPointerException is in non-degradation list
2025-06-30 22:52:40 [reactor-http-nio-3] INFO  c.c.t.a.g.f.ServiceDegradationGatewayFilter - Not triggering degradation for error type - Service: payment-service, Error: NullPointerException
2025-06-30 22:52:40 [reactor-http-nio-3] DEBUG r.n.http.server.HttpServerOperations - [484d9871-1, L:/127.0.0.1:8080 - R:/127.0.0.1:64727] Last HTTP response frame
2025-06-30 22:52:40 [reactor-http-nio-3] DEBUG r.n.http.server.HttpServerOperations - [484d9871-1, L:/127.0.0.1:8080 - R:/127.0.0.1:64727] Headers are not sent before onComplete().
2025-06-30 22:52:40 [reactor-http-nio-3] DEBUG r.n.http.server.HttpServerOperations - [484d9871-1, L:/127.0.0.1:8080 - R:/127.0.0.1:64727] Decreasing pending responses count: 0
2025-06-30 22:52:40 [reactor-http-nio-3] DEBUG r.n.http.server.HttpServerOperations - [484d9871-1, L:/127.0.0.1:8080 - R:/127.0.0.1:64727] Last HTTP packet was sent, terminating the channel
2025-06-30 22:52:40 [reactor-http-nio-3] DEBUG r.netty.channel.ChannelOperations - [484d9871-1, L:/127.0.0.1:8080 - R:/127.0.0.1:64727] [HttpServer] Channel inbound receiver cancelled (subscription disposed).
2025-06-30 22:52:40 [reactor-http-nio-3] DEBUG i.g.r.c.i.CircuitBreakerStateMachine - CircuitBreaker 'nonCoreApiCircuitBreaker' succeeded:
2025-06-30 22:52:40 [reactor-http-nio-3] DEBUG c.c.t.a.gateway.tracing.TraceContext - Finished trace: 1717f62aeead4f89875c6f380ca108b4 with status: 500
2025-06-30 22:52:40 [reactor-http-nio-3] ERROR reactor.core.publisher.Operators - Operator called default onErrorDropped
java.lang.RuntimeException: com.fasterxml.jackson.databind.exc.InvalidDefinitionException: Java 8 date/time type `java.time.Instant` not supported by default: add Module "com.fasterxml.jackson.datatype:jackson-datatype-jsr310" to enable handling (or disable `MapperFeature.REQUIRE_HANDLERS_FOR_JAVA8_TIMES`) (through reference chain: com.citi.tts.api.gateway.tracing.TraceContext["events"]->java.util.ArrayList[0]->com.citi.tts.api.gateway.tracing.TraceContext$TraceEvent["timestamp"])
	at com.citi.tts.api.gateway.tracing.TraceFilter.addTraceHeadersToResponse(TraceFilter.java:122)
	at com.citi.tts.api.gateway.tracing.TraceFilter.lambda$filter$0(TraceFilter.java:76)
	at reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.runFinally(FluxDoFinally.java:146)
	at reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete(FluxDoFinally.java:129)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at io.github.resilience4j.reactor.circuitbreaker.operator.CircuitBreakerSubscriber.hookOnComplete(CircuitBreakerSubscriber.java:69)
	at reactor.core.publisher.BaseSubscriber.onComplete(BaseSubscriber.java:197)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete(FluxDoFinally.java:128)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:210)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onComplete(MonoPeekTerminal.java:299)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onComplete(MonoPeekTerminal.java:299)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onComplete(FluxContextWrite.java:126)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onComplete(MonoPeekTerminal.java:299)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxPeekFuseable$PeekFuseableConditionalSubscriber.onComplete(FluxPeekFuseable.java:595)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onComplete(MonoPeekTerminal.java:299)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:89)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxConcatArray$ConcatArraySubscriber.onComplete(FluxConcatArray.java:209)
	at reactor.core.publisher.FluxConcatArray.subscribe(FluxConcatArray.java:79)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxFlatMap.trySubscribeScalarMap(FluxFlatMap.java:202)
	at reactor.core.publisher.MonoFlatMap.subscribeOrReturn(MonoFlatMap.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4560)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:544)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:49)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:38)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxFlatMap.trySubscribeScalarMap(FluxFlatMap.java:202)
	at reactor.core.publisher.MonoFlatMap.subscribeOrReturn(MonoFlatMap.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:63)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.drain(FluxFilterWhen.java:272)
	at reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.request(FluxFilterWhen.java:160)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:633)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:633)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:633)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:864)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:790)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:333)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:455)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: com.fasterxml.jackson.databind.exc.InvalidDefinitionException: Java 8 date/time type `java.time.Instant` not supported by default: add Module "com.fasterxml.jackson.datatype:jackson-datatype-jsr310" to enable handling (or disable `MapperFeature.REQUIRE_HANDLERS_FOR_JAVA8_TIMES`) (through reference chain: com.citi.tts.api.gateway.tracing.TraceContext["events"]->java.util.ArrayList[0]->com.citi.tts.api.gateway.tracing.TraceContext$TraceEvent["timestamp"])
	at com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:77)
	at com.fasterxml.jackson.databind.SerializerProvider.reportBadDefinition(SerializerProvider.java:1359)
	at com.fasterxml.jackson.databind.ser.impl.UnsupportedTypeSerializer.serialize(UnsupportedTypeSerializer.java:34)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:760)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serializeContents(IndexedListSerializer.java:119)
	at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serialize(IndexedListSerializer.java:79)
	at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serialize(IndexedListSerializer.java:18)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:760)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._serialize(DefaultSerializerProvider.java:503)
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(DefaultSerializerProvider.java:342)
	at com.fasterxml.jackson.databind.ObjectMapper._writeValueAndClose(ObjectMapper.java:4859)
	at com.fasterxml.jackson.databind.ObjectMapper.writeValueAsString(ObjectMapper.java:4079)
	at com.citi.tts.api.gateway.tracing.TraceFilter.addTraceHeadersToResponse(TraceFilter.java:120)
	... 190 common frames omitted
2025-06-30 22:52:40 [reactor-http-nio-3] DEBUG r.n.channel.ChannelOperationsHandler - [484d9871, L:/127.0.0.1:8080 - R:/127.0.0.1:64727] No ChannelOperation attached.
2025-06-30 22:52:42 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Performing periodic health check
2025-06-30 22:53:10 [boundedElastic-3] INFO  c.c.t.a.g.t.ReactiveTraceScheduler - Reactive Trace Statistics - Manager: Total=2, Sampled=2, Active=2, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0
2025-06-30 22:53:10 [boundedElastic-3] DEBUG c.c.t.a.g.t.ReactiveTraceScheduler - Reactive trace cleanup completed - No traces cleaned, Duration: 0ms
2025-06-30 22:53:12 [scheduling-1] DEBUG c.c.t.a.g.c.ReleaseValidationConfig - Executing auto step traffic scheduler
2025-06-30 22:53:12 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Performing periodic health check
2025-06-30 22:53:12 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Cleaning up expired instances
2025-06-30 22:53:12 [scheduling-1] DEBUG c.c.t.a.g.s.QPSCleanupScheduler - Starting scheduled QPS data cleanup...
2025-06-30 22:53:12 [scheduling-1] INFO  c.c.t.api.gateway.metrics.QPSMetrics - Manual cleanup completed. Total cleaned: 0, Active entries: API=1, IP=1, User=1, Priority=1
2025-06-30 22:53:12 [scheduling-1] DEBUG c.c.t.a.g.s.QPSCleanupScheduler - Scheduled QPS data cleanup completed
2025-06-30 22:53:12 [scheduling-1] INFO  c.c.t.a.g.s.QPSCleanupScheduler - === QPS Summary Report ===
2025-06-30 22:53:12 [scheduling-1] INFO  c.c.t.a.g.s.QPSCleanupScheduler - Global QPS: 0
2025-06-30 22:53:12 [scheduling-1] INFO  c.c.t.a.g.s.QPSCleanupScheduler - Active APIs: 1
2025-06-30 22:53:12 [scheduling-1] INFO  c.c.t.a.g.s.QPSCleanupScheduler - Active IPs: 1
2025-06-30 22:53:12 [scheduling-1] INFO  c.c.t.a.g.s.QPSCleanupScheduler - Active Users: 1
2025-06-30 22:53:12 [scheduling-1] INFO  c.c.t.a.g.s.QPSCleanupScheduler - Active Priorities: 1
2025-06-30 22:53:12 [scheduling-1] INFO  c.c.t.a.g.s.QPSCleanupScheduler - Top API - /api/gateway/payment/process: 1 QPS
2025-06-30 22:53:12 [scheduling-1] INFO  c.c.t.a.g.s.QPSCleanupScheduler - Top IP - 127.0.0.1: 1 QPS
2025-06-30 22:53:12 [scheduling-1] INFO  c.c.t.a.g.s.QPSCleanupScheduler - === End QPS Summary Report ===
2025-06-30 22:53:12 [scheduling-1] DEBUG c.c.t.a.g.t.AdaptiveTraceScheduler - Adaptive trace cleanup completed - No traces cleaned, Duration: 0ms, Multiplier: 1.0
2025-06-30 22:53:12 [scheduling-1] DEBUG c.c.t.a.g.tracing.TraceScheduler - Scheduled trace cleanup completed - No traces cleaned, Duration: 0ms
2025-06-30 22:53:12 [scheduling-1] INFO  c.c.t.a.g.t.AdaptiveTraceScheduler - Adaptive Trace Statistics - Manager: Total=2, Sampled=2, Active=2, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0, Multiplier: 1.0
2025-06-30 22:53:12 [scheduling-1] INFO  c.c.t.a.g.tracing.TraceScheduler - Trace Statistics - Manager: Total=2, Sampled=2, Active=2, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0
2025-06-30 22:53:42 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Performing periodic health check
2025-06-30 22:54:10 [boundedElastic-3] INFO  c.c.t.a.g.t.ReactiveTraceScheduler - Reactive Trace Statistics - Manager: Total=2, Sampled=2, Active=2, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0
2025-06-30 22:54:12 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Performing periodic health check
2025-06-30 22:54:12 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Cleaning up expired instances
2025-06-30 22:54:12 [scheduling-1] DEBUG c.c.t.a.g.s.QPSCleanupScheduler - Starting scheduled QPS data cleanup...
2025-06-30 22:54:12 [scheduling-1] DEBUG c.c.t.api.gateway.metrics.QPSMetrics - Cleaned 1 expired API QPS entries
2025-06-30 22:54:12 [scheduling-1] DEBUG c.c.t.api.gateway.metrics.QPSMetrics - Cleaned 1 expired IP QPS entries
2025-06-30 22:54:12 [scheduling-1] DEBUG c.c.t.api.gateway.metrics.QPSMetrics - Cleaned 1 expired User QPS entries
2025-06-30 22:54:12 [scheduling-1] DEBUG c.c.t.api.gateway.metrics.QPSMetrics - Cleaned 1 expired Priority QPS entries
2025-06-30 22:54:12 [scheduling-1] INFO  c.c.t.api.gateway.metrics.QPSMetrics - Manual cleanup completed. Total cleaned: 4, Active entries: API=0, IP=0, User=0, Priority=0
2025-06-30 22:54:12 [scheduling-1] DEBUG c.c.t.a.g.s.QPSCleanupScheduler - Scheduled QPS data cleanup completed
2025-06-30 22:54:12 [scheduling-1] INFO  c.c.t.a.g.t.AdaptiveTraceScheduler - Adaptive Trace Statistics - Manager: Total=2, Sampled=2, Active=2, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0, Multiplier: 1.0
2025-06-30 22:54:12 [scheduling-1] INFO  c.c.t.a.g.tracing.TraceScheduler - Trace Statistics - Manager: Total=2, Sampled=2, Active=2, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0
2025-06-30 22:54:42 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Performing periodic health check
2025-06-30 22:55:10 [boundedElastic-4] INFO  c.c.t.a.g.t.ReactiveTraceScheduler - Reactive Trace Statistics - Manager: Total=2, Sampled=2, Active=2, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0
2025-06-30 22:55:12 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Performing periodic health check
2025-06-30 22:55:12 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Cleaning up expired instances
2025-06-30 22:55:12 [scheduling-1] DEBUG c.c.t.a.g.s.QPSCleanupScheduler - Starting scheduled QPS data cleanup...
2025-06-30 22:55:12 [scheduling-1] INFO  c.c.t.api.gateway.metrics.QPSMetrics - Manual cleanup completed. Total cleaned: 0, Active entries: API=0, IP=0, User=0, Priority=0
2025-06-30 22:55:12 [scheduling-1] DEBUG c.c.t.a.g.s.QPSCleanupScheduler - Scheduled QPS data cleanup completed
2025-06-30 22:55:12 [scheduling-1] INFO  c.c.t.a.g.t.AdaptiveTraceScheduler - Adaptive Trace Statistics - Manager: Total=2, Sampled=2, Active=2, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0, Multiplier: 1.0
2025-06-30 22:55:12 [scheduling-1] INFO  c.c.t.a.g.tracing.TraceScheduler - Trace Statistics - Manager: Total=2, Sampled=2, Active=2, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0
2025-06-30 22:55:42 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Performing periodic health check
2025-06-30 22:56:10 [boundedElastic-3] INFO  c.c.t.a.g.t.ReactiveTraceScheduler - Reactive Trace Statistics - Manager: Total=2, Sampled=2, Active=2, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0
2025-06-30 22:56:12 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Performing periodic health check
2025-06-30 22:56:12 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Cleaning up expired instances
2025-06-30 22:56:12 [scheduling-1] DEBUG c.c.t.a.g.s.QPSCleanupScheduler - Starting scheduled QPS data cleanup...
2025-06-30 22:56:12 [scheduling-1] INFO  c.c.t.api.gateway.metrics.QPSMetrics - Manual cleanup completed. Total cleaned: 0, Active entries: API=0, IP=0, User=0, Priority=0
2025-06-30 22:56:12 [scheduling-1] DEBUG c.c.t.a.g.s.QPSCleanupScheduler - Scheduled QPS data cleanup completed
2025-06-30 22:56:12 [scheduling-1] INFO  c.c.t.a.g.t.AdaptiveTraceScheduler - Adaptive Trace Statistics - Manager: Total=2, Sampled=2, Active=2, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0, Multiplier: 1.0
2025-06-30 22:56:12 [scheduling-1] INFO  c.c.t.a.g.tracing.TraceScheduler - Trace Statistics - Manager: Total=2, Sampled=2, Active=2, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0
2025-06-30 22:56:14 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.netty.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-06-30 22:56:14 [netty-shutdown] DEBUG r.netty.transport.ServerTransport - [e88d4399, L:/[0:0:0:0:0:0:0:0]:8080] Server is about to be disposed with timeout: PT2562047H47M16.854775807S
2025-06-30 22:56:14 [netty-shutdown] INFO  o.s.b.w.e.netty.GracefulShutdown - Graceful shutdown complete
2025-06-30 22:56:14 [SpringApplicationShutdownHook] DEBUG r.netty.transport.ServerTransport - [e88d4399, L:/[0:0:0:0:0:0:0:0]:8080] Server has been disposed
2025-06-30 22:56:17 [SpringApplicationShutdownHook] INFO  c.c.t.a.g.t.ReactiveTraceScheduler - Stopping reactive trace scheduler
2025-06-30 22:56:17 [SpringApplicationShutdownHook] INFO  c.c.t.a.g.audit.AsyncAuditService - Shutting down async audit service...
2025-06-30 22:56:22 [SpringApplicationShutdownHook] INFO  c.c.t.a.g.audit.AsyncAuditService - Async audit service shutdown completed
2025-06-30 22:56:22 [async-audit-worker] INFO  c.c.t.a.g.audit.AsyncAuditService - Async audit log processor stopped
2025-06-30 22:56:32 [main] INFO  c.c.t.api.gateway.GatewayApplication - Starting GatewayApplication using Java 21.0.7 with PID 71755 (/Users/ouyangbaobao/gateway/build/classes/java/main started by ouyangbaobao in /Users/ouyangbaobao/gateway)
2025-06-30 22:56:32 [main] DEBUG c.c.t.api.gateway.GatewayApplication - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-06-30 22:56:32 [main] INFO  c.c.t.api.gateway.GatewayApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-30 22:56:34 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:56:34 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:56:34 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:56:34 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:56:34 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:56:34 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:56:34 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:56:34 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:56:34 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:56:34 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:56:34 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:56:34 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:56:34 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:56:34 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:56:34 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:56:34 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:56:34 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:56:34 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:56:34 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:56:34 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:56:34 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:56:34 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-30 22:56:34 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-30 22:56:34 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 38 ms. Found 0 Redis repository interfaces.
2025-06-30 22:56:35 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=73051835-87f0-3b1a-9de3-b617333333e0
2025-06-30 22:56:35 [async-audit-worker] INFO  c.c.t.a.g.audit.AsyncAuditService - Async audit log processor started
2025-06-30 22:56:35 [main] INFO  c.c.t.a.g.audit.AsyncAuditService - Async audit service initialized - batchSize: 100, flushInterval: 5000ms, queueSize: 10000
2025-06-30 22:56:35 [main] INFO  c.c.t.a.g.config.WebClientConfig - Created optimized WebClient: normal-service - maxConnections: 8, maxIdleConnections: 3, connectTimeout: 2500ms, readTimeout: 5000ms, writeTimeout: 3000ms
2025-06-30 22:56:35 [main] INFO  c.c.t.a.g.config.RateLimitConfig - === 限流配置验证 ===
2025-06-30 22:56:35 [main] INFO  c.c.t.a.g.config.RateLimitConfig - 全局默认QPS: 80, Burst: 120
2025-06-30 22:56:35 [main] INFO  c.c.t.a.g.config.RateLimitConfig - IP限流: 30 QPS, 50 Burst, 启用: true
2025-06-30 22:56:35 [main] INFO  c.c.t.a.g.config.RateLimitConfig - 用户限流: 20 QPS, 35 Burst, 启用: true
2025-06-30 22:56:35 [main] INFO  c.c.t.a.g.config.RateLimitConfig - URL限流: 40 QPS, 60 Burst, 启用: true
2025-06-30 22:56:35 [main] INFO  c.c.t.a.g.config.RateLimitConfig - API权重限流启用: true
2025-06-30 22:56:35 [main] INFO  c.c.t.a.g.config.RateLimitConfig - API权重总QPS: 110 (允许轻微超载)
2025-06-30 22:56:35 [main] INFO  c.c.t.a.g.config.RateLimitConfig - === 限流配置验证完成 ===
2025-06-30 22:56:36 [main] INFO  c.c.t.a.g.services.ApiRoutingService - API priority map initialized with 15 entries
2025-06-30 22:56:36 [main] INFO  c.c.t.a.g.config.RateLimitConfig - === 限流配置验证 ===
2025-06-30 22:56:36 [main] INFO  c.c.t.a.g.config.RateLimitConfig - 全局默认QPS: 80, Burst: 120
2025-06-30 22:56:36 [main] INFO  c.c.t.a.g.config.RateLimitConfig - IP限流: 30 QPS, 50 Burst, 启用: true
2025-06-30 22:56:36 [main] INFO  c.c.t.a.g.config.RateLimitConfig - 用户限流: 20 QPS, 35 Burst, 启用: true
2025-06-30 22:56:36 [main] INFO  c.c.t.a.g.config.RateLimitConfig - URL限流: 40 QPS, 60 Burst, 启用: true
2025-06-30 22:56:36 [main] INFO  c.c.t.a.g.config.RateLimitConfig - API权重限流启用: true
2025-06-30 22:56:36 [main] INFO  c.c.t.a.g.config.RateLimitConfig - API权重总QPS: 110 (允许轻微超载)
2025-06-30 22:56:36 [main] INFO  c.c.t.a.g.config.RateLimitConfig - === 限流配置验证完成 ===
2025-06-30 22:56:37 [main] INFO  c.c.t.a.g.config.WebClientConfig - Created optimized WebClient: default - maxConnections: 6, maxIdleConnections: 2, connectTimeout: 2000ms, readTimeout: 5000ms, writeTimeout: 3000ms
2025-06-30 22:56:37 [main] INFO  c.c.t.a.g.config.WebClientConfig - Created optimized WebClient: core-service - maxConnections: 25, maxIdleConnections: 8, connectTimeout: 1500ms, readTimeout: 3000ms, writeTimeout: 2000ms
2025-06-30 22:56:37 [main] INFO  c.c.t.a.g.config.WebClientConfig - Created optimized WebClient: important-service - maxConnections: 15, maxIdleConnections: 5, connectTimeout: 2000ms, readTimeout: 4000ms, writeTimeout: 2500ms
2025-06-30 22:56:37 [main] INFO  c.c.t.a.g.config.WebClientConfig - Created optimized WebClient: non-core-service - maxConnections: 4, maxIdleConnections: 2, connectTimeout: 3000ms, readTimeout: 8000ms, writeTimeout: 4000ms
2025-06-30 22:56:37 [main] INFO  c.c.t.a.g.t.ReactiveTraceScheduler - Starting reactive trace scheduler
2025-06-30 22:56:38 [main] DEBUG o.s.c.g.f.f.c.LocalResponseCacheProperties - No TTL configuration found. Default TTL will be applied for cache entries: PT5M minutes
2025-06-30 22:56:38 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [After]
2025-06-30 22:56:38 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Before]
2025-06-30 22:56:38 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Between]
2025-06-30 22:56:38 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Cookie]
2025-06-30 22:56:38 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Header]
2025-06-30 22:56:38 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Host]
2025-06-30 22:56:38 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Method]
2025-06-30 22:56:38 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Path]
2025-06-30 22:56:38 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Query]
2025-06-30 22:56:38 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [ReadBody]
2025-06-30 22:56:38 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [RemoteAddr]
2025-06-30 22:56:38 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [XForwardedRemoteAddr]
2025-06-30 22:56:38 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Weight]
2025-06-30 22:56:38 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [CloudFoundryRouteService]
2025-06-30 22:56:38 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 5 endpoints beneath base path '/actuator'
2025-06-30 22:56:39 [main] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default LoopResources: DefaultLoopResources {prefix=reactor-http, daemon=true, selectCount=8, workerCount=8}
2025-06-30 22:56:39 [main] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default ConnectionProvider: reactor.netty.resources.DefaultPooledConnectionProvider@18fcfe7e
2025-06-30 22:56:39 [main] DEBUG r.netty.resources.DefaultLoopIOUring - Default io_uring support : false
2025-06-30 22:56:39 [main] DEBUG r.netty.resources.DefaultLoopEpoll - Default Epoll support : false
2025-06-30 22:56:39 [main] DEBUG r.netty.resources.DefaultLoopKQueue - Default KQueue support : false
2025-06-30 22:56:39 [reactor-http-nio-1] DEBUG r.netty.transport.ServerTransport - [40f91f76, L:/[0:0:0:0:0:0:0:0]:8080] Bound new server
2025-06-30 22:56:39 [main] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port 8080 (http)
2025-06-30 22:56:39 [scheduling-1] DEBUG c.c.t.a.g.c.ReleaseValidationConfig - Executing auto step traffic scheduler
2025-06-30 22:56:39 [main] DEBUG o.s.c.g.filter.GatewayMetricsFilter - New routes count: 0
2025-06-30 22:56:39 [scheduling-1] DEBUG c.c.t.a.g.c.ReleaseValidationConfig - Executing release strategy health check
2025-06-30 22:56:39 [scheduling-1] DEBUG c.c.t.a.g.c.ReleaseValidationConfig - Executing cleanup completed strategies
2025-06-30 22:56:39 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Performing periodic health check
2025-06-30 22:56:39 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Cleaning up expired instances
2025-06-30 22:56:39 [main] INFO  c.c.t.api.gateway.GatewayApplication - Started GatewayApplication in 7.693 seconds (process running for 9.607)
2025-06-30 22:56:39 [scheduling-1] INFO  c.c.t.a.g.s.QPSCleanupScheduler - === QPS Summary Report ===
2025-06-30 22:56:39 [scheduling-1] INFO  c.c.t.a.g.s.QPSCleanupScheduler - Global QPS: 0
2025-06-30 22:56:39 [scheduling-1] INFO  c.c.t.a.g.s.QPSCleanupScheduler - Active APIs: 0
2025-06-30 22:56:39 [scheduling-1] INFO  c.c.t.a.g.s.QPSCleanupScheduler - Active IPs: 0
2025-06-30 22:56:39 [scheduling-1] INFO  c.c.t.a.g.s.QPSCleanupScheduler - Active Users: 0
2025-06-30 22:56:39 [scheduling-1] INFO  c.c.t.a.g.s.QPSCleanupScheduler - Active Priorities: 0
2025-06-30 22:56:39 [scheduling-1] INFO  c.c.t.a.g.s.QPSCleanupScheduler - === End QPS Summary Report ===
2025-06-30 22:56:39 [scheduling-1] DEBUG c.c.t.a.g.s.QPSCleanupScheduler - Starting scheduled QPS data cleanup...
2025-06-30 22:56:39 [scheduling-1] INFO  c.c.t.api.gateway.metrics.QPSMetrics - Manual cleanup completed. Total cleaned: 0, Active entries: API=0, IP=0, User=0, Priority=0
2025-06-30 22:56:39 [scheduling-1] DEBUG c.c.t.a.g.s.QPSCleanupScheduler - Scheduled QPS data cleanup completed
2025-06-30 22:56:39 [scheduling-1] DEBUG c.c.t.a.g.t.AdaptiveTraceScheduler - Adaptive trace cleanup completed - No traces cleaned, Duration: 3ms, Multiplier: 1.0
2025-06-30 22:56:39 [scheduling-1] INFO  c.c.t.a.g.t.AdaptiveTraceScheduler - Adaptive Trace Statistics - Manager: Total=0, Sampled=0, Active=0, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0, Multiplier: 1.0
2025-06-30 22:56:39 [scheduling-1] DEBUG c.c.t.a.g.tracing.TraceScheduler - Scheduled trace cleanup completed - No traces cleaned, Duration: 0ms
2025-06-30 22:56:39 [scheduling-1] INFO  c.c.t.a.g.tracing.TraceScheduler - Trace Statistics - Manager: Total=0, Sampled=0, Active=0, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0
2025-06-30 22:56:49 [reactor-http-nio-2] DEBUG r.n.http.server.HttpServerOperations - [795fba9b, L:/127.0.0.1:8080 - R:/127.0.0.1:64926] New http connection, requesting read
2025-06-30 22:56:49 [reactor-http-nio-2] DEBUG r.netty.transport.TransportConfig - [795fba9b, L:/127.0.0.1:8080 - R:/127.0.0.1:64926] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpServerCodec), (reactor.left.httpTrafficHandler = reactor.netty.http.server.HttpTrafficHandler), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-06-30 22:56:49 [reactor-http-nio-2] DEBUG r.n.http.server.HttpServerOperations - [795fba9b, L:/127.0.0.1:8080 - R:/127.0.0.1:64926] Increasing pending responses count: 1
2025-06-30 22:56:49 [reactor-http-nio-2] DEBUG r.netty.http.server.HttpServer - [795fba9b-1, L:/127.0.0.1:8080 - R:/127.0.0.1:64926] Handler is being applied: org.springframework.http.server.reactive.ReactorHttpHandlerAdapter@2dd11ae9
2025-06-30 22:56:49 [reactor-http-nio-2] DEBUG o.s.c.g.h.RoutePredicateHandlerMapping - Route matched: payment-route
2025-06-30 22:56:49 [reactor-http-nio-2] DEBUG o.s.c.g.h.RoutePredicateHandlerMapping - Mapping [Exchange: POST http://localhost:8080/api/gateway/payment/process] to Route{id='payment-route', uri=http://localhost:8081, order=0, predicate=Paths: [/api/gateway/payment/**], match trailing slash: true, gatewayFilters=[[[RewritePath /api/gateway/payment/(?<segment>.*) = '/api/payment/${segment}'], order = 0], com.citi.tts.api.gateway.filter.AdvancedRateLimitFilter@513fab1e, [com.citi.tts.api.gateway.filter.ServiceDegradationGatewayFilter$1@3791281b, order = 0], com.citi.tts.api.gateway.filter.CircuitBreakerFilter@7f8f5d37, [com.citi.tts.api.gateway.filter.CryptoFilter@4c7f2fdb, order = 0]], metadata={}}
2025-06-30 22:56:49 [reactor-http-nio-2] DEBUG o.s.c.g.h.RoutePredicateHandlerMapping - [795fba9b-1] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@2a666c8e
2025-06-30 22:56:49 [reactor-http-nio-2] DEBUG o.s.c.g.handler.FilteringWebHandler - Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@50dd1e3a}, order = -2147483648], [GatewayFilterAdapter{delegate=com.citi.tts.api.gateway.tracing.TraceFilter@165454f7}, order = -2147483598], com.citi.tts.api.gateway.filter.AdvancedRateLimitFilter@513fab1e, [GatewayFilterAdapter{delegate=com.citi.tts.api.gateway.filter.QPSMetricsFilter@50930bff}, order = -2147483548], com.citi.tts.api.gateway.filter.CircuitBreakerFilter@7f8f5d37, [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@47b494ce}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@70f3bf00}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@5b72b13a}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@6f6c6c70}, order = 0], [[RewritePath /api/gateway/payment/(?<segment>.*) = '/api/payment/${segment}'], order = 0], [com.citi.tts.api.gateway.filter.ServiceDegradationGatewayFilter$1@3791281b, order = 0], [com.citi.tts.api.gateway.filter.CryptoFilter@4c7f2fdb, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@3b764e66}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ReactiveLoadBalancerClientFilter@3741071d}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.LoadBalancerServiceInstanceCookieFilter@7af0693b}, order = 10151], [GatewayFilterAdapter{delegate=com.citi.tts.api.gateway.filter.ServiceDegradationFilter@67ceaa9}, order = 2147483547], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@39451d92}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@53f1fcc2}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@38834000}, order = 2147483647]]
2025-06-30 22:56:49 [reactor-http-nio-2] DEBUG c.c.t.a.gateway.tracing.TraceContext - Created root trace context: 19b65aa5b84f484a9a549bc81de74e72
2025-06-30 22:56:49 [reactor-http-nio-2] DEBUG c.c.t.a.gateway.tracing.TraceManager - Created new sampled trace context: 19b65aa5b84f484a9a549bc81de74e72
2025-06-30 22:56:53 [reactor-http-nio-2] DEBUG c.c.t.a.g.f.AdvancedRateLimitFilter - Processing rate limit for: POST /api/gateway/payment/process from IP: 127.0.0.1, User: null
2025-06-30 22:56:53 [reactor-http-nio-2] DEBUG c.c.t.a.g.l.AdvancedRateLimiter - Token acquired for api_weight:NON_CORE: 1 tokens consumed, 14 remaining
2025-06-30 22:56:53 [reactor-http-nio-2] WARN  c.c.t.a.g.f.AdvancedRateLimitFilter - Rate limit processing took 13ms for path: /api/gateway/payment/process
2025-06-30 22:56:53 [reactor-http-nio-2] DEBUG c.c.t.a.g.filter.QPSMetricsFilter - QPS recorded - Path: /api/gateway/payment/process, IP: 127.0.0.1, User: anonymous, Priority: default
2025-06-30 22:56:53 [reactor-http-nio-2] DEBUG c.c.t.a.g.f.CircuitBreakerFilter - Using circuit breaker for API: /api/gateway/payment/process with priority: NON_CORE
2025-06-30 22:56:53 [reactor-http-nio-2] DEBUG c.c.t.a.g.f.ServiceDegradationGatewayFilter - Service degradation filter - Service: payment-service, Path: /api/payment/process, Level: CORE
2025-06-30 22:56:53 [reactor-http-nio-2] ERROR c.c.t.a.g.f.ServiceDegradationGatewayFilter - Service error detected - Service: payment-service, Path: /api/payment/process, Error: null
2025-06-30 22:56:53 [reactor-http-nio-2] DEBUG c.c.t.a.g.f.ServiceDegradationGatewayFilter - Error type NullPointerException is in non-degradation list
2025-06-30 22:56:53 [reactor-http-nio-2] INFO  c.c.t.a.g.f.ServiceDegradationGatewayFilter - Not triggering degradation for error type - Service: payment-service, Error: NullPointerException
2025-06-30 22:56:53 [reactor-http-nio-2] DEBUG r.n.http.server.HttpServerOperations - [795fba9b-1, L:/127.0.0.1:8080 - R:/127.0.0.1:64926] Last HTTP response frame
2025-06-30 22:56:53 [reactor-http-nio-2] DEBUG r.n.http.server.HttpServerOperations - [795fba9b-1, L:/127.0.0.1:8080 - R:/127.0.0.1:64926] Headers are not sent before onComplete().
2025-06-30 22:56:53 [reactor-http-nio-2] DEBUG r.n.http.server.HttpServerOperations - [795fba9b-1, L:/127.0.0.1:8080 - R:/127.0.0.1:64926] Decreasing pending responses count: 0
2025-06-30 22:56:53 [reactor-http-nio-2] DEBUG r.n.http.server.HttpServerOperations - [795fba9b-1, L:/127.0.0.1:8080 - R:/127.0.0.1:64926] Last HTTP packet was sent, terminating the channel
2025-06-30 22:56:53 [reactor-http-nio-2] DEBUG r.netty.channel.ChannelOperations - [795fba9b-1, L:/127.0.0.1:8080 - R:/127.0.0.1:64926] [HttpServer] Channel inbound receiver cancelled (subscription disposed).
2025-06-30 22:56:53 [reactor-http-nio-2] DEBUG i.g.r.c.i.CircuitBreakerStateMachine - CircuitBreaker 'nonCoreApiCircuitBreaker' succeeded:
2025-06-30 22:56:53 [reactor-http-nio-2] DEBUG c.c.t.a.gateway.tracing.TraceContext - Finished trace: 19b65aa5b84f484a9a549bc81de74e72 with status: 500
2025-06-30 22:56:53 [reactor-http-nio-2] ERROR reactor.core.publisher.Operators - Operator called default onErrorDropped
java.lang.RuntimeException: com.fasterxml.jackson.databind.exc.InvalidDefinitionException: Java 8 date/time type `java.time.Instant` not supported by default: add Module "com.fasterxml.jackson.datatype:jackson-datatype-jsr310" to enable handling (or disable `MapperFeature.REQUIRE_HANDLERS_FOR_JAVA8_TIMES`) (through reference chain: com.citi.tts.api.gateway.tracing.TraceContext["events"]->java.util.ArrayList[0]->com.citi.tts.api.gateway.tracing.TraceContext$TraceEvent["timestamp"])
	at com.citi.tts.api.gateway.tracing.TraceFilter.addTraceHeadersToResponse(TraceFilter.java:122)
	at com.citi.tts.api.gateway.tracing.TraceFilter.lambda$filter$0(TraceFilter.java:76)
	at reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.runFinally(FluxDoFinally.java:146)
	at reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete(FluxDoFinally.java:129)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at io.github.resilience4j.reactor.circuitbreaker.operator.CircuitBreakerSubscriber.hookOnComplete(CircuitBreakerSubscriber.java:69)
	at reactor.core.publisher.BaseSubscriber.onComplete(BaseSubscriber.java:197)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete(FluxDoFinally.java:128)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:210)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:241)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onComplete(MonoPeekTerminal.java:299)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onComplete(MonoPeekTerminal.java:299)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2230)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onComplete(FluxContextWrite.java:126)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onComplete(MonoPeekTerminal.java:299)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxPeekFuseable$PeekFuseableConditionalSubscriber.onComplete(FluxPeekFuseable.java:595)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onComplete(MonoPeekTerminal.java:299)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:89)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxConcatArray$ConcatArraySubscriber.onComplete(FluxConcatArray.java:209)
	at reactor.core.publisher.FluxConcatArray.subscribe(FluxConcatArray.java:79)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxFlatMap.trySubscribeScalarMap(FluxFlatMap.java:202)
	at reactor.core.publisher.MonoFlatMap.subscribeOrReturn(MonoFlatMap.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4560)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:544)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:49)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:38)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxFlatMap.trySubscribeScalarMap(FluxFlatMap.java:202)
	at reactor.core.publisher.MonoFlatMap.subscribeOrReturn(MonoFlatMap.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:63)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.drain(FluxFilterWhen.java:272)
	at reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.request(FluxFilterWhen.java:160)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:633)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:633)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:633)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:864)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:790)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:333)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:455)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: com.fasterxml.jackson.databind.exc.InvalidDefinitionException: Java 8 date/time type `java.time.Instant` not supported by default: add Module "com.fasterxml.jackson.datatype:jackson-datatype-jsr310" to enable handling (or disable `MapperFeature.REQUIRE_HANDLERS_FOR_JAVA8_TIMES`) (through reference chain: com.citi.tts.api.gateway.tracing.TraceContext["events"]->java.util.ArrayList[0]->com.citi.tts.api.gateway.tracing.TraceContext$TraceEvent["timestamp"])
	at com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:77)
	at com.fasterxml.jackson.databind.SerializerProvider.reportBadDefinition(SerializerProvider.java:1359)
	at com.fasterxml.jackson.databind.ser.impl.UnsupportedTypeSerializer.serialize(UnsupportedTypeSerializer.java:34)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:760)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serializeContents(IndexedListSerializer.java:119)
	at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serialize(IndexedListSerializer.java:79)
	at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serialize(IndexedListSerializer.java:18)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:760)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._serialize(DefaultSerializerProvider.java:503)
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(DefaultSerializerProvider.java:342)
	at com.fasterxml.jackson.databind.ObjectMapper._writeValueAndClose(ObjectMapper.java:4859)
	at com.fasterxml.jackson.databind.ObjectMapper.writeValueAsString(ObjectMapper.java:4079)
	at com.citi.tts.api.gateway.tracing.TraceFilter.addTraceHeadersToResponse(TraceFilter.java:120)
	... 190 common frames omitted
2025-06-30 22:56:53 [reactor-http-nio-2] DEBUG r.n.channel.ChannelOperationsHandler - [795fba9b, L:/127.0.0.1:8080 - R:/127.0.0.1:64926] No ChannelOperation attached.
2025-06-30 22:57:09 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Performing periodic health check
2025-06-30 22:57:37 [boundedElastic-2] INFO  c.c.t.a.g.t.ReactiveTraceScheduler - Reactive Trace Statistics - Manager: Total=1, Sampled=1, Active=1, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0
2025-06-30 22:57:39 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Performing periodic health check
2025-06-30 22:57:39 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Cleaning up expired instances
2025-06-30 22:57:39 [scheduling-1] DEBUG c.c.t.a.g.s.QPSCleanupScheduler - Starting scheduled QPS data cleanup...
2025-06-30 22:57:39 [scheduling-1] INFO  c.c.t.api.gateway.metrics.QPSMetrics - Manual cleanup completed. Total cleaned: 0, Active entries: API=1, IP=1, User=1, Priority=1
2025-06-30 22:57:39 [scheduling-1] DEBUG c.c.t.a.g.s.QPSCleanupScheduler - Scheduled QPS data cleanup completed
2025-06-30 22:57:39 [scheduling-1] INFO  c.c.t.a.g.t.AdaptiveTraceScheduler - Adaptive Trace Statistics - Manager: Total=1, Sampled=1, Active=1, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0, Multiplier: 1.0
2025-06-30 22:57:39 [scheduling-1] INFO  c.c.t.a.g.tracing.TraceScheduler - Trace Statistics - Manager: Total=1, Sampled=1, Active=1, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0
2025-06-30 22:57:51 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.netty.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-06-30 22:57:51 [netty-shutdown] DEBUG r.netty.transport.ServerTransport - [40f91f76, L:/[0:0:0:0:0:0:0:0]:8080] Server is about to be disposed with timeout: PT2562047H47M16.854775807S
2025-06-30 22:57:51 [netty-shutdown] INFO  o.s.b.w.e.netty.GracefulShutdown - Graceful shutdown complete
2025-06-30 22:57:51 [SpringApplicationShutdownHook] DEBUG r.netty.transport.ServerTransport - [40f91f76, L:/[0:0:0:0:0:0:0:0]:8080] Server has been disposed
2025-06-30 22:57:53 [SpringApplicationShutdownHook] INFO  c.c.t.a.g.t.ReactiveTraceScheduler - Stopping reactive trace scheduler
2025-06-30 22:57:53 [SpringApplicationShutdownHook] INFO  c.c.t.a.g.audit.AsyncAuditService - Shutting down async audit service...
2025-06-30 22:57:58 [async-audit-worker] INFO  c.c.t.a.g.audit.AsyncAuditService - Async audit log processor stopped
2025-06-30 22:57:58 [SpringApplicationShutdownHook] INFO  c.c.t.a.g.audit.AsyncAuditService - Async audit service shutdown completed
2025-06-30 22:58:04 [main] INFO  c.c.t.api.gateway.GatewayApplication - Starting GatewayApplication using Java 21.0.7 with PID 71871 (/Users/ouyangbaobao/gateway/build/classes/java/main started by ouyangbaobao in /Users/ouyangbaobao/gateway)
2025-06-30 22:58:04 [main] DEBUG c.c.t.api.gateway.GatewayApplication - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-06-30 22:58:04 [main] INFO  c.c.t.api.gateway.GatewayApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-30 22:58:06 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:58:06 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:58:06 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:58:06 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:58:06 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:58:06 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:58:06 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:58:06 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:58:06 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:58:06 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:58:06 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:58:06 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:58:06 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:58:06 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:58:06 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:58:06 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:58:06 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:58:06 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:58:06 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:58:06 [main] DEBUG i.g.r.s.u.RxJava2OnClasspathCondition - RxJava2 related Aspect extensions are not activated, because RxJava2 is not on the classpath.
2025-06-30 22:58:06 [main] DEBUG i.g.r.s.u.AspectJOnClasspathCondition - Aspects are not activated because AspectJ is not on the classpath.
2025-06-30 22:58:06 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-30 22:58:06 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-30 22:58:06 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 34 ms. Found 0 Redis repository interfaces.
2025-06-30 22:58:07 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=73051835-87f0-3b1a-9de3-b617333333e0
2025-06-30 22:58:08 [async-audit-worker] INFO  c.c.t.a.g.audit.AsyncAuditService - Async audit log processor started
2025-06-30 22:58:08 [main] INFO  c.c.t.a.g.audit.AsyncAuditService - Async audit service initialized - batchSize: 100, flushInterval: 5000ms, queueSize: 10000
2025-06-30 22:58:08 [main] INFO  c.c.t.a.g.config.WebClientConfig - Created optimized WebClient: normal-service - maxConnections: 8, maxIdleConnections: 3, connectTimeout: 2500ms, readTimeout: 5000ms, writeTimeout: 3000ms
2025-06-30 22:58:08 [main] INFO  c.c.t.a.g.config.RateLimitConfig - === 限流配置验证 ===
2025-06-30 22:58:08 [main] INFO  c.c.t.a.g.config.RateLimitConfig - 全局默认QPS: 80, Burst: 120
2025-06-30 22:58:08 [main] INFO  c.c.t.a.g.config.RateLimitConfig - IP限流: 30 QPS, 50 Burst, 启用: true
2025-06-30 22:58:08 [main] INFO  c.c.t.a.g.config.RateLimitConfig - 用户限流: 20 QPS, 35 Burst, 启用: true
2025-06-30 22:58:08 [main] INFO  c.c.t.a.g.config.RateLimitConfig - URL限流: 40 QPS, 60 Burst, 启用: true
2025-06-30 22:58:08 [main] INFO  c.c.t.a.g.config.RateLimitConfig - API权重限流启用: true
2025-06-30 22:58:08 [main] INFO  c.c.t.a.g.config.RateLimitConfig - API权重总QPS: 110 (允许轻微超载)
2025-06-30 22:58:08 [main] INFO  c.c.t.a.g.config.RateLimitConfig - === 限流配置验证完成 ===
2025-06-30 22:58:08 [main] INFO  c.c.t.a.g.services.ApiRoutingService - API priority map initialized with 15 entries
2025-06-30 22:58:08 [main] INFO  c.c.t.a.g.config.RateLimitConfig - === 限流配置验证 ===
2025-06-30 22:58:08 [main] INFO  c.c.t.a.g.config.RateLimitConfig - 全局默认QPS: 80, Burst: 120
2025-06-30 22:58:08 [main] INFO  c.c.t.a.g.config.RateLimitConfig - IP限流: 30 QPS, 50 Burst, 启用: true
2025-06-30 22:58:08 [main] INFO  c.c.t.a.g.config.RateLimitConfig - 用户限流: 20 QPS, 35 Burst, 启用: true
2025-06-30 22:58:08 [main] INFO  c.c.t.a.g.config.RateLimitConfig - URL限流: 40 QPS, 60 Burst, 启用: true
2025-06-30 22:58:08 [main] INFO  c.c.t.a.g.config.RateLimitConfig - API权重限流启用: true
2025-06-30 22:58:08 [main] INFO  c.c.t.a.g.config.RateLimitConfig - API权重总QPS: 110 (允许轻微超载)
2025-06-30 22:58:08 [main] INFO  c.c.t.a.g.config.RateLimitConfig - === 限流配置验证完成 ===
2025-06-30 22:58:09 [main] INFO  c.c.t.a.g.config.WebClientConfig - Created optimized WebClient: default - maxConnections: 6, maxIdleConnections: 2, connectTimeout: 2000ms, readTimeout: 5000ms, writeTimeout: 3000ms
2025-06-30 22:58:09 [main] INFO  c.c.t.a.g.config.WebClientConfig - Created optimized WebClient: core-service - maxConnections: 25, maxIdleConnections: 8, connectTimeout: 1500ms, readTimeout: 3000ms, writeTimeout: 2000ms
2025-06-30 22:58:09 [main] INFO  c.c.t.a.g.config.WebClientConfig - Created optimized WebClient: important-service - maxConnections: 15, maxIdleConnections: 5, connectTimeout: 2000ms, readTimeout: 4000ms, writeTimeout: 2500ms
2025-06-30 22:58:09 [main] INFO  c.c.t.a.g.config.WebClientConfig - Created optimized WebClient: non-core-service - maxConnections: 4, maxIdleConnections: 2, connectTimeout: 3000ms, readTimeout: 8000ms, writeTimeout: 4000ms
2025-06-30 22:58:09 [main] INFO  c.c.t.a.g.t.ReactiveTraceScheduler - Starting reactive trace scheduler
2025-06-30 22:58:10 [main] DEBUG o.s.c.g.f.f.c.LocalResponseCacheProperties - No TTL configuration found. Default TTL will be applied for cache entries: PT5M minutes
2025-06-30 22:58:10 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [After]
2025-06-30 22:58:10 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Before]
2025-06-30 22:58:10 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Between]
2025-06-30 22:58:10 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Cookie]
2025-06-30 22:58:10 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Header]
2025-06-30 22:58:10 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Host]
2025-06-30 22:58:10 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Method]
2025-06-30 22:58:10 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Path]
2025-06-30 22:58:10 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Query]
2025-06-30 22:58:10 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [ReadBody]
2025-06-30 22:58:10 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [RemoteAddr]
2025-06-30 22:58:10 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [XForwardedRemoteAddr]
2025-06-30 22:58:10 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Weight]
2025-06-30 22:58:10 [main] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [CloudFoundryRouteService]
2025-06-30 22:58:10 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 5 endpoints beneath base path '/actuator'
2025-06-30 22:58:11 [main] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default LoopResources: DefaultLoopResources {prefix=reactor-http, daemon=true, selectCount=8, workerCount=8}
2025-06-30 22:58:11 [main] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default ConnectionProvider: reactor.netty.resources.DefaultPooledConnectionProvider@711261c7
2025-06-30 22:58:11 [main] DEBUG r.netty.resources.DefaultLoopIOUring - Default io_uring support : false
2025-06-30 22:58:11 [main] DEBUG r.netty.resources.DefaultLoopEpoll - Default Epoll support : false
2025-06-30 22:58:11 [main] DEBUG r.netty.resources.DefaultLoopKQueue - Default KQueue support : false
2025-06-30 22:58:11 [reactor-http-nio-1] DEBUG r.netty.transport.ServerTransport - [f01ca5b0, L:/[0:0:0:0:0:0:0:0]:8080] Bound new server
2025-06-30 22:58:11 [main] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port 8080 (http)
2025-06-30 22:58:11 [scheduling-1] DEBUG c.c.t.a.g.c.ReleaseValidationConfig - Executing auto step traffic scheduler
2025-06-30 22:58:11 [main] DEBUG o.s.c.g.filter.GatewayMetricsFilter - New routes count: 0
2025-06-30 22:58:11 [scheduling-1] DEBUG c.c.t.a.g.c.ReleaseValidationConfig - Executing release strategy health check
2025-06-30 22:58:11 [scheduling-1] DEBUG c.c.t.a.g.c.ReleaseValidationConfig - Executing cleanup completed strategies
2025-06-30 22:58:11 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Performing periodic health check
2025-06-30 22:58:11 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Cleaning up expired instances
2025-06-30 22:58:11 [scheduling-1] DEBUG c.c.t.a.g.s.QPSCleanupScheduler - Starting scheduled QPS data cleanup...
2025-06-30 22:58:11 [main] INFO  c.c.t.api.gateway.GatewayApplication - Started GatewayApplication in 7.738 seconds (process running for 9.278)
2025-06-30 22:58:11 [scheduling-1] INFO  c.c.t.api.gateway.metrics.QPSMetrics - Manual cleanup completed. Total cleaned: 0, Active entries: API=0, IP=0, User=0, Priority=0
2025-06-30 22:58:11 [scheduling-1] DEBUG c.c.t.a.g.s.QPSCleanupScheduler - Scheduled QPS data cleanup completed
2025-06-30 22:58:11 [scheduling-1] INFO  c.c.t.a.g.s.QPSCleanupScheduler - === QPS Summary Report ===
2025-06-30 22:58:11 [scheduling-1] INFO  c.c.t.a.g.s.QPSCleanupScheduler - Global QPS: 0
2025-06-30 22:58:11 [scheduling-1] INFO  c.c.t.a.g.s.QPSCleanupScheduler - Active APIs: 0
2025-06-30 22:58:11 [scheduling-1] INFO  c.c.t.a.g.s.QPSCleanupScheduler - Active IPs: 0
2025-06-30 22:58:11 [scheduling-1] INFO  c.c.t.a.g.s.QPSCleanupScheduler - Active Users: 0
2025-06-30 22:58:11 [scheduling-1] INFO  c.c.t.a.g.s.QPSCleanupScheduler - Active Priorities: 0
2025-06-30 22:58:11 [scheduling-1] INFO  c.c.t.a.g.s.QPSCleanupScheduler - === End QPS Summary Report ===
2025-06-30 22:58:11 [scheduling-1] DEBUG c.c.t.a.g.t.AdaptiveTraceScheduler - Adaptive trace cleanup completed - No traces cleaned, Duration: 3ms, Multiplier: 1.0
2025-06-30 22:58:11 [scheduling-1] INFO  c.c.t.a.g.t.AdaptiveTraceScheduler - Adaptive Trace Statistics - Manager: Total=0, Sampled=0, Active=0, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0, Multiplier: 1.0
2025-06-30 22:58:11 [scheduling-1] DEBUG c.c.t.a.g.tracing.TraceScheduler - Scheduled trace cleanup completed - No traces cleaned, Duration: 1ms
2025-06-30 22:58:11 [scheduling-1] INFO  c.c.t.a.g.tracing.TraceScheduler - Trace Statistics - Manager: Total=0, Sampled=0, Active=0, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0
2025-06-30 22:58:12 [boundedElastic-1] WARN  o.s.b.a.d.r.RedisReactiveHealthIndicator - Redis health check failed
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1858)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.MonoSubscribeOnCallable] :
	reactor.core.publisher.Mono.subscribeOn(Mono.java:4625)
	org.springframework.boot.actuate.data.redis.RedisReactiveHealthIndicator.getConnection(RedisReactiveHealthIndicator.java:57)
Error has been observed at the following site(s):
	*__Mono.subscribeOn ⇢ at org.springframework.boot.actuate.data.redis.RedisReactiveHealthIndicator.getConnection(RedisReactiveHealthIndicator.java:57)
	|_     Mono.flatMap ⇢ at org.springframework.boot.actuate.data.redis.RedisReactiveHealthIndicator.doHealthCheck(RedisReactiveHealthIndicator.java:52)
Original Stack Trace:
		at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1858)
		at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1789)
		at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1586)
		at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.lambda$getConnection$0(LettuceConnectionFactory.java:1566)
		at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.doInLock(LettuceConnectionFactory.java:1527)
		at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1563)
		at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedReactiveConnection(LettuceConnectionFactory.java:1274)
		at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getReactiveConnection(LettuceConnectionFactory.java:1149)
		at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getReactiveConnection(LettuceConnectionFactory.java:120)
		at reactor.core.publisher.MonoSupplier.call(MonoSupplier.java:67)
		at reactor.core.publisher.FluxSubscribeOnCallable$CallableSubscribeOnSubscription.run(FluxSubscribeOnCallable.java:228)
		at reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)
		at reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)
		at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:317)
		at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
		at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
		at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
		at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
		at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to localhost/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:63)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:41)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:354)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:220)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:112)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:112)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1787)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1586)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.lambda$getConnection$0(LettuceConnectionFactory.java:1566)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.doInLock(LettuceConnectionFactory.java:1527)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1563)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedReactiveConnection(LettuceConnectionFactory.java:1274)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getReactiveConnection(LettuceConnectionFactory.java:1149)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getReactiveConnection(LettuceConnectionFactory.java:120)
	at reactor.core.publisher.MonoSupplier.call(MonoSupplier.java:67)
	at reactor.core.publisher.MonoCallableOnAssembly.call(MonoCallableOnAssembly.java:91)
	at reactor.core.publisher.FluxSubscribeOnCallable$CallableSubscribeOnSubscription.run(FluxSubscribeOnCallable.java:228)
	at reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)
	at reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:317)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: localhost/127.0.0.1:6379
Caused by: java.net.ConnectException: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:973)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:336)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:339)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-06-30 22:58:16 [reactor-http-nio-2] DEBUG r.n.http.server.HttpServerOperations - [35765a9d, L:/127.0.0.1:8080 - R:/127.0.0.1:64995] New http connection, requesting read
2025-06-30 22:58:16 [reactor-http-nio-2] DEBUG r.netty.transport.TransportConfig - [35765a9d, L:/127.0.0.1:8080 - R:/127.0.0.1:64995] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpServerCodec), (reactor.left.httpTrafficHandler = reactor.netty.http.server.HttpTrafficHandler), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-06-30 22:58:16 [reactor-http-nio-2] DEBUG r.n.http.server.HttpServerOperations - [35765a9d, L:/127.0.0.1:8080 - R:/127.0.0.1:64995] Increasing pending responses count: 1
2025-06-30 22:58:16 [reactor-http-nio-2] DEBUG r.netty.http.server.HttpServer - [35765a9d-1, L:/127.0.0.1:8080 - R:/127.0.0.1:64995] Handler is being applied: org.springframework.http.server.reactive.ReactorHttpHandlerAdapter@2745b14f
2025-06-30 22:58:16 [reactor-http-nio-2] DEBUG o.s.c.g.h.RoutePredicateHandlerMapping - Route matched: payment-route
2025-06-30 22:58:16 [reactor-http-nio-2] DEBUG o.s.c.g.h.RoutePredicateHandlerMapping - Mapping [Exchange: POST http://localhost:8080/api/gateway/payment/process] to Route{id='payment-route', uri=http://localhost:8081, order=0, predicate=Paths: [/api/gateway/payment/**], match trailing slash: true, gatewayFilters=[[[RewritePath /api/gateway/payment/(?<segment>.*) = '/api/payment/${segment}'], order = 0], com.citi.tts.api.gateway.filter.AdvancedRateLimitFilter@41d877bb, [com.citi.tts.api.gateway.filter.ServiceDegradationGatewayFilter$1@200b83c6, order = 0], com.citi.tts.api.gateway.filter.CircuitBreakerFilter@f9cd1e6, [com.citi.tts.api.gateway.filter.CryptoFilter@1b5cf611, order = 0]], metadata={}}
2025-06-30 22:58:16 [reactor-http-nio-2] DEBUG o.s.c.g.h.RoutePredicateHandlerMapping - [35765a9d-1] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@209b4b35
2025-06-30 22:58:16 [reactor-http-nio-2] DEBUG o.s.c.g.handler.FilteringWebHandler - Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@48cbe1c9}, order = -2147483648], [GatewayFilterAdapter{delegate=com.citi.tts.api.gateway.tracing.TraceFilter@2a19c36b}, order = -2147483598], com.citi.tts.api.gateway.filter.AdvancedRateLimitFilter@41d877bb, [GatewayFilterAdapter{delegate=com.citi.tts.api.gateway.filter.QPSMetricsFilter@296bfddb}, order = -2147483548], com.citi.tts.api.gateway.filter.CircuitBreakerFilter@f9cd1e6, [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@6a6a3fc4}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@21b2579d}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@6ca30886}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@2a666c8e}, order = 0], [[RewritePath /api/gateway/payment/(?<segment>.*) = '/api/payment/${segment}'], order = 0], [com.citi.tts.api.gateway.filter.ServiceDegradationGatewayFilter$1@200b83c6, order = 0], [com.citi.tts.api.gateway.filter.CryptoFilter@1b5cf611, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@67e628b}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ReactiveLoadBalancerClientFilter@351d726c}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.LoadBalancerServiceInstanceCookieFilter@1791396b}, order = 10151], [GatewayFilterAdapter{delegate=com.citi.tts.api.gateway.filter.ServiceDegradationFilter@3ea6faf0}, order = 2147483547], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@69b80603}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@22ea6051}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@578c99ac}, order = 2147483647]]
2025-06-30 22:58:16 [reactor-http-nio-2] DEBUG c.c.t.a.gateway.tracing.TraceContext - Created root trace context: 87ed021a67b24676b0119d69b5a3fd2f
2025-06-30 22:58:16 [reactor-http-nio-2] DEBUG c.c.t.a.gateway.tracing.TraceManager - Created new sampled trace context: 87ed021a67b24676b0119d69b5a3fd2f
2025-06-30 22:58:19 [reactor-http-nio-2] DEBUG c.c.t.a.g.f.AdvancedRateLimitFilter - Processing rate limit for: POST /api/gateway/payment/process from IP: 127.0.0.1, User: null
2025-06-30 22:58:19 [reactor-http-nio-2] DEBUG c.c.t.a.g.l.AdvancedRateLimiter - Token acquired for api_weight:NON_CORE: 1 tokens consumed, 14 remaining
2025-06-30 22:58:19 [reactor-http-nio-2] DEBUG c.c.t.a.g.filter.QPSMetricsFilter - QPS recorded - Path: /api/gateway/payment/process, IP: 127.0.0.1, User: anonymous, Priority: default
2025-06-30 22:58:19 [reactor-http-nio-2] DEBUG c.c.t.a.g.f.CircuitBreakerFilter - Using circuit breaker for API: /api/gateway/payment/process with priority: NON_CORE
2025-06-30 22:58:19 [reactor-http-nio-2] DEBUG c.c.t.a.g.f.ServiceDegradationGatewayFilter - Service degradation filter - Service: payment-service, Path: /api/payment/process, Level: CORE
2025-06-30 22:58:19 [reactor-http-nio-2] ERROR c.c.t.a.g.f.ServiceDegradationGatewayFilter - Service error detected - Service: payment-service, Path: /api/payment/process, Error: null
2025-06-30 22:58:19 [reactor-http-nio-2] DEBUG c.c.t.a.g.f.ServiceDegradationGatewayFilter - Error type NullPointerException is in non-degradation list
2025-06-30 22:58:19 [reactor-http-nio-2] INFO  c.c.t.a.g.f.ServiceDegradationGatewayFilter - Not triggering degradation for error type - Service: payment-service, Error: NullPointerException
2025-06-30 22:58:19 [reactor-http-nio-2] DEBUG r.n.http.server.HttpServerOperations - [35765a9d-1, L:/127.0.0.1:8080 - R:/127.0.0.1:64995] Last HTTP response frame
2025-06-30 22:58:19 [reactor-http-nio-2] DEBUG r.n.http.server.HttpServerOperations - [35765a9d-1, L:/127.0.0.1:8080 - R:/127.0.0.1:64995] Headers are not sent before onComplete().
2025-06-30 22:58:19 [reactor-http-nio-2] DEBUG r.n.http.server.HttpServerOperations - [35765a9d-1, L:/127.0.0.1:8080 - R:/127.0.0.1:64995] Decreasing pending responses count: 0
2025-06-30 22:58:19 [reactor-http-nio-2] DEBUG r.n.http.server.HttpServerOperations - [35765a9d-1, L:/127.0.0.1:8080 - R:/127.0.0.1:64995] Last HTTP packet was sent, terminating the channel
2025-06-30 22:58:19 [reactor-http-nio-2] DEBUG r.netty.channel.ChannelOperations - [35765a9d-1, L:/127.0.0.1:8080 - R:/127.0.0.1:64995] [HttpServer] Channel inbound receiver cancelled (subscription disposed).
2025-06-30 22:58:19 [reactor-http-nio-2] DEBUG i.g.r.c.i.CircuitBreakerStateMachine - CircuitBreaker 'nonCoreApiCircuitBreaker' succeeded:
2025-06-30 22:58:19 [reactor-http-nio-2] DEBUG c.c.t.a.gateway.tracing.TraceContext - Finished trace: 87ed021a67b24676b0119d69b5a3fd2f with status: 500
2025-06-30 22:58:19 [reactor-http-nio-2] DEBUG c.c.t.a.g.audit.AsyncAuditService - Audit log queued: trace - {"traceId":"87ed021a67b24676b0119d69b5a3fd2f","spanId":"b64ba373a6ed488b","parentSpanId":null,"requestId":"39c03913-8bc3-45a4-ad2e-abc179e019de","correlationId":null,"userId":null,"tenantId":null,"serviceName":"api-gateway","operationName":"POST /api/gateway/payment/process","startTime":1751295496143,"endTime":1751295499458,"statusCode":500,"errorMessage":"HTTP 500 500 INTERNAL_SERVER_ERROR","tags":{"duration.ms":"3321","http.port":"8080","http.path":"/api/gateway/payment/process","client.ip":"127.0.0.1","error":"true","signal.type":"ON_COMPLETE","http.host":"localhost","http.status_code":"500","user.agent":"IntelliJ HTTP Client/IntelliJ IDEA 2025.1.3","response.content_type":"application/json","error.message":"HTTP 500 500 INTERNAL_SERVER_ERROR","http.method":"POST"},"events":[{"name":"request.start","message":"Request processing started","timestamp":1751295496150,"tags":{}}],"childSpans":[],"sampled":true,"level":"INFO","traceHeaders":{"X-Span-ID":"b64ba373a6ed488b","X-Request-ID":"39c03913-8bc3-45a4-ad2e-abc179e019de","X-Correlation-ID":null,"X-Trace-ID":"87ed021a67b24676b0119d69b5a3fd2f","X-Sampled":"true"},"durationMs":3315}
2025-06-30 22:58:19 [reactor-http-nio-2] DEBUG c.c.t.a.gateway.tracing.TraceFilter - Trace completed - TraceId: 87ed021a67b24676b0119d69b5a3fd2f, SpanId: b64ba373a6ed488b, Duration: 3321ms, Status: 500, Path: /api/gateway/payment/process
2025-06-30 22:58:19 [reactor-http-nio-2] WARN  c.c.t.a.gateway.tracing.TraceFilter - Slow request detected - TraceId: 87ed021a67b24676b0119d69b5a3fd2f, Duration: 3321ms, Path: /api/gateway/payment/process
2025-06-30 22:58:19 [reactor-http-nio-2] WARN  c.c.t.a.gateway.tracing.TraceFilter - Error request detected - TraceId: 87ed021a67b24676b0119d69b5a3fd2f, Status: 500, Path: /api/gateway/payment/process, Error: HTTP 500 500 INTERNAL_SERVER_ERROR
2025-06-30 22:58:19 [reactor-http-nio-2] DEBUG r.n.channel.ChannelOperationsHandler - [35765a9d, L:/127.0.0.1:8080 - R:/127.0.0.1:64995] No ChannelOperation attached.
2025-06-30 22:58:23 [async-audit-scheduler] INFO  c.c.t.a.g.audit.AsyncAuditService - === Batch Audit Log ===
Timestamp: 2025-06-30T22:58:23.157947
Batch Size: 1
Entries:
[2025-06-30T22:58:19.517] trace: {"traceId":"87ed021a67b24676b0119d69b5a3fd2f","spanId":"b64ba373a6ed488b","parentSpanId":null,"requestId":"39c03913-8bc3-45a4-ad2e-abc179e019de","correlationId":null,"userId":null,"tenantId":null,"serviceName":"api-gateway","operationName":"POST /api/gateway/payment/process","startTime":1751295496143,"endTime":1751295499458,"statusCode":500,"errorMessage":"HTTP 500 500 INTERNAL_SERVER_ERROR","tags":{"duration.ms":"3321","http.port":"8080","http.path":"/api/gateway/payment/process","client.ip":"127.0.0.1","error":"true","signal.type":"ON_COMPLETE","http.host":"localhost","http.status_code":"500","user.agent":"IntelliJ HTTP Client/IntelliJ IDEA 2025.1.3","response.content_type":"application/json","error.message":"HTTP 500 500 INTERNAL_SERVER_ERROR","http.method":"POST"},"events":[{"name":"request.start","message":"Request processing started","timestamp":1751295496150,"tags":{}}],"childSpans":[],"sampled":true,"level":"INFO","traceHeaders":{"X-Span-ID":"b64ba373a6ed488b","X-Request-ID":"39c03913-8bc3-45a4-ad2e-abc179e019de","X-Correlation-ID":null,"X-Trace-ID":"87ed021a67b24676b0119d69b5a3fd2f","X-Sampled":"true"},"durationMs":3315}
=== End Batch ===

2025-06-30 22:58:23 [async-audit-scheduler] DEBUG c.c.t.a.g.audit.AsyncAuditService - Flushed 1 audit logs in batch
2025-06-30 22:58:41 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Performing periodic health check
2025-06-30 22:59:09 [boundedElastic-2] INFO  c.c.t.a.g.t.ReactiveTraceScheduler - Reactive Trace Statistics - Manager: Total=1, Sampled=1, Active=1, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0
2025-06-30 22:59:11 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Performing periodic health check
2025-06-30 22:59:11 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Cleaning up expired instances
2025-06-30 22:59:11 [scheduling-1] DEBUG c.c.t.a.g.s.QPSCleanupScheduler - Starting scheduled QPS data cleanup...
2025-06-30 22:59:11 [scheduling-1] INFO  c.c.t.api.gateway.metrics.QPSMetrics - Manual cleanup completed. Total cleaned: 0, Active entries: API=1, IP=1, User=1, Priority=1
2025-06-30 22:59:11 [scheduling-1] DEBUG c.c.t.a.g.s.QPSCleanupScheduler - Scheduled QPS data cleanup completed
2025-06-30 22:59:11 [scheduling-1] INFO  c.c.t.a.g.t.AdaptiveTraceScheduler - Adaptive Trace Statistics - Manager: Total=1, Sampled=1, Active=1, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0, Multiplier: 1.0
2025-06-30 22:59:11 [scheduling-1] INFO  c.c.t.a.g.tracing.TraceScheduler - Trace Statistics - Manager: Total=1, Sampled=1, Active=1, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0
2025-06-30 22:59:41 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Performing periodic health check
2025-06-30 22:59:54 [reactor-http-nio-3] DEBUG r.n.http.server.HttpServerOperations - [120d8194, L:/127.0.0.1:8080 - R:/127.0.0.1:65042] New http connection, requesting read
2025-06-30 22:59:54 [reactor-http-nio-3] DEBUG r.netty.transport.TransportConfig - [120d8194, L:/127.0.0.1:8080 - R:/127.0.0.1:65042] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpServerCodec), (reactor.left.httpTrafficHandler = reactor.netty.http.server.HttpTrafficHandler), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-06-30 22:59:54 [reactor-http-nio-3] DEBUG r.n.http.server.HttpServerOperations - [120d8194, L:/127.0.0.1:8080 - R:/127.0.0.1:65042] Increasing pending responses count: 1
2025-06-30 22:59:54 [reactor-http-nio-3] DEBUG r.netty.http.server.HttpServer - [120d8194-1, L:/127.0.0.1:8080 - R:/127.0.0.1:65042] Handler is being applied: org.springframework.http.server.reactive.ReactorHttpHandlerAdapter@2745b14f
2025-06-30 22:59:54 [reactor-http-nio-3] DEBUG o.s.c.g.h.RoutePredicateHandlerMapping - Route matched: payment-route
2025-06-30 22:59:54 [reactor-http-nio-3] DEBUG o.s.c.g.h.RoutePredicateHandlerMapping - Mapping [Exchange: POST http://localhost:8080/api/gateway/payment/process] to Route{id='payment-route', uri=http://localhost:8081, order=0, predicate=Paths: [/api/gateway/payment/**], match trailing slash: true, gatewayFilters=[[[RewritePath /api/gateway/payment/(?<segment>.*) = '/api/payment/${segment}'], order = 0], com.citi.tts.api.gateway.filter.AdvancedRateLimitFilter@41d877bb, [com.citi.tts.api.gateway.filter.ServiceDegradationGatewayFilter$1@200b83c6, order = 0], com.citi.tts.api.gateway.filter.CircuitBreakerFilter@f9cd1e6, [com.citi.tts.api.gateway.filter.CryptoFilter@1b5cf611, order = 0]], metadata={}}
2025-06-30 22:59:54 [reactor-http-nio-3] DEBUG o.s.c.g.h.RoutePredicateHandlerMapping - [120d8194-2] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@209b4b35
2025-06-30 22:59:54 [reactor-http-nio-3] DEBUG o.s.c.g.handler.FilteringWebHandler - Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@48cbe1c9}, order = -2147483648], [GatewayFilterAdapter{delegate=com.citi.tts.api.gateway.tracing.TraceFilter@2a19c36b}, order = -2147483598], com.citi.tts.api.gateway.filter.AdvancedRateLimitFilter@41d877bb, [GatewayFilterAdapter{delegate=com.citi.tts.api.gateway.filter.QPSMetricsFilter@296bfddb}, order = -2147483548], com.citi.tts.api.gateway.filter.CircuitBreakerFilter@f9cd1e6, [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@6a6a3fc4}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@21b2579d}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@6ca30886}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@2a666c8e}, order = 0], [[RewritePath /api/gateway/payment/(?<segment>.*) = '/api/payment/${segment}'], order = 0], [com.citi.tts.api.gateway.filter.ServiceDegradationGatewayFilter$1@200b83c6, order = 0], [com.citi.tts.api.gateway.filter.CryptoFilter@1b5cf611, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@67e628b}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ReactiveLoadBalancerClientFilter@351d726c}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.LoadBalancerServiceInstanceCookieFilter@1791396b}, order = 10151], [GatewayFilterAdapter{delegate=com.citi.tts.api.gateway.filter.ServiceDegradationFilter@3ea6faf0}, order = 2147483547], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@69b80603}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@22ea6051}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@578c99ac}, order = 2147483647]]
2025-06-30 22:59:54 [reactor-http-nio-3] DEBUG c.c.t.a.gateway.tracing.TraceContext - Created root trace context: ff31beecbefc47c688db1b2e5f5b1387
2025-06-30 22:59:54 [reactor-http-nio-3] DEBUG c.c.t.a.gateway.tracing.TraceManager - Created new sampled trace context: ff31beecbefc47c688db1b2e5f5b1387
2025-06-30 23:00:00 [reactor-http-nio-3] DEBUG c.c.t.a.g.f.AdvancedRateLimitFilter - Processing rate limit for: POST /api/gateway/payment/process from IP: 127.0.0.1, User: null
2025-06-30 23:00:00 [reactor-http-nio-3] DEBUG c.c.t.a.g.l.AdvancedRateLimiter - Tokens refilled for api_weight:NON_CORE: +1000 tokens, total: 15
2025-06-30 23:00:00 [reactor-http-nio-3] DEBUG c.c.t.a.g.l.AdvancedRateLimiter - Token acquired for api_weight:NON_CORE: 1 tokens consumed, 14 remaining
2025-06-30 23:00:00 [reactor-http-nio-3] DEBUG c.c.t.a.g.filter.QPSMetricsFilter - QPS recorded - Path: /api/gateway/payment/process, IP: 127.0.0.1, User: anonymous, Priority: default
2025-06-30 23:00:00 [reactor-http-nio-3] DEBUG c.c.t.a.g.f.CircuitBreakerFilter - Using circuit breaker for API: /api/gateway/payment/process with priority: NON_CORE
2025-06-30 23:00:00 [reactor-http-nio-3] DEBUG c.c.t.a.g.f.ServiceDegradationGatewayFilter - Service degradation filter - Service: payment-service, Path: /api/payment/process, Level: CORE
2025-06-30 23:00:00 [reactor-http-nio-3] ERROR c.c.t.a.g.f.ServiceDegradationGatewayFilter - Service error detected - Service: payment-service, Path: /api/payment/process, Error: null
2025-06-30 23:00:00 [reactor-http-nio-3] DEBUG c.c.t.a.g.f.ServiceDegradationGatewayFilter - Error type NullPointerException is in non-degradation list
2025-06-30 23:00:00 [reactor-http-nio-3] INFO  c.c.t.a.g.f.ServiceDegradationGatewayFilter - Not triggering degradation for error type - Service: payment-service, Error: NullPointerException
2025-06-30 23:00:00 [reactor-http-nio-3] DEBUG r.n.http.server.HttpServerOperations - [120d8194-1, L:/127.0.0.1:8080 - R:/127.0.0.1:65042] Last HTTP response frame
2025-06-30 23:00:00 [reactor-http-nio-3] DEBUG r.n.http.server.HttpServerOperations - [120d8194-1, L:/127.0.0.1:8080 - R:/127.0.0.1:65042] Headers are not sent before onComplete().
2025-06-30 23:00:00 [reactor-http-nio-3] DEBUG r.n.http.server.HttpServerOperations - [120d8194-1, L:/127.0.0.1:8080 - R:/127.0.0.1:65042] Decreasing pending responses count: 0
2025-06-30 23:00:00 [reactor-http-nio-3] DEBUG r.n.http.server.HttpServerOperations - [120d8194-1, L:/127.0.0.1:8080 - R:/127.0.0.1:65042] Last HTTP packet was sent, terminating the channel
2025-06-30 23:00:00 [reactor-http-nio-3] DEBUG r.netty.channel.ChannelOperations - [120d8194-1, L:/127.0.0.1:8080 - R:/127.0.0.1:65042] [HttpServer] Channel inbound receiver cancelled (subscription disposed).
2025-06-30 23:00:00 [reactor-http-nio-3] DEBUG i.g.r.c.i.CircuitBreakerStateMachine - CircuitBreaker 'nonCoreApiCircuitBreaker' succeeded:
2025-06-30 23:00:00 [reactor-http-nio-3] DEBUG c.c.t.a.gateway.tracing.TraceContext - Finished trace: ff31beecbefc47c688db1b2e5f5b1387 with status: 500
2025-06-30 23:00:00 [reactor-http-nio-3] DEBUG c.c.t.a.g.audit.AsyncAuditService - Audit log queued: trace - {"traceId":"ff31beecbefc47c688db1b2e5f5b1387","spanId":"057bc591f5494bdd","parentSpanId":null,"requestId":"d501e4e8-a241-4412-b9aa-eaf6eacb1f97","correlationId":null,"userId":null,"tenantId":null,"serviceName":"api-gateway","operationName":"POST /api/gateway/payment/process","startTime":1751295594968,"endTime":1751295600161,"statusCode":500,"errorMessage":"HTTP 500 500 INTERNAL_SERVER_ERROR","tags":{"duration.ms":"5195","http.port":"8080","http.path":"/api/gateway/payment/process","client.ip":"127.0.0.1","error":"true","signal.type":"ON_COMPLETE","http.host":"localhost","http.status_code":"500","user.agent":"IntelliJ HTTP Client/IntelliJ IDEA 2025.1.3","response.content_type":"application/json","error.message":"HTTP 500 500 INTERNAL_SERVER_ERROR","http.method":"POST"},"events":[{"name":"request.start","message":"Request processing started","timestamp":1751295594969,"tags":{}}],"childSpans":[],"sampled":true,"level":"INFO","traceHeaders":{"X-Span-ID":"057bc591f5494bdd","X-Request-ID":"d501e4e8-a241-4412-b9aa-eaf6eacb1f97","X-Correlation-ID":null,"X-Trace-ID":"ff31beecbefc47c688db1b2e5f5b1387","X-Sampled":"true"},"durationMs":5193}
2025-06-30 23:00:00 [reactor-http-nio-3] DEBUG c.c.t.a.gateway.tracing.TraceFilter - Trace completed - TraceId: ff31beecbefc47c688db1b2e5f5b1387, SpanId: 057bc591f5494bdd, Duration: 5195ms, Status: 500, Path: /api/gateway/payment/process
2025-06-30 23:00:00 [reactor-http-nio-3] WARN  c.c.t.a.gateway.tracing.TraceFilter - Slow request detected - TraceId: ff31beecbefc47c688db1b2e5f5b1387, Duration: 5195ms, Path: /api/gateway/payment/process
2025-06-30 23:00:00 [reactor-http-nio-3] WARN  c.c.t.a.gateway.tracing.TraceFilter - Error request detected - TraceId: ff31beecbefc47c688db1b2e5f5b1387, Status: 500, Path: /api/gateway/payment/process, Error: HTTP 500 500 INTERNAL_SERVER_ERROR
2025-06-30 23:00:00 [reactor-http-nio-3] DEBUG r.n.channel.ChannelOperationsHandler - [120d8194, L:/127.0.0.1:8080 - R:/127.0.0.1:65042] No ChannelOperation attached.
2025-06-30 23:00:03 [async-audit-scheduler] INFO  c.c.t.a.g.audit.AsyncAuditService - === Batch Audit Log ===
Timestamp: 2025-06-30T23:00:03.151384
Batch Size: 1
Entries:
[2025-06-30T23:00:00.19] trace: {"traceId":"ff31beecbefc47c688db1b2e5f5b1387","spanId":"057bc591f5494bdd","parentSpanId":null,"requestId":"d501e4e8-a241-4412-b9aa-eaf6eacb1f97","correlationId":null,"userId":null,"tenantId":null,"serviceName":"api-gateway","operationName":"POST /api/gateway/payment/process","startTime":1751295594968,"endTime":1751295600161,"statusCode":500,"errorMessage":"HTTP 500 500 INTERNAL_SERVER_ERROR","tags":{"duration.ms":"5195","http.port":"8080","http.path":"/api/gateway/payment/process","client.ip":"127.0.0.1","error":"true","signal.type":"ON_COMPLETE","http.host":"localhost","http.status_code":"500","user.agent":"IntelliJ HTTP Client/IntelliJ IDEA 2025.1.3","response.content_type":"application/json","error.message":"HTTP 500 500 INTERNAL_SERVER_ERROR","http.method":"POST"},"events":[{"name":"request.start","message":"Request processing started","timestamp":1751295594969,"tags":{}}],"childSpans":[],"sampled":true,"level":"INFO","traceHeaders":{"X-Span-ID":"057bc591f5494bdd","X-Request-ID":"d501e4e8-a241-4412-b9aa-eaf6eacb1f97","X-Correlation-ID":null,"X-Trace-ID":"ff31beecbefc47c688db1b2e5f5b1387","X-Sampled":"true"},"durationMs":5193}
=== End Batch ===

2025-06-30 23:00:03 [async-audit-scheduler] DEBUG c.c.t.a.g.audit.AsyncAuditService - Flushed 1 audit logs in batch
2025-06-30 23:00:09 [boundedElastic-2] INFO  c.c.t.a.g.t.ReactiveTraceScheduler - Reactive Trace Statistics - Manager: Total=2, Sampled=2, Active=2, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0
2025-06-30 23:00:11 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Performing periodic health check
2025-06-30 23:00:11 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Cleaning up expired instances
2025-06-30 23:00:11 [scheduling-1] DEBUG c.c.t.a.g.s.QPSCleanupScheduler - Starting scheduled QPS data cleanup...
2025-06-30 23:00:11 [scheduling-1] INFO  c.c.t.api.gateway.metrics.QPSMetrics - Manual cleanup completed. Total cleaned: 0, Active entries: API=1, IP=1, User=1, Priority=1
2025-06-30 23:00:11 [scheduling-1] DEBUG c.c.t.a.g.s.QPSCleanupScheduler - Scheduled QPS data cleanup completed
2025-06-30 23:00:11 [scheduling-1] INFO  c.c.t.a.g.t.AdaptiveTraceScheduler - Adaptive Trace Statistics - Manager: Total=2, Sampled=2, Active=2, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0, Multiplier: 1.0
2025-06-30 23:00:11 [scheduling-1] INFO  c.c.t.a.g.tracing.TraceScheduler - Trace Statistics - Manager: Total=2, Sampled=2, Active=2, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0
2025-06-30 23:00:41 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Performing periodic health check
2025-06-30 23:00:50 [reactor-http-nio-4] DEBUG r.n.http.server.HttpServerOperations - [ccab3901, L:/127.0.0.1:8080 - R:/127.0.0.1:65091] New http connection, requesting read
2025-06-30 23:00:50 [reactor-http-nio-4] DEBUG r.netty.transport.TransportConfig - [ccab3901, L:/127.0.0.1:8080 - R:/127.0.0.1:65091] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpServerCodec), (reactor.left.httpTrafficHandler = reactor.netty.http.server.HttpTrafficHandler), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-06-30 23:00:50 [reactor-http-nio-4] DEBUG r.n.http.server.HttpServerOperations - [ccab3901, L:/127.0.0.1:8080 - R:/127.0.0.1:65091] Increasing pending responses count: 1
2025-06-30 23:00:50 [reactor-http-nio-4] DEBUG r.netty.http.server.HttpServer - [ccab3901-1, L:/127.0.0.1:8080 - R:/127.0.0.1:65091] Handler is being applied: org.springframework.http.server.reactive.ReactorHttpHandlerAdapter@2745b14f
2025-06-30 23:00:50 [reactor-http-nio-4] DEBUG o.s.c.g.h.RoutePredicateHandlerMapping - Route matched: payment-route
2025-06-30 23:00:50 [reactor-http-nio-4] DEBUG o.s.c.g.h.RoutePredicateHandlerMapping - Mapping [Exchange: POST http://localhost:8080/api/gateway/payment/process] to Route{id='payment-route', uri=http://localhost:8081, order=0, predicate=Paths: [/api/gateway/payment/**], match trailing slash: true, gatewayFilters=[[[RewritePath /api/gateway/payment/(?<segment>.*) = '/api/payment/${segment}'], order = 0], com.citi.tts.api.gateway.filter.AdvancedRateLimitFilter@41d877bb, [com.citi.tts.api.gateway.filter.ServiceDegradationGatewayFilter$1@200b83c6, order = 0], com.citi.tts.api.gateway.filter.CircuitBreakerFilter@f9cd1e6, [com.citi.tts.api.gateway.filter.CryptoFilter@1b5cf611, order = 0]], metadata={}}
2025-06-30 23:00:50 [reactor-http-nio-4] DEBUG o.s.c.g.h.RoutePredicateHandlerMapping - [ccab3901-3] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@209b4b35
2025-06-30 23:00:50 [reactor-http-nio-4] DEBUG o.s.c.g.handler.FilteringWebHandler - Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@48cbe1c9}, order = -2147483648], [GatewayFilterAdapter{delegate=com.citi.tts.api.gateway.tracing.TraceFilter@2a19c36b}, order = -2147483598], com.citi.tts.api.gateway.filter.AdvancedRateLimitFilter@41d877bb, [GatewayFilterAdapter{delegate=com.citi.tts.api.gateway.filter.QPSMetricsFilter@296bfddb}, order = -2147483548], com.citi.tts.api.gateway.filter.CircuitBreakerFilter@f9cd1e6, [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@6a6a3fc4}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@21b2579d}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@6ca30886}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@2a666c8e}, order = 0], [[RewritePath /api/gateway/payment/(?<segment>.*) = '/api/payment/${segment}'], order = 0], [com.citi.tts.api.gateway.filter.ServiceDegradationGatewayFilter$1@200b83c6, order = 0], [com.citi.tts.api.gateway.filter.CryptoFilter@1b5cf611, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@67e628b}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ReactiveLoadBalancerClientFilter@351d726c}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.LoadBalancerServiceInstanceCookieFilter@1791396b}, order = 10151], [GatewayFilterAdapter{delegate=com.citi.tts.api.gateway.filter.ServiceDegradationFilter@3ea6faf0}, order = 2147483547], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@69b80603}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@22ea6051}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@578c99ac}, order = 2147483647]]
2025-06-30 23:00:50 [reactor-http-nio-4] DEBUG c.c.t.a.gateway.tracing.TraceContext - Created root trace context: 9ecdeb6dcf294ca6abf692e3d3427b94
2025-06-30 23:00:50 [reactor-http-nio-4] DEBUG c.c.t.a.gateway.tracing.TraceManager - Created new sampled trace context: 9ecdeb6dcf294ca6abf692e3d3427b94
2025-06-30 23:00:50 [reactor-http-nio-4] DEBUG c.c.t.a.g.f.AdvancedRateLimitFilter - Processing rate limit for: POST /api/gateway/payment/process from IP: 127.0.0.1, User: null
2025-06-30 23:00:50 [reactor-http-nio-4] DEBUG c.c.t.a.g.l.AdvancedRateLimiter - Tokens refilled for api_weight:NON_CORE: +510 tokens, total: 15
2025-06-30 23:00:50 [reactor-http-nio-4] DEBUG c.c.t.a.g.l.AdvancedRateLimiter - Token acquired for api_weight:NON_CORE: 1 tokens consumed, 14 remaining
2025-06-30 23:00:50 [reactor-http-nio-4] DEBUG c.c.t.a.g.filter.QPSMetricsFilter - QPS recorded - Path: /api/gateway/payment/process, IP: 127.0.0.1, User: anonymous, Priority: default
2025-06-30 23:00:50 [reactor-http-nio-4] DEBUG c.c.t.a.g.f.CircuitBreakerFilter - Using circuit breaker for API: /api/gateway/payment/process with priority: NON_CORE
2025-06-30 23:00:50 [reactor-http-nio-4] DEBUG c.c.t.a.g.f.ServiceDegradationGatewayFilter - Service degradation filter - Service: payment-service, Path: /api/payment/process, Level: CORE
2025-06-30 23:00:50 [reactor-http-nio-4] ERROR c.c.t.a.g.f.ServiceDegradationGatewayFilter - Service error detected - Service: payment-service, Path: /api/payment/process, Error: null
2025-06-30 23:00:50 [reactor-http-nio-4] DEBUG c.c.t.a.g.f.ServiceDegradationGatewayFilter - Error type NullPointerException is in non-degradation list
2025-06-30 23:00:50 [reactor-http-nio-4] INFO  c.c.t.a.g.f.ServiceDegradationGatewayFilter - Not triggering degradation for error type - Service: payment-service, Error: NullPointerException
2025-06-30 23:00:50 [reactor-http-nio-4] DEBUG r.n.http.server.HttpServerOperations - [ccab3901-1, L:/127.0.0.1:8080 - R:/127.0.0.1:65091] Last HTTP response frame
2025-06-30 23:00:50 [reactor-http-nio-4] DEBUG r.n.http.server.HttpServerOperations - [ccab3901-1, L:/127.0.0.1:8080 - R:/127.0.0.1:65091] Headers are not sent before onComplete().
2025-06-30 23:00:50 [reactor-http-nio-4] DEBUG r.n.http.server.HttpServerOperations - [ccab3901-1, L:/127.0.0.1:8080 - R:/127.0.0.1:65091] Decreasing pending responses count: 0
2025-06-30 23:00:50 [reactor-http-nio-4] DEBUG r.n.http.server.HttpServerOperations - [ccab3901-1, L:/127.0.0.1:8080 - R:/127.0.0.1:65091] Last HTTP packet was sent, terminating the channel
2025-06-30 23:00:50 [reactor-http-nio-4] DEBUG r.netty.channel.ChannelOperations - [ccab3901-1, L:/127.0.0.1:8080 - R:/127.0.0.1:65091] [HttpServer] Channel inbound receiver cancelled (subscription disposed).
2025-06-30 23:00:50 [reactor-http-nio-4] DEBUG i.g.r.c.i.CircuitBreakerStateMachine - CircuitBreaker 'nonCoreApiCircuitBreaker' succeeded:
2025-06-30 23:00:50 [reactor-http-nio-4] DEBUG c.c.t.a.gateway.tracing.TraceContext - Finished trace: 9ecdeb6dcf294ca6abf692e3d3427b94 with status: 500
2025-06-30 23:00:50 [reactor-http-nio-4] DEBUG c.c.t.a.g.audit.AsyncAuditService - Audit log queued: trace - {"traceId":"9ecdeb6dcf294ca6abf692e3d3427b94","spanId":"c11a9493a7ef4c99","parentSpanId":null,"requestId":"d49ad43b-2a4e-47a4-9866-aa52862016fc","correlationId":null,"userId":null,"tenantId":null,"serviceName":"api-gateway","operationName":"POST /api/gateway/payment/process","startTime":1751295650498,"endTime":1751295650510,"statusCode":500,"errorMessage":"HTTP 500 500 INTERNAL_SERVER_ERROR","tags":{"duration.ms":"15","http.port":"8080","http.path":"/api/gateway/payment/process","client.ip":"127.0.0.1","error":"true","signal.type":"ON_COMPLETE","http.host":"localhost","http.status_code":"500","user.agent":"IntelliJ HTTP Client/IntelliJ IDEA 2025.1.3","response.content_type":"application/json","error.message":"HTTP 500 500 INTERNAL_SERVER_ERROR","http.method":"POST"},"events":[{"name":"request.start","message":"Request processing started","timestamp":1751295650499,"tags":{}}],"childSpans":[],"sampled":true,"level":"INFO","traceHeaders":{"X-Span-ID":"c11a9493a7ef4c99","X-Request-ID":"d49ad43b-2a4e-47a4-9866-aa52862016fc","X-Correlation-ID":null,"X-Trace-ID":"9ecdeb6dcf294ca6abf692e3d3427b94","X-Sampled":"true"},"durationMs":12}
2025-06-30 23:00:50 [reactor-http-nio-4] DEBUG c.c.t.a.gateway.tracing.TraceFilter - Trace completed - TraceId: 9ecdeb6dcf294ca6abf692e3d3427b94, SpanId: c11a9493a7ef4c99, Duration: 15ms, Status: 500, Path: /api/gateway/payment/process
2025-06-30 23:00:50 [reactor-http-nio-4] WARN  c.c.t.a.gateway.tracing.TraceFilter - Error request detected - TraceId: 9ecdeb6dcf294ca6abf692e3d3427b94, Status: 500, Path: /api/gateway/payment/process, Error: HTTP 500 500 INTERNAL_SERVER_ERROR
2025-06-30 23:00:50 [reactor-http-nio-4] DEBUG r.n.channel.ChannelOperationsHandler - [ccab3901, L:/127.0.0.1:8080 - R:/127.0.0.1:65091] No ChannelOperation attached.
2025-06-30 23:00:53 [async-audit-scheduler] INFO  c.c.t.a.g.audit.AsyncAuditService - === Batch Audit Log ===
Timestamp: 2025-06-30T23:00:53.153802
Batch Size: 1
Entries:
[2025-06-30T23:00:50.523] trace: {"traceId":"9ecdeb6dcf294ca6abf692e3d3427b94","spanId":"c11a9493a7ef4c99","parentSpanId":null,"requestId":"d49ad43b-2a4e-47a4-9866-aa52862016fc","correlationId":null,"userId":null,"tenantId":null,"serviceName":"api-gateway","operationName":"POST /api/gateway/payment/process","startTime":1751295650498,"endTime":1751295650510,"statusCode":500,"errorMessage":"HTTP 500 500 INTERNAL_SERVER_ERROR","tags":{"duration.ms":"15","http.port":"8080","http.path":"/api/gateway/payment/process","client.ip":"127.0.0.1","error":"true","signal.type":"ON_COMPLETE","http.host":"localhost","http.status_code":"500","user.agent":"IntelliJ HTTP Client/IntelliJ IDEA 2025.1.3","response.content_type":"application/json","error.message":"HTTP 500 500 INTERNAL_SERVER_ERROR","http.method":"POST"},"events":[{"name":"request.start","message":"Request processing started","timestamp":1751295650499,"tags":{}}],"childSpans":[],"sampled":true,"level":"INFO","traceHeaders":{"X-Span-ID":"c11a9493a7ef4c99","X-Request-ID":"d49ad43b-2a4e-47a4-9866-aa52862016fc","X-Correlation-ID":null,"X-Trace-ID":"9ecdeb6dcf294ca6abf692e3d3427b94","X-Sampled":"true"},"durationMs":12}
=== End Batch ===

2025-06-30 23:00:53 [async-audit-scheduler] DEBUG c.c.t.a.g.audit.AsyncAuditService - Flushed 1 audit logs in batch
2025-06-30 23:01:09 [boundedElastic-2] INFO  c.c.t.a.g.t.ReactiveTraceScheduler - Reactive Trace Statistics - Manager: Total=3, Sampled=3, Active=3, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0
2025-06-30 23:01:11 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Performing periodic health check
2025-06-30 23:01:11 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Cleaning up expired instances
2025-06-30 23:01:11 [scheduling-1] DEBUG c.c.t.a.g.s.QPSCleanupScheduler - Starting scheduled QPS data cleanup...
2025-06-30 23:01:11 [scheduling-1] INFO  c.c.t.api.gateway.metrics.QPSMetrics - Manual cleanup completed. Total cleaned: 0, Active entries: API=1, IP=1, User=1, Priority=1
2025-06-30 23:01:11 [scheduling-1] DEBUG c.c.t.a.g.s.QPSCleanupScheduler - Scheduled QPS data cleanup completed
2025-06-30 23:01:11 [scheduling-1] INFO  c.c.t.a.g.t.AdaptiveTraceScheduler - Adaptive Trace Statistics - Manager: Total=3, Sampled=3, Active=3, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0, Multiplier: 1.0
2025-06-30 23:01:11 [scheduling-1] INFO  c.c.t.a.g.tracing.TraceScheduler - Trace Statistics - Manager: Total=3, Sampled=3, Active=3, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0
2025-06-30 23:01:12 [reactor-http-nio-5] DEBUG r.n.http.server.HttpServerOperations - [d03cd97f, L:/127.0.0.1:8080 - R:/127.0.0.1:65104] New http connection, requesting read
2025-06-30 23:01:12 [reactor-http-nio-5] DEBUG r.netty.transport.TransportConfig - [d03cd97f, L:/127.0.0.1:8080 - R:/127.0.0.1:65104] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpServerCodec), (reactor.left.httpTrafficHandler = reactor.netty.http.server.HttpTrafficHandler), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-06-30 23:01:12 [reactor-http-nio-5] DEBUG r.n.http.server.HttpServerOperations - [d03cd97f, L:/127.0.0.1:8080 - R:/127.0.0.1:65104] Increasing pending responses count: 1
2025-06-30 23:01:12 [reactor-http-nio-5] DEBUG r.netty.http.server.HttpServer - [d03cd97f-1, L:/127.0.0.1:8080 - R:/127.0.0.1:65104] Handler is being applied: org.springframework.http.server.reactive.ReactorHttpHandlerAdapter@2745b14f
2025-06-30 23:01:12 [reactor-http-nio-5] DEBUG o.s.c.g.h.RoutePredicateHandlerMapping - Route matched: payment-route
2025-06-30 23:01:12 [reactor-http-nio-5] DEBUG o.s.c.g.h.RoutePredicateHandlerMapping - Mapping [Exchange: POST http://localhost:8080/api/gateway/payment/process] to Route{id='payment-route', uri=http://localhost:8081, order=0, predicate=Paths: [/api/gateway/payment/**], match trailing slash: true, gatewayFilters=[[[RewritePath /api/gateway/payment/(?<segment>.*) = '/api/payment/${segment}'], order = 0], com.citi.tts.api.gateway.filter.AdvancedRateLimitFilter@41d877bb, [com.citi.tts.api.gateway.filter.ServiceDegradationGatewayFilter$1@200b83c6, order = 0], com.citi.tts.api.gateway.filter.CircuitBreakerFilter@f9cd1e6, [com.citi.tts.api.gateway.filter.CryptoFilter@1b5cf611, order = 0]], metadata={}}
2025-06-30 23:01:12 [reactor-http-nio-5] DEBUG o.s.c.g.h.RoutePredicateHandlerMapping - [d03cd97f-4] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@209b4b35
2025-06-30 23:01:12 [reactor-http-nio-5] DEBUG o.s.c.g.handler.FilteringWebHandler - Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@48cbe1c9}, order = -2147483648], [GatewayFilterAdapter{delegate=com.citi.tts.api.gateway.tracing.TraceFilter@2a19c36b}, order = -2147483598], com.citi.tts.api.gateway.filter.AdvancedRateLimitFilter@41d877bb, [GatewayFilterAdapter{delegate=com.citi.tts.api.gateway.filter.QPSMetricsFilter@296bfddb}, order = -2147483548], com.citi.tts.api.gateway.filter.CircuitBreakerFilter@f9cd1e6, [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@6a6a3fc4}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@21b2579d}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@6ca30886}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@2a666c8e}, order = 0], [[RewritePath /api/gateway/payment/(?<segment>.*) = '/api/payment/${segment}'], order = 0], [com.citi.tts.api.gateway.filter.ServiceDegradationGatewayFilter$1@200b83c6, order = 0], [com.citi.tts.api.gateway.filter.CryptoFilter@1b5cf611, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@67e628b}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ReactiveLoadBalancerClientFilter@351d726c}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.LoadBalancerServiceInstanceCookieFilter@1791396b}, order = 10151], [GatewayFilterAdapter{delegate=com.citi.tts.api.gateway.filter.ServiceDegradationFilter@3ea6faf0}, order = 2147483547], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@69b80603}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@22ea6051}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@578c99ac}, order = 2147483647]]
2025-06-30 23:01:12 [reactor-http-nio-5] DEBUG c.c.t.a.gateway.tracing.TraceContext - Created root trace context: 384f626708b74a08b6aa17a5469adee2
2025-06-30 23:01:12 [reactor-http-nio-5] DEBUG c.c.t.a.gateway.tracing.TraceManager - Created new sampled trace context: 384f626708b74a08b6aa17a5469adee2
2025-06-30 23:01:12 [reactor-http-nio-5] DEBUG c.c.t.a.g.f.AdvancedRateLimitFilter - Processing rate limit for: POST /api/gateway/payment/process from IP: 127.0.0.1, User: null
2025-06-30 23:01:12 [reactor-http-nio-5] DEBUG c.c.t.a.g.l.AdvancedRateLimiter - Tokens refilled for api_weight:NON_CORE: +210 tokens, total: 15
2025-06-30 23:01:12 [reactor-http-nio-5] DEBUG c.c.t.a.g.l.AdvancedRateLimiter - Token acquired for api_weight:NON_CORE: 1 tokens consumed, 14 remaining
2025-06-30 23:01:12 [reactor-http-nio-5] DEBUG c.c.t.a.g.filter.QPSMetricsFilter - QPS recorded - Path: /api/gateway/payment/process, IP: 127.0.0.1, User: anonymous, Priority: default
2025-06-30 23:01:12 [reactor-http-nio-5] DEBUG c.c.t.a.g.f.CircuitBreakerFilter - Using circuit breaker for API: /api/gateway/payment/process with priority: NON_CORE
2025-06-30 23:01:12 [reactor-http-nio-5] DEBUG c.c.t.a.g.f.ServiceDegradationGatewayFilter - Service degradation filter - Service: payment-service, Path: /api/payment/process, Level: CORE
2025-06-30 23:01:12 [reactor-http-nio-5] ERROR c.c.t.a.g.f.ServiceDegradationGatewayFilter - Service error detected - Service: payment-service, Path: /api/payment/process, Error: null
2025-06-30 23:01:12 [reactor-http-nio-5] DEBUG c.c.t.a.g.f.ServiceDegradationGatewayFilter - Error type NullPointerException is in non-degradation list
2025-06-30 23:01:12 [reactor-http-nio-5] INFO  c.c.t.a.g.f.ServiceDegradationGatewayFilter - Not triggering degradation for error type - Service: payment-service, Error: NullPointerException
2025-06-30 23:01:12 [reactor-http-nio-5] DEBUG r.n.http.server.HttpServerOperations - [d03cd97f-1, L:/127.0.0.1:8080 - R:/127.0.0.1:65104] Last HTTP response frame
2025-06-30 23:01:12 [reactor-http-nio-5] DEBUG r.n.http.server.HttpServerOperations - [d03cd97f-1, L:/127.0.0.1:8080 - R:/127.0.0.1:65104] Headers are not sent before onComplete().
2025-06-30 23:01:12 [reactor-http-nio-5] DEBUG r.n.http.server.HttpServerOperations - [d03cd97f-1, L:/127.0.0.1:8080 - R:/127.0.0.1:65104] Decreasing pending responses count: 0
2025-06-30 23:01:12 [reactor-http-nio-5] DEBUG r.n.http.server.HttpServerOperations - [d03cd97f-1, L:/127.0.0.1:8080 - R:/127.0.0.1:65104] Last HTTP packet was sent, terminating the channel
2025-06-30 23:01:12 [reactor-http-nio-5] DEBUG r.netty.channel.ChannelOperations - [d03cd97f-1, L:/127.0.0.1:8080 - R:/127.0.0.1:65104] [HttpServer] Channel inbound receiver cancelled (subscription disposed).
2025-06-30 23:01:12 [reactor-http-nio-5] DEBUG i.g.r.c.i.CircuitBreakerStateMachine - CircuitBreaker 'nonCoreApiCircuitBreaker' succeeded:
2025-06-30 23:01:12 [reactor-http-nio-5] DEBUG c.c.t.a.gateway.tracing.TraceContext - Finished trace: 384f626708b74a08b6aa17a5469adee2 with status: 500
2025-06-30 23:01:12 [reactor-http-nio-5] DEBUG c.c.t.a.g.audit.AsyncAuditService - Audit log queued: trace - {"traceId":"384f626708b74a08b6aa17a5469adee2","spanId":"786be17372914fd4","parentSpanId":null,"requestId":"d3a50fc6-09d4-4fe4-8ce9-c5452dbc8046","correlationId":null,"userId":null,"tenantId":null,"serviceName":"api-gateway","operationName":"POST /api/gateway/payment/process","startTime":1751295672150,"endTime":1751295672161,"statusCode":500,"errorMessage":"HTTP 500 500 INTERNAL_SERVER_ERROR","tags":{"duration.ms":"11","http.port":"8080","http.path":"/api/gateway/payment/process","client.ip":"127.0.0.1","error":"true","signal.type":"ON_COMPLETE","http.host":"localhost","http.status_code":"500","user.agent":"IntelliJ HTTP Client/IntelliJ IDEA 2025.1.3","response.content_type":"application/json","error.message":"HTTP 500 500 INTERNAL_SERVER_ERROR","http.method":"POST"},"events":[{"name":"request.start","message":"Request processing started","timestamp":1751295672151,"tags":{}}],"childSpans":[],"sampled":true,"level":"INFO","traceHeaders":{"X-Span-ID":"786be17372914fd4","X-Request-ID":"d3a50fc6-09d4-4fe4-8ce9-c5452dbc8046","X-Correlation-ID":null,"X-Trace-ID":"384f626708b74a08b6aa17a5469adee2","X-Sampled":"true"},"durationMs":11}
2025-06-30 23:01:12 [reactor-http-nio-5] DEBUG c.c.t.a.gateway.tracing.TraceFilter - Trace completed - TraceId: 384f626708b74a08b6aa17a5469adee2, SpanId: 786be17372914fd4, Duration: 11ms, Status: 500, Path: /api/gateway/payment/process
2025-06-30 23:01:12 [reactor-http-nio-5] WARN  c.c.t.a.gateway.tracing.TraceFilter - Error request detected - TraceId: 384f626708b74a08b6aa17a5469adee2, Status: 500, Path: /api/gateway/payment/process, Error: HTTP 500 500 INTERNAL_SERVER_ERROR
2025-06-30 23:01:12 [reactor-http-nio-5] DEBUG r.n.channel.ChannelOperationsHandler - [d03cd97f, L:/127.0.0.1:8080 - R:/127.0.0.1:65104] No ChannelOperation attached.
2025-06-30 23:01:13 [async-audit-scheduler] INFO  c.c.t.a.g.audit.AsyncAuditService - === Batch Audit Log ===
Timestamp: 2025-06-30T23:01:13.153504
Batch Size: 1
Entries:
[2025-06-30T23:01:12.176] trace: {"traceId":"384f626708b74a08b6aa17a5469adee2","spanId":"786be17372914fd4","parentSpanId":null,"requestId":"d3a50fc6-09d4-4fe4-8ce9-c5452dbc8046","correlationId":null,"userId":null,"tenantId":null,"serviceName":"api-gateway","operationName":"POST /api/gateway/payment/process","startTime":1751295672150,"endTime":1751295672161,"statusCode":500,"errorMessage":"HTTP 500 500 INTERNAL_SERVER_ERROR","tags":{"duration.ms":"11","http.port":"8080","http.path":"/api/gateway/payment/process","client.ip":"127.0.0.1","error":"true","signal.type":"ON_COMPLETE","http.host":"localhost","http.status_code":"500","user.agent":"IntelliJ HTTP Client/IntelliJ IDEA 2025.1.3","response.content_type":"application/json","error.message":"HTTP 500 500 INTERNAL_SERVER_ERROR","http.method":"POST"},"events":[{"name":"request.start","message":"Request processing started","timestamp":1751295672151,"tags":{}}],"childSpans":[],"sampled":true,"level":"INFO","traceHeaders":{"X-Span-ID":"786be17372914fd4","X-Request-ID":"d3a50fc6-09d4-4fe4-8ce9-c5452dbc8046","X-Correlation-ID":null,"X-Trace-ID":"384f626708b74a08b6aa17a5469adee2","X-Sampled":"true"},"durationMs":11}
=== End Batch ===

2025-06-30 23:01:13 [async-audit-scheduler] DEBUG c.c.t.a.g.audit.AsyncAuditService - Flushed 1 audit logs in batch
2025-06-30 23:01:41 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Performing periodic health check
2025-06-30 23:02:09 [boundedElastic-4] INFO  c.c.t.a.g.t.ReactiveTraceScheduler - Reactive Trace Statistics - Manager: Total=4, Sampled=4, Active=4, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0
2025-06-30 23:02:11 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Performing periodic health check
2025-06-30 23:02:11 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Cleaning up expired instances
2025-06-30 23:02:11 [scheduling-1] DEBUG c.c.t.a.g.s.QPSCleanupScheduler - Starting scheduled QPS data cleanup...
2025-06-30 23:02:11 [scheduling-1] INFO  c.c.t.api.gateway.metrics.QPSMetrics - Manual cleanup completed. Total cleaned: 0, Active entries: API=1, IP=1, User=1, Priority=1
2025-06-30 23:02:11 [scheduling-1] DEBUG c.c.t.a.g.s.QPSCleanupScheduler - Scheduled QPS data cleanup completed
2025-06-30 23:02:11 [scheduling-1] INFO  c.c.t.a.g.t.AdaptiveTraceScheduler - Adaptive Trace Statistics - Manager: Total=4, Sampled=4, Active=4, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0, Multiplier: 1.0
2025-06-30 23:02:11 [scheduling-1] INFO  c.c.t.a.g.tracing.TraceScheduler - Trace Statistics - Manager: Total=4, Sampled=4, Active=4, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0
2025-06-30 23:02:41 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Performing periodic health check
2025-06-30 23:02:55 [reactor-http-nio-6] DEBUG r.n.http.server.HttpServerOperations - [5b1ca279, L:/127.0.0.1:8080 - R:/127.0.0.1:65216] New http connection, requesting read
2025-06-30 23:02:55 [reactor-http-nio-6] DEBUG r.netty.transport.TransportConfig - [5b1ca279, L:/127.0.0.1:8080 - R:/127.0.0.1:65216] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpServerCodec), (reactor.left.httpTrafficHandler = reactor.netty.http.server.HttpTrafficHandler), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-06-30 23:02:55 [reactor-http-nio-6] DEBUG r.n.http.server.HttpServerOperations - [5b1ca279, L:/127.0.0.1:8080 - R:/127.0.0.1:65216] Increasing pending responses count: 1
2025-06-30 23:02:55 [reactor-http-nio-6] DEBUG r.netty.http.server.HttpServer - [5b1ca279-1, L:/127.0.0.1:8080 - R:/127.0.0.1:65216] Handler is being applied: org.springframework.http.server.reactive.ReactorHttpHandlerAdapter@2745b14f
2025-06-30 23:02:55 [reactor-http-nio-6] DEBUG o.s.c.g.h.RoutePredicateHandlerMapping - Route matched: payment-route
2025-06-30 23:02:55 [reactor-http-nio-6] DEBUG o.s.c.g.h.RoutePredicateHandlerMapping - Mapping [Exchange: POST http://localhost:8080/api/gateway/payment/process] to Route{id='payment-route', uri=http://localhost:8081, order=0, predicate=Paths: [/api/gateway/payment/**], match trailing slash: true, gatewayFilters=[[[RewritePath /api/gateway/payment/(?<segment>.*) = '/api/payment/${segment}'], order = 0], com.citi.tts.api.gateway.filter.AdvancedRateLimitFilter@41d877bb, [com.citi.tts.api.gateway.filter.ServiceDegradationGatewayFilter$1@200b83c6, order = 0], com.citi.tts.api.gateway.filter.CircuitBreakerFilter@f9cd1e6, [com.citi.tts.api.gateway.filter.CryptoFilter@1b5cf611, order = 0]], metadata={}}
2025-06-30 23:02:55 [reactor-http-nio-6] DEBUG o.s.c.g.h.RoutePredicateHandlerMapping - [5b1ca279-5] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@209b4b35
2025-06-30 23:02:55 [reactor-http-nio-6] DEBUG o.s.c.g.handler.FilteringWebHandler - Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@48cbe1c9}, order = -2147483648], [GatewayFilterAdapter{delegate=com.citi.tts.api.gateway.tracing.TraceFilter@2a19c36b}, order = -2147483598], com.citi.tts.api.gateway.filter.AdvancedRateLimitFilter@41d877bb, [GatewayFilterAdapter{delegate=com.citi.tts.api.gateway.filter.QPSMetricsFilter@296bfddb}, order = -2147483548], com.citi.tts.api.gateway.filter.CircuitBreakerFilter@f9cd1e6, [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@6a6a3fc4}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@21b2579d}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@6ca30886}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@2a666c8e}, order = 0], [[RewritePath /api/gateway/payment/(?<segment>.*) = '/api/payment/${segment}'], order = 0], [com.citi.tts.api.gateway.filter.ServiceDegradationGatewayFilter$1@200b83c6, order = 0], [com.citi.tts.api.gateway.filter.CryptoFilter@1b5cf611, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@67e628b}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ReactiveLoadBalancerClientFilter@351d726c}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.LoadBalancerServiceInstanceCookieFilter@1791396b}, order = 10151], [GatewayFilterAdapter{delegate=com.citi.tts.api.gateway.filter.ServiceDegradationFilter@3ea6faf0}, order = 2147483547], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@69b80603}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@22ea6051}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@578c99ac}, order = 2147483647]]
2025-06-30 23:02:55 [reactor-http-nio-6] DEBUG c.c.t.a.gateway.tracing.TraceContext - Created root trace context: 940c72ec7eb04705abcc3faa92c1042b
2025-06-30 23:02:55 [reactor-http-nio-6] DEBUG c.c.t.a.gateway.tracing.TraceManager - Created new sampled trace context: 940c72ec7eb04705abcc3faa92c1042b
2025-06-30 23:02:55 [reactor-http-nio-6] DEBUG c.c.t.a.g.f.AdvancedRateLimitFilter - Processing rate limit for: POST /api/gateway/payment/process from IP: 127.0.0.1, User: null
2025-06-30 23:02:55 [reactor-http-nio-6] DEBUG c.c.t.a.g.l.AdvancedRateLimiter - Tokens refilled for api_weight:NON_CORE: +1040 tokens, total: 15
2025-06-30 23:02:55 [reactor-http-nio-6] DEBUG c.c.t.a.g.l.AdvancedRateLimiter - Token acquired for api_weight:NON_CORE: 1 tokens consumed, 14 remaining
2025-06-30 23:02:55 [reactor-http-nio-6] DEBUG c.c.t.a.g.filter.QPSMetricsFilter - QPS recorded - Path: /api/gateway/payment/process, IP: 127.0.0.1, User: anonymous, Priority: default
2025-06-30 23:02:55 [reactor-http-nio-6] DEBUG c.c.t.a.g.f.CircuitBreakerFilter - Using circuit breaker for API: /api/gateway/payment/process with priority: NON_CORE
2025-06-30 23:03:02 [reactor-http-nio-6] DEBUG c.c.t.a.g.f.ServiceDegradationGatewayFilter - Service degradation filter - Service: payment-service, Path: /api/payment/process, Level: CORE
2025-06-30 23:03:05 [reactor-http-nio-6] ERROR c.c.t.a.g.f.ServiceDegradationGatewayFilter - Service error detected - Service: payment-service, Path: /api/payment/process, Error: null
2025-06-30 23:03:05 [reactor-http-nio-6] DEBUG c.c.t.a.g.f.ServiceDegradationGatewayFilter - Error type NullPointerException is in non-degradation list
2025-06-30 23:03:05 [reactor-http-nio-6] INFO  c.c.t.a.g.f.ServiceDegradationGatewayFilter - Not triggering degradation for error type - Service: payment-service, Error: NullPointerException
2025-06-30 23:03:05 [reactor-http-nio-6] DEBUG r.n.http.server.HttpServerOperations - [5b1ca279-1, L:/127.0.0.1:8080 - R:/127.0.0.1:65216] Last HTTP response frame
2025-06-30 23:03:05 [reactor-http-nio-6] DEBUG r.n.http.server.HttpServerOperations - [5b1ca279-1, L:/127.0.0.1:8080 - R:/127.0.0.1:65216] Headers are not sent before onComplete().
2025-06-30 23:03:05 [reactor-http-nio-6] DEBUG r.n.http.server.HttpServerOperations - [5b1ca279-1, L:/127.0.0.1:8080 - R:/127.0.0.1:65216] Decreasing pending responses count: 0
2025-06-30 23:03:05 [reactor-http-nio-6] DEBUG r.n.http.server.HttpServerOperations - [5b1ca279-1, L:/127.0.0.1:8080 - R:/127.0.0.1:65216] Last HTTP packet was sent, terminating the channel
2025-06-30 23:03:05 [reactor-http-nio-6] DEBUG r.netty.channel.ChannelOperations - [5b1ca279-1, L:/127.0.0.1:8080 - R:/127.0.0.1:65216] [HttpServer] Channel inbound receiver cancelled (subscription disposed).
2025-06-30 23:03:05 [reactor-http-nio-6] DEBUG i.g.r.c.i.CircuitBreakerStateMachine - CircuitBreaker 'nonCoreApiCircuitBreaker' succeeded:
2025-06-30 23:03:05 [reactor-http-nio-6] DEBUG c.c.t.a.gateway.tracing.TraceContext - Finished trace: 940c72ec7eb04705abcc3faa92c1042b with status: 500
2025-06-30 23:03:05 [reactor-http-nio-6] DEBUG c.c.t.a.g.audit.AsyncAuditService - Audit log queued: trace - {"traceId":"940c72ec7eb04705abcc3faa92c1042b","spanId":"1922421b9c104513","parentSpanId":null,"requestId":"45d72698-c2fe-4079-8c9c-260f3773b524","correlationId":null,"userId":null,"tenantId":null,"serviceName":"api-gateway","operationName":"POST /api/gateway/payment/process","startTime":1751295775688,"endTime":1751295785458,"statusCode":500,"errorMessage":"HTTP 500 500 INTERNAL_SERVER_ERROR","tags":{"duration.ms":"9772","http.port":"8080","http.path":"/api/gateway/payment/process","client.ip":"127.0.0.1","error":"true","signal.type":"ON_COMPLETE","http.host":"localhost","http.status_code":"500","user.agent":"IntelliJ HTTP Client/IntelliJ IDEA 2025.1.3","response.content_type":"application/json","error.message":"HTTP 500 500 INTERNAL_SERVER_ERROR","http.method":"POST"},"events":[{"name":"request.start","message":"Request processing started","timestamp":1751295775690,"tags":{}}],"childSpans":[],"sampled":true,"level":"INFO","traceHeaders":{"X-Span-ID":"1922421b9c104513","X-Request-ID":"45d72698-c2fe-4079-8c9c-260f3773b524","X-Correlation-ID":null,"X-Trace-ID":"940c72ec7eb04705abcc3faa92c1042b","X-Sampled":"true"},"durationMs":9770}
2025-06-30 23:03:05 [reactor-http-nio-6] DEBUG c.c.t.a.gateway.tracing.TraceFilter - Trace completed - TraceId: 940c72ec7eb04705abcc3faa92c1042b, SpanId: 1922421b9c104513, Duration: 9772ms, Status: 500, Path: /api/gateway/payment/process
2025-06-30 23:03:05 [reactor-http-nio-6] WARN  c.c.t.a.gateway.tracing.TraceFilter - Slow request detected - TraceId: 940c72ec7eb04705abcc3faa92c1042b, Duration: 9772ms, Path: /api/gateway/payment/process
2025-06-30 23:03:05 [reactor-http-nio-6] WARN  c.c.t.a.gateway.tracing.TraceFilter - Error request detected - TraceId: 940c72ec7eb04705abcc3faa92c1042b, Status: 500, Path: /api/gateway/payment/process, Error: HTTP 500 500 INTERNAL_SERVER_ERROR
2025-06-30 23:03:05 [reactor-http-nio-6] DEBUG r.n.channel.ChannelOperationsHandler - [5b1ca279, L:/127.0.0.1:8080 - R:/127.0.0.1:65216] No ChannelOperation attached.
2025-06-30 23:03:08 [async-audit-scheduler] INFO  c.c.t.a.g.audit.AsyncAuditService - === Batch Audit Log ===
Timestamp: 2025-06-30T23:03:08.151887
Batch Size: 1
Entries:
[2025-06-30T23:03:05.491] trace: {"traceId":"940c72ec7eb04705abcc3faa92c1042b","spanId":"1922421b9c104513","parentSpanId":null,"requestId":"45d72698-c2fe-4079-8c9c-260f3773b524","correlationId":null,"userId":null,"tenantId":null,"serviceName":"api-gateway","operationName":"POST /api/gateway/payment/process","startTime":1751295775688,"endTime":1751295785458,"statusCode":500,"errorMessage":"HTTP 500 500 INTERNAL_SERVER_ERROR","tags":{"duration.ms":"9772","http.port":"8080","http.path":"/api/gateway/payment/process","client.ip":"127.0.0.1","error":"true","signal.type":"ON_COMPLETE","http.host":"localhost","http.status_code":"500","user.agent":"IntelliJ HTTP Client/IntelliJ IDEA 2025.1.3","response.content_type":"application/json","error.message":"HTTP 500 500 INTERNAL_SERVER_ERROR","http.method":"POST"},"events":[{"name":"request.start","message":"Request processing started","timestamp":1751295775690,"tags":{}}],"childSpans":[],"sampled":true,"level":"INFO","traceHeaders":{"X-Span-ID":"1922421b9c104513","X-Request-ID":"45d72698-c2fe-4079-8c9c-260f3773b524","X-Correlation-ID":null,"X-Trace-ID":"940c72ec7eb04705abcc3faa92c1042b","X-Sampled":"true"},"durationMs":9770}
=== End Batch ===

2025-06-30 23:03:08 [async-audit-scheduler] DEBUG c.c.t.a.g.audit.AsyncAuditService - Flushed 1 audit logs in batch
2025-06-30 23:03:09 [boundedElastic-2] INFO  c.c.t.a.g.t.ReactiveTraceScheduler - Reactive Trace Statistics - Manager: Total=5, Sampled=5, Active=5, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0
2025-06-30 23:03:09 [boundedElastic-2] DEBUG c.c.t.a.g.t.ReactiveTraceScheduler - Reactive trace cleanup completed - No traces cleaned, Duration: 0ms
2025-06-30 23:03:11 [scheduling-1] DEBUG c.c.t.a.g.c.ReleaseValidationConfig - Executing auto step traffic scheduler
2025-06-30 23:03:11 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Performing periodic health check
2025-06-30 23:03:11 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Cleaning up expired instances
2025-06-30 23:03:11 [scheduling-1] DEBUG c.c.t.a.g.s.QPSCleanupScheduler - Starting scheduled QPS data cleanup...
2025-06-30 23:03:11 [scheduling-1] INFO  c.c.t.api.gateway.metrics.QPSMetrics - Manual cleanup completed. Total cleaned: 0, Active entries: API=1, IP=1, User=1, Priority=1
2025-06-30 23:03:11 [scheduling-1] DEBUG c.c.t.a.g.s.QPSCleanupScheduler - Scheduled QPS data cleanup completed
2025-06-30 23:03:11 [scheduling-1] INFO  c.c.t.a.g.s.QPSCleanupScheduler - === QPS Summary Report ===
2025-06-30 23:03:11 [scheduling-1] INFO  c.c.t.a.g.s.QPSCleanupScheduler - Global QPS: 0
2025-06-30 23:03:11 [scheduling-1] INFO  c.c.t.a.g.s.QPSCleanupScheduler - Active APIs: 1
2025-06-30 23:03:11 [scheduling-1] INFO  c.c.t.a.g.s.QPSCleanupScheduler - Active IPs: 1
2025-06-30 23:03:11 [scheduling-1] INFO  c.c.t.a.g.s.QPSCleanupScheduler - Active Users: 1
2025-06-30 23:03:11 [scheduling-1] INFO  c.c.t.a.g.s.QPSCleanupScheduler - Active Priorities: 1
2025-06-30 23:03:11 [scheduling-1] INFO  c.c.t.a.g.s.QPSCleanupScheduler - Top API - /api/gateway/payment/process: 1 QPS
2025-06-30 23:03:11 [scheduling-1] INFO  c.c.t.a.g.s.QPSCleanupScheduler - Top IP - 127.0.0.1: 1 QPS
2025-06-30 23:03:11 [scheduling-1] INFO  c.c.t.a.g.s.QPSCleanupScheduler - === End QPS Summary Report ===
2025-06-30 23:03:11 [scheduling-1] DEBUG c.c.t.a.g.t.AdaptiveTraceScheduler - Adaptive trace cleanup completed - No traces cleaned, Duration: 0ms, Multiplier: 1.0
2025-06-30 23:03:11 [scheduling-1] DEBUG c.c.t.a.g.tracing.TraceScheduler - Scheduled trace cleanup completed - No traces cleaned, Duration: 0ms
2025-06-30 23:03:11 [scheduling-1] INFO  c.c.t.a.g.t.AdaptiveTraceScheduler - Adaptive Trace Statistics - Manager: Total=5, Sampled=5, Active=5, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0, Multiplier: 1.0
2025-06-30 23:03:11 [scheduling-1] INFO  c.c.t.a.g.tracing.TraceScheduler - Trace Statistics - Manager: Total=5, Sampled=5, Active=5, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0
2025-06-30 23:03:22 [reactor-http-nio-7] DEBUG r.n.http.server.HttpServerOperations - [def0b27d, L:/127.0.0.1:8080 - R:/127.0.0.1:65235] New http connection, requesting read
2025-06-30 23:03:22 [reactor-http-nio-7] DEBUG r.netty.transport.TransportConfig - [def0b27d, L:/127.0.0.1:8080 - R:/127.0.0.1:65235] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpServerCodec), (reactor.left.httpTrafficHandler = reactor.netty.http.server.HttpTrafficHandler), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-06-30 23:03:22 [reactor-http-nio-7] DEBUG r.n.http.server.HttpServerOperations - [def0b27d, L:/127.0.0.1:8080 - R:/127.0.0.1:65235] Increasing pending responses count: 1
2025-06-30 23:03:22 [reactor-http-nio-7] DEBUG r.netty.http.server.HttpServer - [def0b27d-1, L:/127.0.0.1:8080 - R:/127.0.0.1:65235] Handler is being applied: org.springframework.http.server.reactive.ReactorHttpHandlerAdapter@2745b14f
2025-06-30 23:03:22 [reactor-http-nio-7] DEBUG o.s.c.g.h.RoutePredicateHandlerMapping - Route matched: payment-route
2025-06-30 23:03:22 [reactor-http-nio-7] DEBUG o.s.c.g.h.RoutePredicateHandlerMapping - Mapping [Exchange: POST http://localhost:8080/api/gateway/payment/process] to Route{id='payment-route', uri=http://localhost:8081, order=0, predicate=Paths: [/api/gateway/payment/**], match trailing slash: true, gatewayFilters=[[[RewritePath /api/gateway/payment/(?<segment>.*) = '/api/payment/${segment}'], order = 0], com.citi.tts.api.gateway.filter.AdvancedRateLimitFilter@41d877bb, [com.citi.tts.api.gateway.filter.ServiceDegradationGatewayFilter$1@200b83c6, order = 0], com.citi.tts.api.gateway.filter.CircuitBreakerFilter@f9cd1e6, [com.citi.tts.api.gateway.filter.CryptoFilter@1b5cf611, order = 0]], metadata={}}
2025-06-30 23:03:22 [reactor-http-nio-7] DEBUG o.s.c.g.h.RoutePredicateHandlerMapping - [def0b27d-6] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@209b4b35
2025-06-30 23:03:22 [reactor-http-nio-7] DEBUG o.s.c.g.handler.FilteringWebHandler - Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@48cbe1c9}, order = -2147483648], [GatewayFilterAdapter{delegate=com.citi.tts.api.gateway.tracing.TraceFilter@2a19c36b}, order = -2147483598], com.citi.tts.api.gateway.filter.AdvancedRateLimitFilter@41d877bb, [GatewayFilterAdapter{delegate=com.citi.tts.api.gateway.filter.QPSMetricsFilter@296bfddb}, order = -2147483548], com.citi.tts.api.gateway.filter.CircuitBreakerFilter@f9cd1e6, [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@6a6a3fc4}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@21b2579d}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@6ca30886}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@2a666c8e}, order = 0], [[RewritePath /api/gateway/payment/(?<segment>.*) = '/api/payment/${segment}'], order = 0], [com.citi.tts.api.gateway.filter.ServiceDegradationGatewayFilter$1@200b83c6, order = 0], [com.citi.tts.api.gateway.filter.CryptoFilter@1b5cf611, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@67e628b}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ReactiveLoadBalancerClientFilter@351d726c}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.LoadBalancerServiceInstanceCookieFilter@1791396b}, order = 10151], [GatewayFilterAdapter{delegate=com.citi.tts.api.gateway.filter.ServiceDegradationFilter@3ea6faf0}, order = 2147483547], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@69b80603}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@22ea6051}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@578c99ac}, order = 2147483647]]
2025-06-30 23:03:22 [reactor-http-nio-7] DEBUG c.c.t.a.gateway.tracing.TraceContext - Created root trace context: d23056f29abe43cb87b1cceb62a11dd3
2025-06-30 23:03:22 [reactor-http-nio-7] DEBUG c.c.t.a.gateway.tracing.TraceManager - Created new sampled trace context: d23056f29abe43cb87b1cceb62a11dd3
2025-06-30 23:03:22 [reactor-http-nio-7] DEBUG c.c.t.a.g.f.AdvancedRateLimitFilter - Processing rate limit for: POST /api/gateway/payment/process from IP: 127.0.0.1, User: null
2025-06-30 23:03:22 [reactor-http-nio-7] DEBUG c.c.t.a.g.l.AdvancedRateLimiter - Tokens refilled for api_weight:NON_CORE: +260 tokens, total: 15
2025-06-30 23:03:22 [reactor-http-nio-7] DEBUG c.c.t.a.g.l.AdvancedRateLimiter - Token acquired for api_weight:NON_CORE: 1 tokens consumed, 14 remaining
2025-06-30 23:03:22 [reactor-http-nio-7] DEBUG c.c.t.a.g.filter.QPSMetricsFilter - QPS recorded - Path: /api/gateway/payment/process, IP: 127.0.0.1, User: anonymous, Priority: default
2025-06-30 23:03:22 [reactor-http-nio-7] DEBUG c.c.t.a.g.f.CircuitBreakerFilter - Using circuit breaker for API: /api/gateway/payment/process with priority: NON_CORE
2025-06-30 23:03:24 [reactor-http-nio-7] DEBUG c.c.t.a.g.f.ServiceDegradationGatewayFilter - Service degradation filter - Service: payment-service, Path: /api/payment/process, Level: CORE
2025-06-30 23:03:46 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Performing periodic health check
2025-06-30 23:04:53 [reactor-http-nio-7] ERROR c.c.t.a.g.f.ServiceDegradationGatewayFilter - Service error detected - Service: payment-service, Path: /api/payment/process, Error: null
2025-06-30 23:04:54 [boundedElastic-7] INFO  c.c.t.a.g.t.ReactiveTraceScheduler - Reactive Trace Statistics - Manager: Total=6, Sampled=6, Active=6, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0
2025-06-30 23:04:54 [reactor-http-nio-7] DEBUG c.c.t.a.g.f.ServiceDegradationGatewayFilter - Error type NullPointerException is in non-degradation list
2025-06-30 23:04:54 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Performing periodic health check
2025-06-30 23:05:00 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Cleaning up expired instances
2025-06-30 23:05:00 [scheduling-1] DEBUG c.c.t.a.g.s.QPSCleanupScheduler - Starting scheduled QPS data cleanup...
2025-06-30 23:05:01 [scheduling-1] DEBUG c.c.t.api.gateway.metrics.QPSMetrics - Cleaned 1 expired API QPS entries
2025-06-30 23:05:01 [scheduling-1] DEBUG c.c.t.api.gateway.metrics.QPSMetrics - Cleaned 1 expired IP QPS entries
2025-06-30 23:05:01 [scheduling-1] DEBUG c.c.t.api.gateway.metrics.QPSMetrics - Cleaned 1 expired User QPS entries
2025-06-30 23:05:01 [scheduling-1] DEBUG c.c.t.api.gateway.metrics.QPSMetrics - Cleaned 1 expired Priority QPS entries
2025-06-30 23:05:01 [scheduling-1] INFO  c.c.t.api.gateway.metrics.QPSMetrics - Manual cleanup completed. Total cleaned: 4, Active entries: API=0, IP=0, User=0, Priority=0
2025-06-30 23:05:01 [scheduling-1] DEBUG c.c.t.a.g.s.QPSCleanupScheduler - Scheduled QPS data cleanup completed
2025-06-30 23:05:01 [scheduling-1] INFO  c.c.t.a.g.t.AdaptiveTraceScheduler - Adaptive Trace Statistics - Manager: Total=6, Sampled=6, Active=6, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0, Multiplier: 1.0
2025-06-30 23:05:02 [scheduling-1] INFO  c.c.t.a.g.tracing.TraceScheduler - Trace Statistics - Manager: Total=6, Sampled=6, Active=6, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0
2025-06-30 23:05:02 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Performing periodic health check
2025-06-30 23:05:02 [reactor-http-nio-7] INFO  c.c.t.a.g.f.ServiceDegradationGatewayFilter - Not triggering degradation for error type - Service: payment-service, Error: NullPointerException
2025-06-30 23:06:32 [boundedElastic-2] INFO  c.c.t.a.g.t.ReactiveTraceScheduler - Reactive Trace Statistics - Manager: Total=6, Sampled=6, Active=6, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0
2025-06-30 23:06:32 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Performing periodic health check
2025-06-30 23:06:32 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Cleaning up expired instances
2025-06-30 23:06:32 [boundedElastic-10] INFO  c.c.t.a.g.t.ReactiveTraceScheduler - Reactive Trace Statistics - Manager: Total=6, Sampled=6, Active=6, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0
2025-06-30 23:06:32 [scheduling-1] DEBUG c.c.t.a.g.s.QPSCleanupScheduler - Starting scheduled QPS data cleanup...
2025-06-30 23:06:32 [scheduling-1] INFO  c.c.t.api.gateway.metrics.QPSMetrics - Manual cleanup completed. Total cleaned: 0, Active entries: API=0, IP=0, User=0, Priority=0
2025-06-30 23:06:32 [scheduling-1] DEBUG c.c.t.a.g.s.QPSCleanupScheduler - Scheduled QPS data cleanup completed
2025-06-30 23:06:32 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Performing periodic health check
2025-06-30 23:06:32 [reactor-http-nio-8] DEBUG r.n.http.server.HttpServerOperations - [065cd329, L:/127.0.0.1:8080 - R:/127.0.0.1:49496] New http connection, requesting read
2025-06-30 23:06:32 [reactor-http-nio-8] DEBUG r.netty.transport.TransportConfig - [065cd329, L:/127.0.0.1:8080 - R:/127.0.0.1:49496] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpServerCodec), (reactor.left.httpTrafficHandler = reactor.netty.http.server.HttpTrafficHandler), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2025-06-30 23:06:32 [scheduling-1] INFO  c.c.t.a.g.t.AdaptiveTraceScheduler - Adaptive Trace Statistics - Manager: Total=6, Sampled=6, Active=6, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0, Multiplier: 1.0
2025-06-30 23:06:32 [reactor-http-nio-7] DEBUG r.n.http.server.HttpServerOperations - [def0b27d-1, L:/127.0.0.1:8080 - R:/127.0.0.1:65235] Last HTTP response frame
2025-06-30 23:06:32 [reactor-http-nio-7] DEBUG r.n.http.server.HttpServerOperations - [def0b27d-1, L:/127.0.0.1:8080 - R:/127.0.0.1:65235] Headers are not sent before onComplete().
2025-06-30 23:06:32 [scheduling-1] INFO  c.c.t.a.g.tracing.TraceScheduler - Trace Statistics - Manager: Total=6, Sampled=6, Active=6, SamplingRate=1.0, Reporter: Enabled=false, QueueSize=0, Reported=0, Failed=0
2025-06-30 23:06:32 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Performing periodic health check
2025-06-30 23:06:32 [scheduling-1] DEBUG c.c.t.a.g.d.ServiceDiscoveryManager - Cleaning up expired instances
2025-06-30 23:06:32 [scheduling-1] DEBUG c.c.t.a.g.s.QPSCleanupScheduler - Starting scheduled QPS data cleanup...
2025-06-30 23:06:32 [scheduling-1] INFO  c.c.t.api.gateway.metrics.QPSMetrics - Manual cleanup completed. Total cleaned: 0, Active entries: API=0, IP=0, User=0, Priority=0
2025-06-30 23:06:32 [scheduling-1] DEBUG c.c.t.a.g.s.QPSCleanupScheduler - Scheduled QPS data cleanup completed
2025-06-30 23:06:32 [reactor-http-nio-7] DEBUG r.n.http.server.HttpServerOperations - [def0b27d-1, L:/127.0.0.1:8080 - R:/127.0.0.1:65235] Decreasing pending responses count: 0
2025-06-30 23:06:32 [reactor-http-nio-8] DEBUG r.n.http.server.HttpServerOperations - [065cd329, L:/127.0.0.1:8080 - R:/127.0.0.1:49496] Increasing pending responses count: 1
2025-06-30 23:06:32 [reactor-http-nio-8] DEBUG r.netty.http.server.HttpServer - [065cd329-1, L:/127.0.0.1:8080 - R:/127.0.0.1:49496] Handler is being applied: org.springframework.http.server.reactive.ReactorHttpHandlerAdapter@2745b14f
2025-06-30 23:06:32 [reactor-http-nio-8] DEBUG o.s.c.g.h.RoutePredicateHandlerMapping - Route matched: payment-route
2025-06-30 23:06:32 [reactor-http-nio-8] DEBUG o.s.c.g.h.RoutePredicateHandlerMapping - Mapping [Exchange: POST http://localhost:8080/api/gateway/payment/process] to Route{id='payment-route', uri=http://localhost:8081, order=0, predicate=Paths: [/api/gateway/payment/**], match trailing slash: true, gatewayFilters=[[[RewritePath /api/gateway/payment/(?<segment>.*) = '/api/payment/${segment}'], order = 0], com.citi.tts.api.gateway.filter.AdvancedRateLimitFilter@41d877bb, [com.citi.tts.api.gateway.filter.ServiceDegradationGatewayFilter$1@200b83c6, order = 0], com.citi.tts.api.gateway.filter.CircuitBreakerFilter@f9cd1e6, [com.citi.tts.api.gateway.filter.CryptoFilter@1b5cf611, order = 0]], metadata={}}
2025-06-30 23:06:32 [reactor-http-nio-8] DEBUG o.s.c.g.h.RoutePredicateHandlerMapping - [065cd329-7] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@209b4b35
2025-06-30 23:06:32 [reactor-http-nio-8] DEBUG o.s.c.g.handler.FilteringWebHandler - Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@48cbe1c9}, order = -2147483648], [GatewayFilterAdapter{delegate=com.citi.tts.api.gateway.tracing.TraceFilter@2a19c36b}, order = -2147483598], com.citi.tts.api.gateway.filter.AdvancedRateLimitFilter@41d877bb, [GatewayFilterAdapter{delegate=com.citi.tts.api.gateway.filter.QPSMetricsFilter@296bfddb}, order = -2147483548], com.citi.tts.api.gateway.filter.CircuitBreakerFilter@f9cd1e6, [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@6a6a3fc4}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@21b2579d}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@6ca30886}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@2a666c8e}, order = 0], [[RewritePath /api/gateway/payment/(?<segment>.*) = '/api/payment/${segment}'], order = 0], [com.citi.tts.api.gateway.filter.ServiceDegradationGatewayFilter$1@200b83c6, order = 0], [com.citi.tts.api.gateway.filter.CryptoFilter@1b5cf611, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@67e628b}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ReactiveLoadBalancerClientFilter@351d726c}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.LoadBalancerServiceInstanceCookieFilter@1791396b}, order = 10151], [GatewayFilterAdapter{delegate=com.citi.tts.api.gateway.filter.ServiceDegradationFilter@3ea6faf0}, order = 2147483547], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@69b80603}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@22ea6051}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@578c99ac}, order = 2147483647]]
2025-06-30 23:06:32 [reactor-http-nio-8] DEBUG c.c.t.a.gateway.tracing.TraceContext - Created root trace context: 50813e11ca0f4b8a8b2471d5f1b6ac24
2025-06-30 23:06:32 [reactor-http-nio-8] DEBUG c.c.t.a.gateway.tracing.TraceManager - Created new sampled trace context: 50813e11ca0f4b8a8b2471d5f1b6ac24
2025-06-30 23:06:32 [reactor-http-nio-8] DEBUG c.c.t.a.g.f.AdvancedRateLimitFilter - Processing rate limit for: POST /api/gateway/payment/process from IP: 127.0.0.1, User: null
2025-06-30 23:06:32 [reactor-http-nio-8] DEBUG c.c.t.a.g.l.AdvancedRateLimiter - Tokens refilled for api_weight:NON_CORE: +1910 tokens, total: 15
2025-06-30 23:06:32 [reactor-http-nio-8] DEBUG c.c.t.a.g.l.AdvancedRateLimiter - Token acquired for api_weight:NON_CORE: 1 tokens consumed, 14 remaining
2025-06-30 23:06:32 [reactor-http-nio-8] DEBUG c.c.t.a.g.filter.QPSMetricsFilter - QPS recorded - Path: /api/gateway/payment/process, IP: 127.0.0.1, User: anonymous, Priority: default
2025-06-30 23:06:32 [reactor-http-nio-8] DEBUG c.c.t.a.g.f.CircuitBreakerFilter - Using circuit breaker for API: /api/gateway/payment/process with priority: NON_CORE
2025-06-30 23:06:32 [reactor-http-nio-8] DEBUG c.c.t.a.g.f.ServiceDegradationGatewayFilter - Service degradation filter - Service: payment-service, Path: /api/payment/process, Level: CORE
2025-06-30 23:06:32 [reactor-http-nio-7] DEBUG r.n.http.server.HttpServerOperations - [def0b27d-1, L:/127.0.0.1:8080 ! R:/127.0.0.1:65235] Sending last HTTP packet was not successful, terminating the channel
java.io.IOException: Broken pipe
	at java.base/sun.nio.ch.SocketDispatcher.write0(Native Method)
	at java.base/sun.nio.ch.SocketDispatcher.write(SocketDispatcher.java:62)
	at java.base/sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:137)
	at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:81)
	at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:58)
	at java.base/sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:542)
	at io.netty.channel.socket.nio.NioSocketChannel.doWrite(NioSocketChannel.java:414)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush0(AbstractChannel.java:929)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.flush0(AbstractNioChannel.java:359)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush(AbstractChannel.java:893)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.flush(DefaultChannelPipeline.java:1319)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:935)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:921)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:907)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.flush(CombinedChannelDuplexHandler.java:531)
	at io.netty.channel.ChannelOutboundHandlerAdapter.flush(ChannelOutboundHandlerAdapter.java:125)
	at io.netty.channel.CombinedChannelDuplexHandler.flush(CombinedChannelDuplexHandler.java:356)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:937)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:921)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:907)
	at reactor.netty.http.server.HttpTrafficHandler.flush(HttpTrafficHandler.java:352)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:937)
	at io.netty.channel.AbstractChannelHandlerContext.invokeWriteAndFlush(AbstractChannelHandlerContext.java:957)
	at io.netty.channel.AbstractChannelHandlerContext.write(AbstractChannelHandlerContext.java:982)
	at io.netty.channel.AbstractChannelHandlerContext.writeAndFlush(AbstractChannelHandlerContext.java:950)
	at io.netty.channel.AbstractChannelHandlerContext.writeAndFlush(AbstractChannelHandlerContext.java:1000)
	at io.netty.channel.DefaultChannelPipeline.writeAndFlush(DefaultChannelPipeline.java:974)
	at io.netty.channel.AbstractChannel.writeAndFlush(AbstractChannel.java:305)
	at reactor.netty.http.server.HttpServerOperations.onOutboundComplete(HttpServerOperations.java:981)
	at reactor.netty.channel.ChannelOperations.onComplete(ChannelOperations.java:258)
	at reactor.netty.http.server.HttpServerOperations.lambda$send$1(HttpServerOperations.java:560)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:132)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.MonoCallable$MonoCallableSubscription.request(MonoCallable.java:156)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.request(FluxPeekFuseable.java:783)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.FluxConcatArray$ConcatArraySubscriber.onSubscribe(FluxConcatArray.java:172)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:633)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onSubscribe(FluxContextWrite.java:101)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:633)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:633)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:96)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:633)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onSubscribe(FluxContextWrite.java:101)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:633)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onSubscribe(FluxPeekFuseable.java:816)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:633)
	at reactor.core.publisher.MonoCallable.subscribe(MonoCallable.java:48)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxConcatArray$ConcatArraySubscriber.onComplete(FluxConcatArray.java:238)
	at reactor.core.publisher.FluxConcatArray.subscribe(FluxConcatArray.java:79)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxFlatMap.trySubscribeScalarMap(FluxFlatMap.java:202)
	at reactor.core.publisher.MonoFlatMap.subscribeOrReturn(MonoFlatMap.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4560)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:544)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:49)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:38)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.FluxFlatMap.trySubscribeScalarMap(FluxFlatMap.java:202)
	at reactor.core.publisher.MonoFlatMap.subscribeOrReturn(MonoFlatMap.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:63)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerNext(FluxConcatMapNoPrefetch.java:259)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:865)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.drain(FluxFilterWhen.java:272)
	at reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.request(FluxFilterWhen.java:160)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request(Operators.java:2330)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:339)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:108)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:649)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2366)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2240)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:633)
	at reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:70)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:633)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onSubscribe(FluxConcatMapNoPrefetch.java:164)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:633)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1324)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:722)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
	at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:864)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:790)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:333)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:455)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-06-30 23:06:32 [reactor-http-nio-7] DEBUG r.netty.channel.ChannelOperations - [def0b27d-1, L:/127.0.0.1:8080 ! R:/127.0.0.1:65235] [HttpServer] Channel inbound receiver cancelled (channel disconnected).
2025-06-30 23:06:32 [reactor-http-nio-7] DEBUG i.g.r.c.i.CircuitBreakerStateMachine - CircuitBreaker 'nonCoreApiCircuitBreaker' succeeded:
2025-06-30 23:06:32 [reactor-http-nio-7] DEBUG c.c.t.a.gateway.tracing.TraceContext - Finished trace: d23056f29abe43cb87b1cceb62a11dd3 with status: 500
2025-06-30 23:06:32 [reactor-http-nio-8] ERROR c.c.t.a.g.f.ServiceDegradationGatewayFilter - Service error detected - Service: payment-service, Path: /api/payment/process, Error: null
2025-06-30 23:06:32 [reactor-http-nio-8] DEBUG c.c.t.a.g.f.ServiceDegradationGatewayFilter - Error type NullPointerException is in non-degradation list
2025-06-30 23:06:32 [reactor-http-nio-8] ERROR c.c.t.a.g.f.ServiceDegradationGatewayFilter - Not triggering degradation for error type - Service: payment-service, Error: NullPointerException
2025-06-30 23:06:32 [reactor-http-nio-8] DEBUG r.n.http.server.HttpServerOperations - [065cd329-1, L:/127.0.0.1:8080 - R:/127.0.0.1:49496] Last HTTP response frame
2025-06-30 23:06:32 [reactor-http-nio-8] DEBUG r.n.http.server.HttpServerOperations - [065cd329-1, L:/127.0.0.1:8080 - R:/127.0.0.1:49496] Headers are not sent before onComplete().
2025-06-30 23:06:32 [reactor-http-nio-8] DEBUG r.n.http.server.HttpServerOperations - [065cd329-1, L:/127.0.0.1:8080 - R:/127.0.0.1:49496] Decreasing pending responses count: 0
2025-06-30 23:06:32 [reactor-http-nio-8] DEBUG r.n.http.server.HttpServerOperations - [065cd329-1, L:/127.0.0.1:8080 - R:/127.0.0.1:49496] Last HTTP packet was sent, terminating the channel
2025-06-30 23:06:32 [reactor-http-nio-8] DEBUG r.netty.channel.ChannelOperations - [065cd329-1, L:/127.0.0.1:8080 - R:/127.0.0.1:49496] [HttpServer] Channel inbound receiver cancelled (subscription disposed).
2025-06-30 23:06:32 [reactor-http-nio-8] DEBUG i.g.r.c.i.CircuitBreakerStateMachine - CircuitBreaker 'nonCoreApiCircuitBreaker' succeeded:
2025-06-30 23:06:32 [reactor-http-nio-8] DEBUG c.c.t.a.gateway.tracing.TraceContext - Finished trace: 50813e11ca0f4b8a8b2471d5f1b6ac24 with status: 500
2025-06-30 23:06:32 [reactor-http-nio-8] DEBUG c.c.t.a.g.audit.AsyncAuditService - Audit log queued: trace - {"traceId":"50813e11ca0f4b8a8b2471d5f1b6ac24","spanId":"b5fb208da9f245a5","parentSpanId":null,"requestId":"f5d2c325-ade3-429b-93a7-e8ef33b06586","correlationId":null,"userId":null,"tenantId":null,"serviceName":"api-gateway","operationName":"POST /api/gateway/payment/process","startTime":1751295992759,"endTime":1751295992778,"statusCode":500,"errorMessage":"HTTP 500 500 INTERNAL_SERVER_ERROR","tags":{"duration.ms":"20","http.port":"8080","http.path":"/api/gateway/payment/process","client.ip":"127.0.0.1","error":"true","signal.type":"ON_COMPLETE","http.host":"localhost","http.status_code":"500","user.agent":"IntelliJ HTTP Client/IntelliJ IDEA 2025.1.3","response.content_type":"application/json","error.message":"HTTP 500 500 INTERNAL_SERVER_ERROR","http.method":"POST"},"events":[{"name":"request.start","message":"Request processing started","timestamp":1751295992760,"tags":{}}],"childSpans":[],"sampled":true,"level":"INFO","traceHeaders":{"X-Span-ID":"b5fb208da9f245a5","X-Request-ID":"f5d2c325-ade3-429b-93a7-e8ef33b06586","X-Correlation-ID":null,"X-Trace-ID":"50813e11ca0f4b8a8b2471d5f1b6ac24","X-Sampled":"true"},"durationMs":19}
2025-06-30 23:06:32 [reactor-http-nio-7] DEBUG c.c.t.a.g.audit.AsyncAuditService - Audit log queued: trace - {"traceId":"d23056f29abe43cb87b1cceb62a11dd3","spanId":"eb92e8365f584194","parentSpanId":null,"requestId":"2f915bf9-6d4b-487c-a57b-884537324860","correlationId":null,"userId":null,"tenantId":null,"serviceName":"api-gateway","operationName":"POST /api/gateway/payment/process","startTime":1751295802192,"endTime":1751295992769,"statusCode":500,"errorMessage":"HTTP 500 500 INTERNAL_SERVER_ERROR","tags":{"duration.ms":"190577","http.port":"8080","http.path":"/api/gateway/payment/process","client.ip":"127.0.0.1","error":"true","signal.type":"ON_COMPLETE","http.host":"localhost","http.status_code":"500","user.agent":"IntelliJ HTTP Client/IntelliJ IDEA 2025.1.3","response.content_type":"application/json","error.message":"HTTP 500 500 INTERNAL_SERVER_ERROR","http.method":"POST"},"events":[{"name":"request.start","message":"Request processing started","timestamp":1751295802194,"tags":{}}],"childSpans":[],"sampled":true,"level":"INFO","traceHeaders":{"X-Span-ID":"eb92e8365f584194","X-Request-ID":"2f915bf9-6d4b-487c-a57b-884537324860","X-Correlation-ID":null,"X-Trace-ID":"d23056f29abe43cb87b1cceb62a11dd3","X-Sampled":"true"},"durationMs":190577}
2025-06-30 23:06:32 [reactor-http-nio-8] DEBUG c.c.t.a.gateway.tracing.TraceFilter - Trace completed - TraceId: 50813e11ca0f4b8a8b2471d5f1b6ac24, SpanId: b5fb208da9f245a5, Duration: 20ms, Status: 500, Path: /api/gateway/payment/process
2025-06-30 23:06:32 [reactor-http-nio-7] DEBUG c.c.t.a.gateway.tracing.TraceFilter - Trace completed - TraceId: d23056f29abe43cb87b1cceb62a11dd3, SpanId: eb92e8365f584194, Duration: 190577ms, Status: 500, Path: /api/gateway/payment/process
2025-06-30 23:06:32 [reactor-http-nio-8] WARN  c.c.t.a.gateway.tracing.TraceFilter - Error request detected - TraceId: 50813e11ca0f4b8a8b2471d5f1b6ac24, Status: 500, Path: /api/gateway/payment/process, Error: HTTP 500 500 INTERNAL_SERVER_ERROR
2025-06-30 23:06:32 [reactor-http-nio-7] WARN  c.c.t.a.gateway.tracing.TraceFilter - Slow request detected - TraceId: d23056f29abe43cb87b1cceb62a11dd3, Duration: 190577ms, Path: /api/gateway/payment/process
2025-06-30 23:06:32 [reactor-http-nio-8] DEBUG r.n.channel.ChannelOperationsHandler - [065cd329, L:/127.0.0.1:8080 - R:/127.0.0.1:49496] No ChannelOperation attached.
2025-06-30 23:06:32 [reactor-http-nio-7] WARN  c.c.t.a.gateway.tracing.TraceFilter - Error request detected - TraceId: d23056f29abe43cb87b1cceb62a11dd3, Status: 500, Path: /api/gateway/payment/process, Error: HTTP 500 500 INTERNAL_SERVER_ERROR
2025-06-30 23:06:32 [reactor-http-nio-7] DEBUG r.n.channel.ChannelOperationsHandler - [def0b27d, L:/127.0.0.1:8080 ! R:/127.0.0.1:65235] No ChannelOperation attached.
2025-06-30 23:06:32 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.netty.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-06-30 23:06:32 [netty-shutdown] DEBUG r.netty.transport.ServerTransport - [f01ca5b0, L:/[0:0:0:0:0:0:0:0]:8080] Server is about to be disposed with timeout: PT2562047H47M16.854775807S
2025-06-30 23:06:32 [netty-shutdown] INFO  o.s.b.w.e.netty.GracefulShutdown - Graceful shutdown complete
2025-06-30 23:06:32 [SpringApplicationShutdownHook] DEBUG r.netty.transport.ServerTransport - [f01ca5b0, L:/[0:0:0:0:0:0:0:0]:8080] Server has been disposed
2025-06-30 23:06:33 [async-audit-scheduler] INFO  c.c.t.a.g.audit.AsyncAuditService - === Batch Audit Log ===
Timestamp: 2025-06-30T23:06:33.146935
Batch Size: 2
Entries:
[2025-06-30T23:06:32.793] trace: {"traceId":"50813e11ca0f4b8a8b2471d5f1b6ac24","spanId":"b5fb208da9f245a5","parentSpanId":null,"requestId":"f5d2c325-ade3-429b-93a7-e8ef33b06586","correlationId":null,"userId":null,"tenantId":null,"serviceName":"api-gateway","operationName":"POST /api/gateway/payment/process","startTime":1751295992759,"endTime":1751295992778,"statusCode":500,"errorMessage":"HTTP 500 500 INTERNAL_SERVER_ERROR","tags":{"duration.ms":"20","http.port":"8080","http.path":"/api/gateway/payment/process","client.ip":"127.0.0.1","error":"true","signal.type":"ON_COMPLETE","http.host":"localhost","http.status_code":"500","user.agent":"IntelliJ HTTP Client/IntelliJ IDEA 2025.1.3","response.content_type":"application/json","error.message":"HTTP 500 500 INTERNAL_SERVER_ERROR","http.method":"POST"},"events":[{"name":"request.start","message":"Request processing started","timestamp":1751295992760,"tags":{}}],"childSpans":[],"sampled":true,"level":"INFO","traceHeaders":{"X-Span-ID":"b5fb208da9f245a5","X-Request-ID":"f5d2c325-ade3-429b-93a7-e8ef33b06586","X-Correlation-ID":null,"X-Trace-ID":"50813e11ca0f4b8a8b2471d5f1b6ac24","X-Sampled":"true"},"durationMs":19}
[2025-06-30T23:06:32.793] trace: {"traceId":"d23056f29abe43cb87b1cceb62a11dd3","spanId":"eb92e8365f584194","parentSpanId":null,"requestId":"2f915bf9-6d4b-487c-a57b-884537324860","correlationId":null,"userId":null,"tenantId":null,"serviceName":"api-gateway","operationName":"POST /api/gateway/payment/process","startTime":1751295802192,"endTime":1751295992769,"statusCode":500,"errorMessage":"HTTP 500 500 INTERNAL_SERVER_ERROR","tags":{"duration.ms":"190577","http.port":"8080","http.path":"/api/gateway/payment/process","client.ip":"127.0.0.1","error":"true","signal.type":"ON_COMPLETE","http.host":"localhost","http.status_code":"500","user.agent":"IntelliJ HTTP Client/IntelliJ IDEA 2025.1.3","response.content_type":"application/json","error.message":"HTTP 500 500 INTERNAL_SERVER_ERROR","http.method":"POST"},"events":[{"name":"request.start","message":"Request processing started","timestamp":1751295802194,"tags":{}}],"childSpans":[],"sampled":true,"level":"INFO","traceHeaders":{"X-Span-ID":"eb92e8365f584194","X-Request-ID":"2f915bf9-6d4b-487c-a57b-884537324860","X-Correlation-ID":null,"X-Trace-ID":"d23056f29abe43cb87b1cceb62a11dd3","X-Sampled":"true"},"durationMs":190577}
=== End Batch ===

2025-06-30 23:06:33 [async-audit-scheduler] DEBUG c.c.t.a.g.audit.AsyncAuditService - Flushed 2 audit logs in batch
2025-06-30 23:06:34 [SpringApplicationShutdownHook] INFO  c.c.t.a.g.t.ReactiveTraceScheduler - Stopping reactive trace scheduler
2025-06-30 23:06:34 [SpringApplicationShutdownHook] INFO  c.c.t.a.g.audit.AsyncAuditService - Shutting down async audit service...
2025-06-30 23:06:39 [SpringApplicationShutdownHook] INFO  c.c.t.a.g.audit.AsyncAuditService - Async audit service shutdown completed
2025-06-30 23:06:39 [async-audit-worker] INFO  c.c.t.a.g.audit.AsyncAuditService - Async audit log processor stopped
